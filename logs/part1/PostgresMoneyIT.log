[INFO] Scanning for projects...
[INFO] Inspecting build with total of 1 modules...
[INFO] Installing Nexus Staging features:
[INFO]   ... total of 1 executions of maven-deploy-plugin replaced with nexus-staging-maven-plugin
[INFO] 
[INFO] --------------< io.debezium:debezium-connector-postgres >---------------
[INFO] Building Debezium Connector for PostgreSQL 3.0.3-SNAPSHOT
[INFO]   from pom.xml
[INFO] --------------------------------[ jar ]---------------------------------
[INFO] 
[INFO] --- clean:3.1.0:clean (default-clean) @ debezium-connector-postgres ---
[INFO] Deleting /Users/alvar/Projects/3.OpenSourceProjects/debezium/debezium-connector-postgres/target
[INFO] 
[INFO] --- enforcer:3.0.0-M2:enforce (enforce-java-version) @ debezium-connector-postgres ---
[INFO] 
[INFO] --- enforcer:3.0.0-M2:enforce (enforce-maven-version) @ debezium-connector-postgres ---
[INFO] 
[INFO] --- enforcer:3.0.0-M2:enforce (enforce-maven) @ debezium-connector-postgres ---
[INFO] 
[INFO] --- build-helper:1.9.1:parse-version (parse-version) @ debezium-connector-postgres ---
[INFO] 
[INFO] --- buildnumber:1.4:create (get-scm-revision) @ debezium-connector-postgres ---
[INFO] Executing: /bin/sh -c cd '/Users/alvar/Projects/3.OpenSourceProjects/debezium/debezium-connector-postgres' && 'git' 'rev-parse' '--verify' 'HEAD'
[INFO] Working directory: /Users/alvar/Projects/3.OpenSourceProjects/debezium/debezium-connector-postgres
[INFO] Storing buildNumber: 95c552cdfd94de9f20ddb2c0ab8215bf42efd1ee at timestamp: 1732121169439
[INFO] Storing buildScmBranch: main
[INFO] 
[INFO] --- protoc-jar:3.8.0:run (default) @ debezium-connector-postgres ---
[INFO] Resolving artifact: com.google.protobuf:protoc:3.25.5, platform: osx-x86_64
protoc-jar: executing: [/var/folders/4n/dchllbfn4l1cz563nncfnqzh0000gn/T/protoc11526588473694675183.exe, --version]
libprotoc 25.5
[INFO] Protoc command: /var/folders/4n/dchllbfn4l1cz563nncfnqzh0000gn/T/protoc11526588473694675183.exe
[INFO] Input directories:
[INFO]     /Users/alvar/Projects/3.OpenSourceProjects/debezium/debezium-connector-postgres/src/main/proto
[INFO] Output targets:
[INFO]     java: /Users/alvar/Projects/3.OpenSourceProjects/debezium/debezium-connector-postgres/generated-sources (add: main, clean: false, plugin: null, outputOptions: null)
[INFO]     Processing (java): pg_logicaldec.proto
protoc-jar: executing: [/var/folders/4n/dchllbfn4l1cz563nncfnqzh0000gn/T/protoc11526588473694675183.exe, -I/Users/alvar/Projects/3.OpenSourceProjects/debezium/debezium-connector-postgres/src/main/proto, --java_out=/Users/alvar/Projects/3.OpenSourceProjects/debezium/debezium-connector-postgres/generated-sources, /Users/alvar/Projects/3.OpenSourceProjects/debezium/debezium-connector-postgres/src/main/proto/pg_logicaldec.proto]
[INFO] Adding generated sources (java): /Users/alvar/Projects/3.OpenSourceProjects/debezium/debezium-connector-postgres/generated-sources
[INFO] 
[INFO] --- formatter:2.20.0:format (default) @ debezium-connector-postgres ---
[INFO] Processed 149 files in 1s679ms (Formatted: 0, Unchanged: 149, Failed: 0, Readonly: 0)
[INFO] 
[INFO] --- impsort:1.12.0:sort (sort-imports) @ debezium-connector-postgres ---
[INFO] Processed 149 files in 00:01.350 (Already Sorted: 149, Needed Sorting: 0)
[INFO] 
[INFO] --- resources:3.1.0:resources (default-resources) @ debezium-connector-postgres ---
[INFO] Using 'UTF-8' encoding to copy filtered resources.
[INFO] Copying 8 resources
[INFO] 
[INFO] --- compiler:3.8.1:compile (default-compile) @ debezium-connector-postgres ---
[INFO] Changes detected - recompiling the module!
[INFO] Compiling 87 source files to /Users/alvar/Projects/3.OpenSourceProjects/debezium/debezium-connector-postgres/target/classes
[WARNING] /Users/alvar/Projects/3.OpenSourceProjects/debezium/debezium-connector-postgres/src/main/java/io/debezium/connector/postgresql/connection/PostgresConnection.java:[605,54] getTimestampUtils() in org.postgresql.jdbc.PgConnection has been deprecated
[WARNING] /Users/alvar/Projects/3.OpenSourceProjects/debezium/debezium-connector-postgres/src/main/java/io/debezium/connector/postgresql/PostgresConnectorConfig.java:[193,9] deprecated item is not annotated with @Deprecated
[WARNING] /Users/alvar/Projects/3.OpenSourceProjects/debezium/debezium-connector-postgres/src/main/java/io/debezium/connector/postgresql/PostgresConnectorConfig.java:[1111,16] getConfig() in io.debezium.config.CommonConnectorConfig has been deprecated
[WARNING] /Users/alvar/Projects/3.OpenSourceProjects/debezium/debezium-connector-postgres/src/main/java/io/debezium/connector/postgresql/PostgresConnectorConfig.java:[1115,16] getConfig() in io.debezium.config.CommonConnectorConfig has been deprecated
[WARNING] /Users/alvar/Projects/3.OpenSourceProjects/debezium/debezium-connector-postgres/src/main/java/io/debezium/connector/postgresql/PostgresConnectorConfig.java:[1119,16] getConfig() in io.debezium.config.CommonConnectorConfig has been deprecated
[WARNING] /Users/alvar/Projects/3.OpenSourceProjects/debezium/debezium-connector-postgres/src/main/java/io/debezium/connector/postgresql/PostgresConnectorConfig.java:[1123,37] getConfig() in io.debezium.config.CommonConnectorConfig has been deprecated
[WARNING] /Users/alvar/Projects/3.OpenSourceProjects/debezium/debezium-connector-postgres/src/main/java/io/debezium/connector/postgresql/PostgresConnectorConfig.java:[1127,16] getConfig() in io.debezium.config.CommonConnectorConfig has been deprecated
[WARNING] /Users/alvar/Projects/3.OpenSourceProjects/debezium/debezium-connector-postgres/src/main/java/io/debezium/connector/postgresql/PostgresConnectorConfig.java:[1131,13] getConfig() in io.debezium.config.CommonConnectorConfig has been deprecated
[WARNING] /Users/alvar/Projects/3.OpenSourceProjects/debezium/debezium-connector-postgres/src/main/java/io/debezium/connector/postgresql/PostgresConnectorConfig.java:[1132,20] getConfig() in io.debezium.config.CommonConnectorConfig has been deprecated
[WARNING] /Users/alvar/Projects/3.OpenSourceProjects/debezium/debezium-connector-postgres/src/main/java/io/debezium/connector/postgresql/PostgresConnectorConfig.java:[1135,16] getConfig() in io.debezium.config.CommonConnectorConfig has been deprecated
[WARNING] /Users/alvar/Projects/3.OpenSourceProjects/debezium/debezium-connector-postgres/src/main/java/io/debezium/connector/postgresql/PostgresConnectorConfig.java:[1139,16] getConfig() in io.debezium.config.CommonConnectorConfig has been deprecated
[WARNING] /Users/alvar/Projects/3.OpenSourceProjects/debezium/debezium-connector-postgres/src/main/java/io/debezium/connector/postgresql/PostgresConnectorConfig.java:[1143,16] getConfig() in io.debezium.config.CommonConnectorConfig has been deprecated
[WARNING] /Users/alvar/Projects/3.OpenSourceProjects/debezium/debezium-connector-postgres/src/main/java/io/debezium/connector/postgresql/PostgresConnectorConfig.java:[1147,16] getConfig() in io.debezium.config.CommonConnectorConfig has been deprecated
[WARNING] /Users/alvar/Projects/3.OpenSourceProjects/debezium/debezium-connector-postgres/src/main/java/io/debezium/connector/postgresql/PostgresConnectorConfig.java:[1151,37] getConfig() in io.debezium.config.CommonConnectorConfig has been deprecated
[WARNING] /Users/alvar/Projects/3.OpenSourceProjects/debezium/debezium-connector-postgres/src/main/java/io/debezium/connector/postgresql/PostgresConnectorConfig.java:[1155,16] getConfig() in io.debezium.config.CommonConnectorConfig has been deprecated
[WARNING] /Users/alvar/Projects/3.OpenSourceProjects/debezium/debezium-connector-postgres/src/main/java/io/debezium/connector/postgresql/PostgresConnectorConfig.java:[1159,16] getConfig() in io.debezium.config.CommonConnectorConfig has been deprecated
[WARNING] /Users/alvar/Projects/3.OpenSourceProjects/debezium/debezium-connector-postgres/src/main/java/io/debezium/connector/postgresql/PostgresConnectorConfig.java:[1163,34] getConfig() in io.debezium.config.CommonConnectorConfig has been deprecated
[WARNING] /Users/alvar/Projects/3.OpenSourceProjects/debezium/debezium-connector-postgres/src/main/java/io/debezium/connector/postgresql/PostgresConnectorConfig.java:[1167,34] getConfig() in io.debezium.config.CommonConnectorConfig has been deprecated
[WARNING] /Users/alvar/Projects/3.OpenSourceProjects/debezium/debezium-connector-postgres/src/main/java/io/debezium/connector/postgresql/PostgresConnectorConfig.java:[1183,16] getConfig() in io.debezium.config.CommonConnectorConfig has been deprecated
[WARNING] /Users/alvar/Projects/3.OpenSourceProjects/debezium/debezium-connector-postgres/src/main/java/io/debezium/connector/postgresql/PostgresConnectorConfig.java:[1187,16] getConfig() in io.debezium.config.CommonConnectorConfig has been deprecated
[WARNING] /Users/alvar/Projects/3.OpenSourceProjects/debezium/debezium-connector-postgres/src/main/java/io/debezium/connector/postgresql/PostgresConnectorConfig.java:[1195,34] getConfig() in io.debezium.config.CommonConnectorConfig has been deprecated
[WARNING] /Users/alvar/Projects/3.OpenSourceProjects/debezium/debezium-connector-postgres/src/main/java/io/debezium/connector/postgresql/PostgresConnectorConfig.java:[1204,30] getConfig() in io.debezium.config.CommonConnectorConfig has been deprecated
[WARNING] /Users/alvar/Projects/3.OpenSourceProjects/debezium/debezium-connector-postgres/src/main/java/io/debezium/connector/postgresql/PostgresConnectorConfig.java:[1237,16] getConfig() in io.debezium.config.CommonConnectorConfig has been deprecated
[WARNING] /Users/alvar/Projects/3.OpenSourceProjects/debezium/debezium-connector-postgres/src/main/java/io/debezium/connector/postgresql/PostgresValueConverter.java:[735,52] unchecked cast
  required: java.util.List<java.lang.Object>
  found:    java.lang.Object
[WARNING] /Users/alvar/Projects/3.OpenSourceProjects/debezium/debezium-connector-postgres/src/main/java/io/debezium/connector/postgresql/PostgresValueConverter.java:[799,86] unchecked cast
  required: java.util.Map<java.lang.String,java.lang.String>
  found:    java.lang.Object
[WARNING] /Users/alvar/Projects/3.OpenSourceProjects/debezium/debezium-connector-postgres/src/main/java/io/debezium/connector/postgresql/PostgresValueConverter.java:[1259,114] unchecked cast
  required: java.util.Map<java.lang.String,java.lang.String>
  found:    java.lang.Object
[WARNING] /Users/alvar/Projects/3.OpenSourceProjects/debezium/debezium-connector-postgres/src/main/java/io/debezium/connector/postgresql/PostgresConnectorTask.java:[86,104] unchecked conversion
  required: io.debezium.spi.topic.TopicNamingStrategy<io.debezium.relational.TableId>
  found:    io.debezium.spi.topic.TopicNamingStrategy
[WARNING] /Users/alvar/Projects/3.OpenSourceProjects/debezium/debezium-connector-postgres/src/main/java/io/debezium/connector/postgresql/PostgresConnectorTask.java:[196,21] unchecked method invocation: method updateSchema in class io.debezium.connector.postgresql.PostgresChangeRecordEmitter is applied to given types
  required: io.debezium.pipeline.spi.Partition,io.debezium.spi.schema.DataCollectionId,io.debezium.pipeline.spi.ChangeRecordEmitter<io.debezium.connector.postgresql.PostgresPartition>
  found:    io.debezium.connector.postgresql.PostgresPartition,T,io.debezium.pipeline.spi.ChangeRecordEmitter
[WARNING] /Users/alvar/Projects/3.OpenSourceProjects/debezium/debezium-connector-postgres/src/main/java/io/debezium/connector/postgresql/PostgresConnectorTask.java:[189,65] unchecked method invocation: constructor <init> in class io.debezium.connector.postgresql.PostgresEventDispatcher is applied to given types
  required: io.debezium.connector.postgresql.PostgresConnectorConfig,io.debezium.spi.topic.TopicNamingStrategy<T>,io.debezium.schema.DatabaseSchema<T>,io.debezium.connector.base.ChangeEventQueue<io.debezium.pipeline.DataChangeEvent>,io.debezium.schema.DataCollectionFilters.DataCollectionFilter<T>,io.debezium.pipeline.spi.ChangeEventCreator,io.debezium.pipeline.EventDispatcher.InconsistentSchemaHandler<io.debezium.connector.postgresql.PostgresPartition,T>,io.debezium.pipeline.source.spi.EventMetadataProvider,io.debezium.heartbeat.Heartbeat,io.debezium.schema.SchemaNameAdjuster,io.debezium.pipeline.signal.SignalProcessor<io.debezium.connector.postgresql.PostgresPartition,io.debezium.connector.postgresql.PostgresOffsetContext>
  found:    io.debezium.connector.postgresql.PostgresConnectorConfig,io.debezium.spi.topic.TopicNamingStrategy<io.debezium.relational.TableId>,io.debezium.connector.postgresql.PostgresSchema,io.debezium.connector.base.ChangeEventQueue<io.debezium.pipeline.DataChangeEvent>,io.debezium.relational.Tables.TableFilter,io.debezium.pipeline.spi.ChangeEventCreator,io.debezium.pipeline.EventDispatcher.InconsistentSchemaHandler<io.debezium.connector.postgresql.PostgresPartition,io.debezium.relational.TableId>,io.debezium.connector.postgresql.PostgresEventMetadataProvider,io.debezium.heartbeat.Heartbeat,io.debezium.schema.SchemaNameAdjuster,io.debezium.pipeline.signal.SignalProcessor<io.debezium.connector.postgresql.PostgresPartition,io.debezium.connector.postgresql.PostgresOffsetContext>
[WARNING] /Users/alvar/Projects/3.OpenSourceProjects/debezium/debezium-connector-postgres/src/main/java/io/debezium/connector/postgresql/PostgresConnectorTask.java:[189,65] unchecked conversion
  required: io.debezium.connector.postgresql.PostgresEventDispatcher<io.debezium.relational.TableId>
  found:    io.debezium.connector.postgresql.PostgresEventDispatcher
[WARNING] /Users/alvar/Projects/3.OpenSourceProjects/debezium/debezium-connector-postgres/src/main/java/io/debezium/connector/postgresql/PostgresConnector.java:[171,26] getMatchingCollections(io.debezium.config.Configuration) in io.debezium.connector.postgresql.PostgresConnector overrides <T>getMatchingCollections(io.debezium.config.Configuration) in io.debezium.connector.common.BaseSourceConnector
  return type requires unchecked conversion from java.util.List<io.debezium.relational.TableId> to java.util.List<T>
[WARNING] /Users/alvar/Projects/3.OpenSourceProjects/debezium/debezium-connector-postgres/src/main/java/io/debezium/connector/postgresql/PostgresChangeRecordEmitter.java:[100,30] unchecked call to changeRecord(P,io.debezium.schema.DataCollectionSchema,io.debezium.data.Envelope.Operation,java.lang.Object,org.apache.kafka.connect.data.Struct,io.debezium.pipeline.spi.OffsetContext,org.apache.kafka.connect.header.ConnectHeaders) as a member of the raw type io.debezium.pipeline.spi.ChangeRecordEmitter.Receiver
[INFO] 
[INFO] --- resources:3.1.0:testResources (default-testResources) @ debezium-connector-postgres ---
[INFO] Using 'UTF-8' encoding to copy filtered resources.
[INFO] Copying 13 resources
[INFO] 
[INFO] --- compiler:3.8.1:testCompile (default-testCompile) @ debezium-connector-postgres ---
[INFO] Changes detected - recompiling the module!
[INFO] Compiling 63 source files to /Users/alvar/Projects/3.OpenSourceProjects/debezium/debezium-connector-postgres/target/test-classes
[INFO] Annotation processing is enabled because one or more processors were found
  on the class path. A future release of javac may disable annotation processing
  unless at least one processor is specified by name (-processor), or a search
  path is specified (--processor-path, --processor-module-path), or annotation
  processing is enabled explicitly (-proc:only, -proc:full).
  Use -Xlint:-options to suppress this message.
  Use -proc:none to disable annotation processing.
[WARNING] /Users/alvar/Projects/3.OpenSourceProjects/debezium/debezium-connector-postgres/src/test/java/io/debezium/connector/postgresql/TestHelper.java:[294,16] unchecked method invocation: constructor <init> in class io.debezium.connector.postgresql.PostgresSchema is applied to given types
  required: io.debezium.connector.postgresql.PostgresConnectorConfig,io.debezium.connector.postgresql.connection.PostgresDefaultValueConverter,io.debezium.spi.topic.TopicNamingStrategy<io.debezium.relational.TableId>,io.debezium.connector.postgresql.PostgresValueConverter
  found:    io.debezium.connector.postgresql.PostgresConnectorConfig,io.debezium.connector.postgresql.connection.PostgresDefaultValueConverter,io.debezium.spi.topic.TopicNamingStrategy,io.debezium.connector.postgresql.PostgresValueConverter
[WARNING] /Users/alvar/Projects/3.OpenSourceProjects/debezium/debezium-connector-postgres/src/test/java/io/debezium/connector/postgresql/TestHelper.java:[297,17] unchecked conversion
  required: io.debezium.spi.topic.TopicNamingStrategy<io.debezium.relational.TableId>
  found:    io.debezium.spi.topic.TopicNamingStrategy
[WARNING] /Users/alvar/Projects/3.OpenSourceProjects/debezium/debezium-connector-postgres/src/test/java/io/debezium/connector/postgresql/PostgresConnectorIT.java:[415,50] getConfig() in io.debezium.config.CommonConnectorConfig has been deprecated
[WARNING] /Users/alvar/Projects/3.OpenSourceProjects/debezium/debezium-connector-postgres/src/test/java/io/debezium/connector/postgresql/PostgresConnectorIT.java:[456,50] getConfig() in io.debezium.config.CommonConnectorConfig has been deprecated
[WARNING] /Users/alvar/Projects/3.OpenSourceProjects/debezium/debezium-connector-postgres/src/test/java/io/debezium/connector/postgresql/PostgresConnectorIT.java:[512,50] getConfig() in io.debezium.config.CommonConnectorConfig has been deprecated
[WARNING] /Users/alvar/Projects/3.OpenSourceProjects/debezium/debezium-connector-postgres/src/test/java/io/debezium/connector/postgresql/PostgresConnectorIT.java:[594,50] getConfig() in io.debezium.config.CommonConnectorConfig has been deprecated
[WARNING] /Users/alvar/Projects/3.OpenSourceProjects/debezium/debezium-connector-postgres/src/test/java/io/debezium/connector/postgresql/PostgresConnectorIT.java:[670,50] getConfig() in io.debezium.config.CommonConnectorConfig has been deprecated
[WARNING] /Users/alvar/Projects/3.OpenSourceProjects/debezium/debezium-connector-postgres/src/test/java/io/debezium/connector/postgresql/PostgresConnectorIT.java:[702,50] getConfig() in io.debezium.config.CommonConnectorConfig has been deprecated
[WARNING] /Users/alvar/Projects/3.OpenSourceProjects/debezium/debezium-connector-postgres/src/test/java/io/debezium/connector/postgresql/rest/DebeziumPostgresConnectorResourceIT.java:[94,33] unchecked generic array creation for varargs parameter of type java.util.Map<java.lang.String,java.lang.String>[]
[WARNING] /Users/alvar/Projects/3.OpenSourceProjects/debezium/debezium-connector-postgres/src/test/java/io/debezium/connector/postgresql/rest/DebeziumPostgresConnectorResourceIT.java:[116,33] unchecked generic array creation for varargs parameter of type java.util.Map<java.lang.String,java.lang.String>[]
[WARNING] /Users/alvar/Projects/3.OpenSourceProjects/debezium/debezium-connector-postgres/src/test/java/io/debezium/connector/postgresql/rest/DebeziumPostgresConnectorResourceIT.java:[139,33] unchecked generic array creation for varargs parameter of type java.util.Map<java.lang.String,java.lang.String>[]
[WARNING] /Users/alvar/Projects/3.OpenSourceProjects/debezium/debezium-connector-postgres/src/test/java/io/debezium/connector/postgresql/rest/DebeziumPostgresConnectorResourceIT.java:[159,33] unchecked generic array creation for varargs parameter of type java.util.Map<java.lang.String,java.lang.String>[]
[WARNING] /Users/alvar/Projects/3.OpenSourceProjects/debezium/debezium-connector-postgres/src/test/java/io/debezium/connector/postgresql/TransactionMetadataIT.java:[120,85] unchecked cast
  required: java.util.Map<java.lang.String,java.lang.Object>
  found:    java.util.Map<java.lang.String,capture#1 of ?>
[WARNING] /Users/alvar/Projects/3.OpenSourceProjects/debezium/debezium-connector-postgres/src/test/java/io/debezium/connector/postgresql/TransactionMetadataIT.java:[136,85] unchecked cast
  required: java.util.Map<java.lang.String,java.lang.Object>
  found:    java.util.Map<java.lang.String,capture#2 of ?>
[WARNING] /Users/alvar/Projects/3.OpenSourceProjects/debezium/debezium-connector-postgres/src/test/java/io/debezium/connector/postgresql/TransactionMetadataIT.java:[154,85] unchecked cast
  required: java.util.Map<java.lang.String,java.lang.Object>
  found:    java.util.Map<java.lang.String,capture#3 of ?>
[WARNING] /Users/alvar/Projects/3.OpenSourceProjects/debezium/debezium-connector-postgres/src/test/java/io/debezium/custom/snapshotter/CustomTestSnapshot.java:[39,102] unchecked conversion
  required: io.debezium.pipeline.spi.Offsets<io.debezium.connector.postgresql.PostgresPartition,io.debezium.connector.postgresql.PostgresOffsetContext>
  found:    io.debezium.pipeline.spi.Offsets
[WARNING] /Users/alvar/Projects/3.OpenSourceProjects/debezium/debezium-connector-postgres/src/test/java/io/debezium/connector/postgresql/RecordsStreamProducerIT.java:[159,26] getConfig() in io.debezium.config.CommonConnectorConfig has been deprecated
[WARNING] /Users/alvar/Projects/3.OpenSourceProjects/debezium/debezium-connector-postgres/src/test/java/io/debezium/connector/postgresql/RecordsStreamProducerIT.java:[1976,21] unchecked call to put(K,V) as a member of the raw type java.util.HashMap
[WARNING] /Users/alvar/Projects/3.OpenSourceProjects/debezium/debezium-connector-postgres/src/test/java/io/debezium/connector/postgresql/RecordsStreamProducerIT.java:[1993,21] unchecked call to put(K,V) as a member of the raw type java.util.HashMap
[WARNING] /Users/alvar/Projects/3.OpenSourceProjects/debezium/debezium-connector-postgres/src/test/java/io/debezium/connector/postgresql/PostgresOffsetContextTest.java:[42,94] unchecked call to load(java.util.Map<java.lang.String,?>) as a member of the raw type io.debezium.pipeline.spi.OffsetContext.Loader
[WARNING] /Users/alvar/Projects/3.OpenSourceProjects/debezium/debezium-connector-postgres/src/test/java/io/debezium/connector/postgresql/PostgresConnectorTaskIT.java:[51,83] unchecked method invocation: constructor <init> in class io.debezium.connector.postgresql.PostgresSchema is applied to given types
  required: io.debezium.connector.postgresql.PostgresConnectorConfig,io.debezium.connector.postgresql.connection.PostgresDefaultValueConverter,io.debezium.spi.topic.TopicNamingStrategy<io.debezium.relational.TableId>,io.debezium.connector.postgresql.PostgresValueConverter
  found:    io.debezium.connector.postgresql.PostgresConnectorConfig,<nulltype>,io.debezium.spi.topic.TopicNamingStrategy,<nulltype>
[WARNING] /Users/alvar/Projects/3.OpenSourceProjects/debezium/debezium-connector-postgres/src/test/java/io/debezium/connector/postgresql/PostgresConnectorTaskIT.java:[54,17] unchecked conversion
  required: io.debezium.spi.topic.TopicNamingStrategy<io.debezium.relational.TableId>
  found:    io.debezium.spi.topic.TopicNamingStrategy
[INFO] 
[INFO] --- surefire:3.1.2:test (default-test) @ debezium-connector-postgres ---
[WARNING]  Parameter 'systemProperties' is deprecated: Use systemPropertyVariables instead.
[INFO] Using auto detected provider org.apache.maven.surefire.junit4.JUnit4Provider
[INFO] 
[INFO] -------------------------------------------------------
[INFO]  T E S T S
[INFO] -------------------------------------------------------
[INFO] Running io.debezium.connector.postgresql.VectorDatabaseTest
17:46:19,408 |-INFO in ch.qos.logback.classic.LoggerContext[default] - Found resource [logback-test.xml] at [file:/Users/alvar/Projects/3.OpenSourceProjects/debezium/debezium-connector-postgres/target/test-classes/logback-test.xml]
17:46:19,408 |-WARN in ch.qos.logback.classic.LoggerContext[default] - Resource [logback-test.xml] occurs multiple times on the classpath.
17:46:19,408 |-WARN in ch.qos.logback.classic.LoggerContext[default] - Resource [logback-test.xml] occurs at [file:/Users/alvar/Projects/3.OpenSourceProjects/debezium/debezium-connector-postgres/target/test-classes/logback-test.xml]
17:46:19,408 |-WARN in ch.qos.logback.classic.LoggerContext[default] - Resource [logback-test.xml] occurs at [jar:file:/Users/alvar/.m2/repository/io/debezium/debezium-embedded/3.0.3-SNAPSHOT/debezium-embedded-3.0.3-SNAPSHOT-tests.jar!/logback-test.xml]
17:46:19,408 |-WARN in ch.qos.logback.classic.LoggerContext[default] - Resource [logback-test.xml] occurs at [jar:file:/Users/alvar/.m2/repository/io/debezium/debezium-core/3.0.3-SNAPSHOT/debezium-core-3.0.3-SNAPSHOT-tests.jar!/logback-test.xml]
17:46:19,441 |-INFO in ch.qos.logback.classic.joran.action.ConfigurationAction - debug attribute not set
17:46:19,442 |-INFO in ch.qos.logback.core.joran.action.AppenderAction - About to instantiate appender of type [ch.qos.logback.core.ConsoleAppender]
17:46:19,445 |-INFO in ch.qos.logback.core.joran.action.AppenderAction - Naming appender as [CONSOLE]
17:46:19,448 |-INFO in ch.qos.logback.core.joran.action.NestedComplexPropertyIA - Assuming default type [ch.qos.logback.classic.encoder.PatternLayoutEncoder] for [encoder] property
17:46:19,489 |-INFO in ch.qos.logback.classic.joran.action.RootLoggerAction - Setting level of ROOT logger to WARN
17:46:19,489 |-INFO in ch.qos.logback.core.joran.action.AppenderRefAction - Attaching appender named [CONSOLE] to Logger[ROOT]
17:46:19,490 |-INFO in ch.qos.logback.classic.joran.action.LoggerAction - Setting level of logger [io.debezium] to INFO
17:46:19,490 |-INFO in ch.qos.logback.classic.joran.action.LoggerAction - Setting additivity of logger [io.debezium] to false
17:46:19,490 |-INFO in ch.qos.logback.core.joran.action.AppenderRefAction - Attaching appender named [CONSOLE] to Logger[io.debezium]
17:46:19,490 |-INFO in ch.qos.logback.classic.joran.action.LoggerAction - Setting level of logger [io.debezium.embedded.EmbeddedWorkerConfig] to WARN
17:46:19,490 |-INFO in ch.qos.logback.classic.joran.action.LoggerAction - Setting additivity of logger [io.debezium.embedded.EmbeddedWorkerConfig] to false
17:46:19,490 |-INFO in ch.qos.logback.core.joran.action.AppenderRefAction - Attaching appender named [CONSOLE] to Logger[io.debezium.embedded.EmbeddedWorkerConfig]
17:46:19,490 |-INFO in ch.qos.logback.classic.joran.action.LoggerAction - Setting level of logger [org.reflections] to ERROR
17:46:19,490 |-INFO in ch.qos.logback.classic.joran.action.LoggerAction - Setting additivity of logger [org.reflections] to false
17:46:19,490 |-INFO in ch.qos.logback.core.joran.action.AppenderRefAction - Attaching appender named [CONSOLE] to Logger[org.reflections]
17:46:19,490 |-INFO in ch.qos.logback.classic.joran.action.LoggerAction - Setting level of logger [io.confluent.connect.avro] to WARN
17:46:19,490 |-INFO in ch.qos.logback.classic.joran.action.LoggerAction - Setting additivity of logger [io.confluent.connect.avro] to false
17:46:19,490 |-INFO in ch.qos.logback.core.joran.action.AppenderRefAction - Attaching appender named [CONSOLE] to Logger[io.confluent.connect.avro]
17:46:19,490 |-INFO in ch.qos.logback.classic.joran.action.LoggerAction - Setting level of logger [io.confluent.kafka.serializers] to WARN
17:46:19,490 |-INFO in ch.qos.logback.classic.joran.action.LoggerAction - Setting additivity of logger [io.confluent.kafka.serializers] to false
17:46:19,490 |-INFO in ch.qos.logback.core.joran.action.AppenderRefAction - Attaching appender named [CONSOLE] to Logger[io.confluent.kafka.serializers]
17:46:19,490 |-INFO in ch.qos.logback.classic.joran.action.LoggerAction - Setting level of logger [io.debezium.connector.postgresql.connection.PostgresReplicationConnection] to DEBUG
17:46:19,490 |-INFO in ch.qos.logback.classic.joran.action.LoggerAction - Setting additivity of logger [io.debezium.connector.postgresql.connection.PostgresReplicationConnection] to false
17:46:19,490 |-INFO in ch.qos.logback.core.joran.action.AppenderRefAction - Attaching appender named [CONSOLE] to Logger[io.debezium.connector.postgresql.connection.PostgresReplicationConnection]
17:46:19,490 |-INFO in ch.qos.logback.classic.joran.action.LoggerAction - Setting level of logger [io.debezium.pipeline.signal.channels.SourceSignalChannel] to DEBUG
17:46:19,490 |-INFO in ch.qos.logback.classic.joran.action.LoggerAction - Setting additivity of logger [io.debezium.pipeline.signal.channels.SourceSignalChannel] to false
17:46:19,490 |-INFO in ch.qos.logback.core.joran.action.AppenderRefAction - Attaching appender named [CONSOLE] to Logger[io.debezium.pipeline.signal.channels.SourceSignalChannel]
17:46:19,490 |-INFO in ch.qos.logback.classic.joran.action.ConfigurationAction - End of configuration.
17:46:19,491 |-INFO in ch.qos.logback.classic.joran.JoranConfigurator@1eb5174b - Registering current configuration as safe fallback point

2024-11-20 17:46:19,494 WARN   ||||  Cannot convert sparse vector {1:10,11:20,111:30}, expected format is {i1:x,i2:y,i3:z,...}/dimensions   [io.debezium.connector.postgresql.data.vector.Vectors]
2024-11-20 17:46:19,516 WARN   ||||  Cannot convert sparse vector {1:10,11:20,111:30/1000, expected format is {i1:x,i2:y,i3:z,...}/dimensions   [io.debezium.connector.postgresql.data.vector.Vectors]
2024-11-20 17:46:19,517 WARN   ||||  Cannot convert sparse vector 1:10,11:20,111:30}/1000, expected format is {i1:x,i2:y,i3:z,...}/dimensions   [io.debezium.connector.postgresql.data.vector.Vectors]
2024-11-20 17:46:19,517 WARN   ||||  Cannot convert sparse vector {1:10,11:20,111:30}1000, expected format is {i1:x,i2:y,i3:z,...}/dimensions   [io.debezium.connector.postgresql.data.vector.Vectors]
2024-11-20 17:46:19,517 WARN   ||||  Cannot convert sparse vector /1000, expected format is {i1:x,i2:y,i3:z,...}/dimensions   [io.debezium.connector.postgresql.data.vector.Vectors]
2024-11-20 17:46:19,517 WARN   ||||  Cannot convert sparse vector {10,11:20,111:30}/1000, expected format is {i1:x,i2:y,i3:z,...}/dimensions   [io.debezium.connector.postgresql.data.vector.Vectors]
2024-11-20 17:46:19,517 WARN   ||||  Cannot convert sparse vector {1:10,11#20,111:30}/1000, expected format is {i1:x,i2:y,i3:z,...}/dimensions   [io.debezium.connector.postgresql.data.vector.Vectors]
[INFO] Tests run: 3, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.182 s -- in io.debezium.connector.postgresql.VectorDatabaseTest
[INFO] Running io.debezium.connector.postgresql.PgSnapshotTest
[INFO] Tests run: 3, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.001 s -- in io.debezium.connector.postgresql.PgSnapshotTest
[INFO] Running io.debezium.connector.postgresql.PostgresErrorHandlerTest
2024-11-20 17:46:19,598 INFO   ||||  Loading the custom source info struct maker plugin: io.debezium.connector.postgresql.PostgresSourceInfoStructMaker   [io.debezium.config.CommonConnectorConfig]
2024-11-20 17:46:19,621 INFO   ||||  Loading the custom source info struct maker plugin: io.debezium.connector.postgresql.PostgresSourceInfoStructMaker   [io.debezium.config.CommonConnectorConfig]
2024-11-20 17:46:19,622 INFO   ||||  Loading the custom source info struct maker plugin: io.debezium.connector.postgresql.PostgresSourceInfoStructMaker   [io.debezium.config.CommonConnectorConfig]
2024-11-20 17:46:19,626 INFO   ||||  Loading the custom source info struct maker plugin: io.debezium.connector.postgresql.PostgresSourceInfoStructMaker   [io.debezium.config.CommonConnectorConfig]
2024-11-20 17:46:19,627 INFO   ||||  Loading the custom source info struct maker plugin: io.debezium.connector.postgresql.PostgresSourceInfoStructMaker   [io.debezium.config.CommonConnectorConfig]
2024-11-20 17:46:19,628 INFO   ||||  Loading the custom source info struct maker plugin: io.debezium.connector.postgresql.PostgresSourceInfoStructMaker   [io.debezium.config.CommonConnectorConfig]
[INFO] Tests run: 6, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.062 s -- in io.debezium.connector.postgresql.PostgresErrorHandlerTest
[INFO] Running io.debezium.connector.postgresql.ReplicaIdentityTestMapperTest
[INFO] Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.002 s -- in io.debezium.connector.postgresql.ReplicaIdentityTestMapperTest
[INFO] Running io.debezium.connector.postgresql.connection.ISODateTimeFormatTest
[INFO] Tests run: 6, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.017 s -- in io.debezium.connector.postgresql.connection.ISODateTimeFormatTest
[INFO] Running io.debezium.connector.postgresql.PostgresConnectorConfigDefTest
testSchema_1.testTable_1;FULL has an invalid format (expecting '(?i)^\s*(?<tablepredicate>[^\s:]+):(?<replicaidentity>DEFAULT|(INDEX) (?<indexname>.\w*)|FULL|NOTHING)\s*$')
testSchema_2.testTable_2;;DEFAULT has an invalid format (expecting '(?i)^\s*(?<tablepredicate>[^\s:]+):(?<replicaidentity>DEFAULT|(INDEX) (?<indexname>.\w*)|FULL|NOTHING)\s*$')
[INFO] Tests run: 4, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.011 s -- in io.debezium.connector.postgresql.PostgresConnectorConfigDefTest
[INFO] Running io.debezium.connector.postgresql.PostgresOffsetContextTest
2024-11-20 17:46:19,691 INFO   ||||  Loading the custom source info struct maker plugin: io.debezium.connector.postgresql.PostgresSourceInfoStructMaker   [io.debezium.config.CommonConnectorConfig]
[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.092 s -- in io.debezium.connector.postgresql.PostgresOffsetContextTest
[INFO] Running io.debezium.connector.postgresql.SourceInfoTest
2024-11-20 17:46:19,788 INFO   ||||  Loading the custom source info struct maker plugin: io.debezium.connector.postgresql.PostgresSourceInfoStructMaker   [io.debezium.config.CommonConnectorConfig]
2024-11-20 17:46:19,799 INFO   ||||  Loading the custom source info struct maker plugin: io.debezium.connector.postgresql.PostgresSourceInfoStructMaker   [io.debezium.config.CommonConnectorConfig]
2024-11-20 17:46:19,800 INFO   ||||  Loading the custom source info struct maker plugin: io.debezium.connector.postgresql.PostgresSourceInfoStructMaker   [io.debezium.config.CommonConnectorConfig]
2024-11-20 17:46:19,801 INFO   ||||  Loading the custom source info struct maker plugin: io.debezium.connector.postgresql.PostgresSourceInfoStructMaker   [io.debezium.config.CommonConnectorConfig]
2024-11-20 17:46:19,852 INFO   ||||  Loading the custom source info struct maker plugin: io.debezium.connector.postgresql.PostgresSourceInfoStructMaker   [io.debezium.config.CommonConnectorConfig]
[INFO] Tests run: 5, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.061 s -- in io.debezium.connector.postgresql.SourceInfoTest
[INFO] Running io.debezium.connector.postgresql.transforms.DecodeLogicalDecodingMessageContentTest
2024-11-20 17:46:20,193 INFO   ||||  Starting test io.debezium.connector.postgresql.transforms.DecodeLogicalDecodingMessageContentTest#shouldConvertRecordWithTransactionalLogicalDecodingMessageWithContentIncludingNullField   [io.debezium.connector.postgresql.transforms.DecodeLogicalDecodingMessageContentTest]
Skipped shouldConvertRecordWithTransactionalLogicalDecodingMessageWithContentIncludingNullField(io.debezium.connector.postgresql.transforms.DecodeLogicalDecodingMessageContentTest) because: Decoder plugin name is not PGOUTPUT
Only supported on PgOutput
2024-11-20 17:46:20,194 INFO   ||||  Test io.debezium.connector.postgresql.transforms.DecodeLogicalDecodingMessageContentTest#shouldConvertRecordWithTransactionalLogicalDecodingMessageWithContentIncludingNullField succeeded   [io.debezium.connector.postgresql.transforms.DecodeLogicalDecodingMessageContentTest]
2024-11-20 17:46:20,314 INFO   ||||  Starting test io.debezium.connector.postgresql.transforms.DecodeLogicalDecodingMessageContentTest#shouldConvertRecordWithTransactionalLogicalDecodingMessageWithContentNotIncludingNullField   [io.debezium.connector.postgresql.transforms.DecodeLogicalDecodingMessageContentTest]
Skipped shouldConvertRecordWithTransactionalLogicalDecodingMessageWithContentNotIncludingNullField(io.debezium.connector.postgresql.transforms.DecodeLogicalDecodingMessageContentTest) because: Decoder plugin name is not PGOUTPUT
Only supported on PgOutput
2024-11-20 17:46:20,314 INFO   ||||  Test io.debezium.connector.postgresql.transforms.DecodeLogicalDecodingMessageContentTest#shouldConvertRecordWithTransactionalLogicalDecodingMessageWithContentNotIncludingNullField succeeded   [io.debezium.connector.postgresql.transforms.DecodeLogicalDecodingMessageContentTest]
2024-11-20 17:46:20,421 INFO   ||||  Starting test io.debezium.connector.postgresql.transforms.DecodeLogicalDecodingMessageContentTest#shouldConvertRecordWithNonTransactionalLogicalDecodingMessageWithEmptyContent   [io.debezium.connector.postgresql.transforms.DecodeLogicalDecodingMessageContentTest]
Skipped shouldConvertRecordWithNonTransactionalLogicalDecodingMessageWithEmptyContent(io.debezium.connector.postgresql.transforms.DecodeLogicalDecodingMessageContentTest) because: Decoder plugin name is not PGOUTPUT
Only supported on PgOutput
2024-11-20 17:46:20,422 INFO   ||||  Test io.debezium.connector.postgresql.transforms.DecodeLogicalDecodingMessageContentTest#shouldConvertRecordWithNonTransactionalLogicalDecodingMessageWithEmptyContent succeeded   [io.debezium.connector.postgresql.transforms.DecodeLogicalDecodingMessageContentTest]
2024-11-20 17:46:20,539 INFO   ||||  Starting test io.debezium.connector.postgresql.transforms.DecodeLogicalDecodingMessageContentTest#shouldFailWhenLogicalDecodingMessageContentIsEmptyString   [io.debezium.connector.postgresql.transforms.DecodeLogicalDecodingMessageContentTest]
Skipped shouldFailWhenLogicalDecodingMessageContentIsEmptyString(io.debezium.connector.postgresql.transforms.DecodeLogicalDecodingMessageContentTest) because: Decoder plugin name is not PGOUTPUT
Only supported on PgOutput
2024-11-20 17:46:20,539 INFO   ||||  Test io.debezium.connector.postgresql.transforms.DecodeLogicalDecodingMessageContentTest#shouldFailWhenLogicalDecodingMessageContentIsEmptyString succeeded   [io.debezium.connector.postgresql.transforms.DecodeLogicalDecodingMessageContentTest]
[INFO] Tests run: 4, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.687 s -- in io.debezium.connector.postgresql.transforms.DecodeLogicalDecodingMessageContentTest
[INFO] Running io.debezium.connector.postgresql.transforms.timescaledb.TimescaleDbDatabaseTest
2024-11-20 17:46:20,621 INFO   ||||  Starting test io.debezium.connector.postgresql.transforms.timescaledb.TimescaleDbDatabaseTest#shouldTransformAggregates   [io.debezium.connector.postgresql.transforms.timescaledb.TimescaleDbDatabaseTest]
2024-11-20 17:46:23,734 INFO   TimescaleDbDatabaseTest|||engine|  Engine state has changed from 'CREATING' to 'INITIALIZING'   [io.debezium.embedded.async.AsyncEmbeddedEngine]
2024-11-20 17:46:23,740 INFO   TimescaleDbDatabaseTest|||engine|  Loading the custom source info struct maker plugin: io.debezium.connector.postgresql.PostgresSourceInfoStructMaker   [io.debezium.config.CommonConnectorConfig]
2024-11-20 17:46:23,786 INFO   TimescaleDbDatabaseTest|||engine|  Successfully tested connection for jdbc:postgresql://localhost:57507/postgres with user 'postgres'   [io.debezium.connector.postgresql.PostgresConnector]
2024-11-20 17:46:23,806 INFO   ||||  Connection gracefully closed   [io.debezium.jdbc.JdbcConnection]
2024-11-20 17:46:23,814 INFO   TimescaleDbDatabaseTest|||engine|  Engine state has changed from 'INITIALIZING' to 'CREATING_TASKS'   [io.debezium.embedded.async.AsyncEmbeddedEngine]
2024-11-20 17:46:23,819 INFO   TimescaleDbDatabaseTest|||engine|  Engine state has changed from 'CREATING_TASKS' to 'STARTING_TASKS'   [io.debezium.embedded.async.AsyncEmbeddedEngine]
2024-11-20 17:46:23,819 INFO   TimescaleDbDatabaseTest|||engine|  Waiting max. for 180000 ms for individual source tasks to start.   [io.debezium.embedded.async.AsyncEmbeddedEngine]
2024-11-20 17:46:23,820 INFO   ||||  Starting PostgresConnectorTask with configuration:   [io.debezium.connector.common.BaseSourceTask]
2024-11-20 17:46:23,821 INFO   ||||     connector.class = io.debezium.connector.postgresql.PostgresConnector   [io.debezium.connector.common.BaseSourceTask]
2024-11-20 17:46:23,821 INFO   ||||     transforms.timescaledb.database.hostname = localhost   [io.debezium.connector.common.BaseSourceTask]
2024-11-20 17:46:23,821 INFO   ||||     transforms.timescaledb.database.password = ********   [io.debezium.connector.common.BaseSourceTask]
2024-11-20 17:46:23,821 INFO   ||||     transforms.timescaledb.database.user = postgres   [io.debezium.connector.common.BaseSourceTask]
2024-11-20 17:46:23,821 INFO   ||||     transforms.timescaledb.type = io.debezium.connector.postgresql.transforms.timescaledb.TimescaleDb   [io.debezium.connector.common.BaseSourceTask]
2024-11-20 17:46:23,821 INFO   ||||     record.processing.shutdown.timeout.ms = 1000   [io.debezium.connector.common.BaseSourceTask]
2024-11-20 17:46:23,821 INFO   ||||     transforms.timescaledb.database.port = 57507   [io.debezium.connector.common.BaseSourceTask]
2024-11-20 17:46:23,821 INFO   ||||     transforms = timescaledb   [io.debezium.connector.common.BaseSourceTask]
2024-11-20 17:46:23,821 INFO   ||||     schema.include.list = _timescaledb_internal   [io.debezium.connector.common.BaseSourceTask]
2024-11-20 17:46:23,822 INFO   ||||     slot.max.retries = 2   [io.debezium.connector.common.BaseSourceTask]
2024-11-20 17:46:23,822 INFO   ||||     record.processing.order = ORDERED   [io.debezium.connector.common.BaseSourceTask]
2024-11-20 17:46:23,822 INFO   ||||     database.sslmode = disable   [io.debezium.connector.common.BaseSourceTask]
2024-11-20 17:46:23,822 INFO   ||||     topic.prefix = test_server   [io.debezium.connector.common.BaseSourceTask]
2024-11-20 17:46:23,822 INFO   ||||     slot.retry.delay.ms = 2000   [io.debezium.connector.common.BaseSourceTask]
2024-11-20 17:46:23,822 INFO   ||||     offset.storage.file.filename = /Users/alvar/Projects/3.OpenSourceProjects/debezium/debezium-connector-postgres/target/data/file-connector-offsets.txt   [io.debezium.connector.common.BaseSourceTask]
2024-11-20 17:46:23,822 INFO   ||||     record.processing.threads =    [io.debezium.connector.common.BaseSourceTask]
2024-11-20 17:46:23,822 INFO   ||||     errors.retry.delay.initial.ms = 300   [io.debezium.connector.common.BaseSourceTask]
2024-11-20 17:46:23,822 INFO   ||||     value.converter = org.apache.kafka.connect.json.JsonConverter   [io.debezium.connector.common.BaseSourceTask]
2024-11-20 17:46:23,822 INFO   ||||     database.topic.prefix = dbserver1   [io.debezium.connector.common.BaseSourceTask]
2024-11-20 17:46:23,822 INFO   ||||     status.update.interval.ms = 100   [io.debezium.connector.common.BaseSourceTask]
2024-11-20 17:46:23,822 INFO   ||||     key.converter = org.apache.kafka.connect.json.JsonConverter   [io.debezium.connector.common.BaseSourceTask]
2024-11-20 17:46:23,822 INFO   ||||     database.user = postgres   [io.debezium.connector.common.BaseSourceTask]
2024-11-20 17:46:23,822 INFO   ||||     database.dbname = postgres   [io.debezium.connector.common.BaseSourceTask]
2024-11-20 17:46:23,822 INFO   ||||     transforms.timescaledb.database.dbname = postgres   [io.debezium.connector.common.BaseSourceTask]
2024-11-20 17:46:23,822 INFO   ||||     slot.drop.on.stop = true   [io.debezium.connector.common.BaseSourceTask]
2024-11-20 17:46:23,822 INFO   ||||     offset.storage = org.apache.kafka.connect.storage.FileOffsetBackingStore   [io.debezium.connector.common.BaseSourceTask]
2024-11-20 17:46:23,822 INFO   ||||     offset.flush.timeout.ms = 5000   [io.debezium.connector.common.BaseSourceTask]
2024-11-20 17:46:23,822 INFO   ||||     errors.retry.delay.max.ms = 10000   [io.debezium.connector.common.BaseSourceTask]
2024-11-20 17:46:23,822 INFO   ||||     plugin.name = pgoutput   [io.debezium.connector.common.BaseSourceTask]
2024-11-20 17:46:23,822 INFO   ||||     database.port = 57507   [io.debezium.connector.common.BaseSourceTask]
2024-11-20 17:46:23,822 INFO   ||||     offset.flush.interval.ms = 0   [io.debezium.connector.common.BaseSourceTask]
2024-11-20 17:46:23,822 INFO   ||||     internal.task.management.timeout.ms = 180000   [io.debezium.connector.common.BaseSourceTask]
2024-11-20 17:46:23,822 INFO   ||||     record.processing.with.serial.consumer = false   [io.debezium.connector.common.BaseSourceTask]
2024-11-20 17:46:23,822 INFO   ||||     include.unknown.datatypes = true   [io.debezium.connector.common.BaseSourceTask]
2024-11-20 17:46:23,822 INFO   ||||     errors.max.retries = -1   [io.debezium.connector.common.BaseSourceTask]
2024-11-20 17:46:23,822 INFO   ||||     database.hostname = localhost   [io.debezium.connector.common.BaseSourceTask]
2024-11-20 17:46:23,822 INFO   ||||     database.password = ********   [io.debezium.connector.common.BaseSourceTask]
2024-11-20 17:46:23,822 INFO   ||||     name = testing-connector   [io.debezium.connector.common.BaseSourceTask]
2024-11-20 17:46:23,822 INFO   ||||     snapshot.mode = no_data   [io.debezium.connector.common.BaseSourceTask]
2024-11-20 17:46:23,822 INFO   ||||  Loading the custom source info struct maker plugin: io.debezium.connector.postgresql.PostgresSourceInfoStructMaker   [io.debezium.config.CommonConnectorConfig]
2024-11-20 17:46:23,823 INFO   ||||  Loading the custom topic naming strategy plugin: io.debezium.schema.SchemaTopicNamingStrategy   [io.debezium.config.CommonConnectorConfig]
2024-11-20 17:46:23,840 INFO   ||||  Connection gracefully closed   [io.debezium.jdbc.JdbcConnection]
2024-11-20 17:46:23,897 WARN   ||||  Type [oid:13592, name:_pg_user_mappings] is already mapped   [io.debezium.connector.postgresql.TypeRegistry]
2024-11-20 17:46:23,897 WARN   ||||  Type [oid:16923, name:compression_settings] is already mapped   [io.debezium.connector.postgresql.TypeRegistry]
2024-11-20 17:46:23,897 WARN   ||||  Type [oid:16922, name:_compression_settings] is already mapped   [io.debezium.connector.postgresql.TypeRegistry]
2024-11-20 17:46:23,898 WARN   ||||  Type [oid:13266, name:cardinal_number] is already mapped   [io.debezium.connector.postgresql.TypeRegistry]
2024-11-20 17:46:23,898 WARN   ||||  Type [oid:13269, name:character_data] is already mapped   [io.debezium.connector.postgresql.TypeRegistry]
2024-11-20 17:46:23,898 WARN   ||||  Type [oid:13271, name:sql_identifier] is already mapped   [io.debezium.connector.postgresql.TypeRegistry]
2024-11-20 17:46:23,898 WARN   ||||  Type [oid:13277, name:time_stamp] is already mapped   [io.debezium.connector.postgresql.TypeRegistry]
2024-11-20 17:46:23,898 WARN   ||||  Type [oid:13279, name:yes_or_no] is already mapped   [io.debezium.connector.postgresql.TypeRegistry]
2024-11-20 17:46:23,916 INFO   ||||  No previous offsets found   [io.debezium.connector.common.BaseSourceTask]
2024-11-20 17:46:23,964 WARN   ||||  Type [oid:13592, name:_pg_user_mappings] is already mapped   [io.debezium.connector.postgresql.TypeRegistry]
2024-11-20 17:46:23,964 WARN   ||||  Type [oid:16923, name:compression_settings] is already mapped   [io.debezium.connector.postgresql.TypeRegistry]
2024-11-20 17:46:23,964 WARN   ||||  Type [oid:16922, name:_compression_settings] is already mapped   [io.debezium.connector.postgresql.TypeRegistry]
2024-11-20 17:46:23,965 WARN   ||||  Type [oid:13266, name:cardinal_number] is already mapped   [io.debezium.connector.postgresql.TypeRegistry]
2024-11-20 17:46:23,965 WARN   ||||  Type [oid:13269, name:character_data] is already mapped   [io.debezium.connector.postgresql.TypeRegistry]
2024-11-20 17:46:23,965 WARN   ||||  Type [oid:13271, name:sql_identifier] is already mapped   [io.debezium.connector.postgresql.TypeRegistry]
2024-11-20 17:46:23,965 WARN   ||||  Type [oid:13277, name:time_stamp] is already mapped   [io.debezium.connector.postgresql.TypeRegistry]
2024-11-20 17:46:23,965 WARN   ||||  Type [oid:13279, name:yes_or_no] is already mapped   [io.debezium.connector.postgresql.TypeRegistry]
2024-11-20 17:46:23,978 INFO   ||||  Connector started for the first time.   [io.debezium.connector.common.BaseSourceTask]
2024-11-20 17:46:23,978 INFO   Postgres|test_server||postgres-connector-task|  No previous offset found   [io.debezium.connector.postgresql.PostgresConnectorTask]
2024-11-20 17:46:23,984 INFO   Postgres|test_server||postgres-connector-task|  user 'postgres' connected to database 'postgres' on PostgreSQL 15.8 on x86_64-pc-linux-musl, compiled by gcc (Alpine 13.2.1_git20240309) 13.2.1 20240309, 64-bit with roles:
	role 'pg_read_all_settings' [superuser: false, replication: false, inherit: true, create role: false, create db: false, can log in: false]
	role 'pg_database_owner' [superuser: false, replication: false, inherit: true, create role: false, create db: false, can log in: false]
	role 'pg_stat_scan_tables' [superuser: false, replication: false, inherit: true, create role: false, create db: false, can log in: false]
	role 'pg_checkpoint' [superuser: false, replication: false, inherit: true, create role: false, create db: false, can log in: false]
	role 'pg_write_server_files' [superuser: false, replication: false, inherit: true, create role: false, create db: false, can log in: false]
	role 'pg_read_all_data' [superuser: false, replication: false, inherit: true, create role: false, create db: false, can log in: false]
	role 'pg_write_all_data' [superuser: false, replication: false, inherit: true, create role: false, create db: false, can log in: false]
	role 'pg_monitor' [superuser: false, replication: false, inherit: true, create role: false, create db: false, can log in: false]
	role 'pg_read_server_files' [superuser: false, replication: false, inherit: true, create role: false, create db: false, can log in: false]
	role 'pg_execute_server_program' [superuser: false, replication: false, inherit: true, create role: false, create db: false, can log in: false]
	role 'pg_read_all_stats' [superuser: false, replication: false, inherit: true, create role: false, create db: false, can log in: false]
	role 'pg_signal_backend' [superuser: false, replication: false, inherit: true, create role: false, create db: false, can log in: false]
	role 'postgres' [superuser: true, replication: true, inherit: true, create role: true, create db: true, can log in: true]   [io.debezium.connector.postgresql.PostgresConnectorTask]
2024-11-20 17:46:23,990 INFO   Postgres|test_server||postgres-connector-task|  Obtained valid replication slot ReplicationSlot [active=false, latestFlushedLsn=null, catalogXmin=null]   [io.debezium.connector.postgresql.connection.PostgresConnection]
2024-11-20 17:46:23,993 WARN   Postgres|test_server||postgres-connector-task|  Connector has enabled automated replication slot removal upon restart (slot.drop.on.stop = true). This setting is not recommended for production environments, as a new replication slot will be created after a connector restart, resulting in missed data change events.   [io.debezium.connector.postgresql.PostgresTaskContext]
2024-11-20 17:46:23,996 DEBUG  Postgres|test_server||postgres-connector-task|  Creating new replication slot 'debezium' for plugin 'PGOUTPUT'   [io.debezium.connector.postgresql.connection.PostgresReplicationConnection]
2024-11-20 17:46:24,009 INFO   Postgres|test_server||postgres-connector-task|  Initializing PgOutput logical decoder publication   [io.debezium.connector.postgresql.connection.PostgresReplicationConnection]
2024-11-20 17:46:24,020 INFO   Postgres|test_server||postgres-connector-task|  Creating replication slot with command CREATE_REPLICATION_SLOT "debezium"  LOGICAL pgoutput   [io.debezium.connector.postgresql.connection.PostgresReplicationConnection]
2024-11-20 17:46:24,031 INFO   Postgres|test_server||postgres-connector-task|  Requested thread factory for component PostgresConnector, id = test_server named = SignalProcessor   [io.debezium.util.Threads]
2024-11-20 17:46:24,041 INFO   Postgres|test_server||postgres-connector-task|  Requested thread factory for component PostgresConnector, id = test_server named = change-event-source-coordinator   [io.debezium.util.Threads]
2024-11-20 17:46:24,041 INFO   Postgres|test_server||postgres-connector-task|  Requested thread factory for component PostgresConnector, id = test_server named = blocking-snapshot   [io.debezium.util.Threads]
2024-11-20 17:46:24,045 INFO   Postgres|test_server||postgres-connector-task|  Creating thread debezium-postgresconnector-test_server-change-event-source-coordinator   [io.debezium.util.Threads]
2024-11-20 17:46:24,046 INFO   TimescaleDbDatabaseTest|||engine|  All tasks have started successfully.   [io.debezium.embedded.async.AsyncEmbeddedEngine]
2024-11-20 17:46:24,046 INFO   TimescaleDbDatabaseTest|||engine|  Engine state has changed from 'STARTING_TASKS' to 'POLLING_TASKS'   [io.debezium.embedded.async.AsyncEmbeddedEngine]
2024-11-20 17:46:24,046 INFO   TimescaleDbDatabaseTest|||engine|  Using io.debezium.embedded.async.ParallelSmtConsumerProcessor processor   [io.debezium.embedded.async.AsyncEmbeddedEngine]
2024-11-20 17:46:24,114 INFO   Postgres|test_server||snapshot|  Metrics registered   [io.debezium.pipeline.ChangeEventSourceCoordinator]
2024-11-20 17:46:24,115 INFO   Postgres|test_server||snapshot|  Context created   [io.debezium.pipeline.ChangeEventSourceCoordinator]
2024-11-20 17:46:24,119 INFO   Postgres|test_server|0|snapshot|postgres  According to the connector configuration no snapshot will be executed   [io.debezium.connector.postgresql.PostgresSnapshotChangeEventSource]
2024-11-20 17:46:24,122 INFO   Postgres|test_server|0|snapshot|postgres  Snapshot ended with SnapshotResult [status=SKIPPED, offset=null]   [io.debezium.pipeline.ChangeEventSourceCoordinator]
2024-11-20 17:46:24,124 INFO   Postgres|test_server|0|streaming|postgres  Connected metrics set to 'true'   [io.debezium.pipeline.ChangeEventSourceCoordinator]
2024-11-20 17:46:24,124 INFO   Postgres|test_server|0|streaming|postgres  Creating initial offset context   [io.debezium.connector.postgresql.PostgresOffsetContext]
2024-11-20 17:46:24,129 INFO   Postgres|test_server|0|streaming|postgres  Read xlogStart at 'LSN{0/193C9F8}' from transaction '735'   [io.debezium.connector.postgresql.PostgresOffsetContext]
2024-11-20 17:46:24,191 INFO   Postgres|test_server|0|streaming|postgres  REPLICA IDENTITY for '_timescaledb_internal.bgw_policy_chunk_stats' is 'DEFAULT'; UPDATE and DELETE events will contain previous values only for PK columns   [io.debezium.connector.postgresql.PostgresSchema]
2024-11-20 17:46:24,193 INFO   Postgres|test_server|0|streaming|postgres  REPLICA IDENTITY for '_timescaledb_internal.bgw_job_stat_history' is 'DEFAULT'; UPDATE and DELETE events will contain previous values only for PK columns   [io.debezium.connector.postgresql.PostgresSchema]
2024-11-20 17:46:24,194 INFO   Postgres|test_server|0|streaming|postgres  REPLICA IDENTITY for '_timescaledb_internal.bgw_job_stat' is 'DEFAULT'; UPDATE and DELETE events will contain previous values only for PK columns   [io.debezium.connector.postgresql.PostgresSchema]
2024-11-20 17:46:24,214 INFO   Postgres|test_server|0|streaming|postgres  SignalProcessor started. Scheduling it every 5000ms   [io.debezium.pipeline.signal.SignalProcessor]
2024-11-20 17:46:24,214 INFO   Postgres|test_server|0|streaming|postgres  Creating thread debezium-postgresconnector-test_server-SignalProcessor   [io.debezium.util.Threads]
2024-11-20 17:46:24,214 INFO   Postgres|test_server|0|streaming|postgres  Starting streaming   [io.debezium.pipeline.ChangeEventSourceCoordinator]
2024-11-20 17:46:24,214 INFO   Postgres|test_server|0|streaming|postgres  No previous LSN found in Kafka, streaming from the latest xlogpos or flushed LSN...   [io.debezium.connector.postgresql.PostgresStreamingChangeEventSource]
2024-11-20 17:46:24,215 INFO   Postgres|test_server|0|streaming|postgres  WAL position will not be searched   [io.debezium.connector.postgresql.connection.WalPositionLocator]
2024-11-20 17:46:24,215 INFO   Postgres|test_server|0|streaming|postgres  Initializing PgOutput logical decoder publication   [io.debezium.connector.postgresql.connection.PostgresReplicationConnection]
2024-11-20 17:46:24,244 INFO   Postgres|test_server|0|streaming|postgres  Obtained valid replication slot ReplicationSlot [active=false, latestFlushedLsn=LSN{0/193C9F8}, catalogXmin=735]   [io.debezium.connector.postgresql.connection.PostgresConnection]
2024-11-20 17:46:24,244 INFO   ||||  Connection gracefully closed   [io.debezium.jdbc.JdbcConnection]
2024-11-20 17:46:24,245 DEBUG  Postgres|test_server|0|streaming|postgres  running 'IDENTIFY_SYSTEM' to validate replication connection   [io.debezium.connector.postgresql.connection.PostgresReplicationConnection]
2024-11-20 17:46:24,247 DEBUG  Postgres|test_server|0|streaming|postgres  received latest xlogpos '0/1965868'   [io.debezium.connector.postgresql.connection.PostgresReplicationConnection]
2024-11-20 17:46:24,247 DEBUG  Postgres|test_server|0|streaming|postgres  starting streaming from LSN 'LSN{0/193C9F8}'   [io.debezium.connector.postgresql.connection.PostgresReplicationConnection]
2024-11-20 17:46:24,263 INFO   Postgres|test_server|0|streaming|postgres  Requested thread factory for component PostgresConnector, id = test_server named = keep-alive   [io.debezium.util.Threads]
2024-11-20 17:46:24,263 INFO   Postgres|test_server|0|streaming|postgres  Creating thread debezium-postgresconnector-test_server-keep-alive   [io.debezium.util.Threads]
2024-11-20 17:46:24,326 INFO   Postgres|test_server|0|streaming|postgres  REPLICA IDENTITY for '_timescaledb_internal.bgw_policy_chunk_stats' is 'DEFAULT'; UPDATE and DELETE events will contain previous values only for PK columns   [io.debezium.connector.postgresql.PostgresSchema]
2024-11-20 17:46:24,327 INFO   Postgres|test_server|0|streaming|postgres  REPLICA IDENTITY for '_timescaledb_internal._hyper_2_2_chunk' is 'DEFAULT'; UPDATE and DELETE events will contain previous values only for PK columns   [io.debezium.connector.postgresql.PostgresSchema]
2024-11-20 17:46:24,328 INFO   Postgres|test_server|0|streaming|postgres  REPLICA IDENTITY for '_timescaledb_internal._materialized_hypertable_2' is 'DEFAULT'; UPDATE and DELETE events will contain previous values only for PK columns   [io.debezium.connector.postgresql.PostgresSchema]
2024-11-20 17:46:24,329 INFO   Postgres|test_server|0|streaming|postgres  REPLICA IDENTITY for '_timescaledb_internal.bgw_job_stat_history' is 'DEFAULT'; UPDATE and DELETE events will contain previous values only for PK columns   [io.debezium.connector.postgresql.PostgresSchema]
2024-11-20 17:46:24,330 INFO   Postgres|test_server|0|streaming|postgres  REPLICA IDENTITY for '_timescaledb_internal._hyper_1_1_chunk' is 'DEFAULT'; UPDATE and DELETE events will contain previous values only for PK columns   [io.debezium.connector.postgresql.PostgresSchema]
2024-11-20 17:46:24,331 INFO   Postgres|test_server|0|streaming|postgres  REPLICA IDENTITY for '_timescaledb_internal.bgw_job_stat' is 'DEFAULT'; UPDATE and DELETE events will contain previous values only for PK columns   [io.debezium.connector.postgresql.PostgresSchema]
2024-11-20 17:46:24,336 INFO   Postgres|test_server|0|streaming|postgres  Processing messages   [io.debezium.connector.postgresql.PostgresStreamingChangeEventSource]
2024-11-20 17:46:24,367 WARN   Postgres|test_server|0|streaming|postgres  Primary keys are not defined for table 'chunk_constraint', defaulting to unique indices   [io.debezium.connector.postgresql.connection.pgoutput.PgOutputMessageDecoder]
2024-11-20 17:46:24,378 WARN   Postgres|test_server|0|streaming|postgres  Primary keys are not defined for table 'chunk_index', defaulting to unique indices   [io.debezium.connector.postgresql.connection.pgoutput.PgOutputMessageDecoder]
2024-11-20 17:46:24,388 WARN   Postgres|test_server|0|streaming|postgres  Primary keys are not defined for table '_hyper_1_1_chunk', defaulting to unique indices   [io.debezium.connector.postgresql.connection.pgoutput.PgOutputMessageDecoder]
2024-11-20 17:46:24,415 WARN   Postgres|test_server|0|streaming|postgres  Primary keys are not defined for table '_hyper_1_1_chunk', defaulting to unique indices   [io.debezium.connector.postgresql.connection.pgoutput.PgOutputMessageDecoder]
2024-11-20 17:46:24,447 WARN   Postgres|test_server|0|streaming|postgres  Primary keys are not defined for table 'continuous_aggs_materialization_invalidation_log', defaulting to unique indices   [io.debezium.connector.postgresql.connection.pgoutput.PgOutputMessageDecoder]
2024-11-20 17:46:24,490 WARN   Postgres|test_server|0|streaming|postgres  Primary keys are not defined for table '_hyper_2_2_chunk', defaulting to unique indices   [io.debezium.connector.postgresql.connection.pgoutput.PgOutputMessageDecoder]
2024-11-20 17:46:24,594 INFO   ||||  Found previous partition offset PostgresPartition [sourcePartition={server=test_server}]: {lsn_proc=26627952, messageType=INSERT, lsn_commit=26602224, lsn=26602224, txId=740, ts_usec=1732121184205056}   [io.debezium.connector.common.BaseSourceTask]
2024-11-20 17:46:24,641 INFO   TimescaleDbDatabaseTest|||test|  Stopping the connector   [io.debezium.connector.postgresql.transforms.timescaledb.TimescaleDbDatabaseTest]
2024-11-20 17:46:24,641 INFO   TimescaleDbDatabaseTest|||test|  Stopping the engine   [io.debezium.connector.postgresql.transforms.timescaledb.TimescaleDbDatabaseTest]
2024-11-20 17:46:24,642 INFO   TimescaleDbDatabaseTest|||test|  Engine state has changed from 'POLLING_TASKS' to 'STOPPING'   [io.debezium.embedded.async.AsyncEmbeddedEngine]
2024-11-20 17:46:24,642 INFO   TimescaleDbDatabaseTest|||engine|  Task interrupted while polling.   [io.debezium.embedded.async.AsyncEmbeddedEngine]
2024-11-20 17:46:24,643 INFO   ||||  Stopping down connector   [io.debezium.connector.common.BaseSourceTask]
2024-11-20 17:46:25,001 INFO   Postgres|test_server|0|streaming|postgres  Finished streaming   [io.debezium.pipeline.ChangeEventSourceCoordinator]
2024-11-20 17:46:25,002 INFO   Postgres|test_server|0|streaming|postgres  Connected metrics set to 'false'   [io.debezium.pipeline.ChangeEventSourceCoordinator]
2024-11-20 17:46:25,002 INFO   ||||  SignalProcessor stopped   [io.debezium.pipeline.signal.SignalProcessor]
2024-11-20 17:46:25,003 INFO   ||||  Debezium ServiceRegistry stopped.   [io.debezium.service.DefaultServiceRegistry]
2024-11-20 17:46:25,003 DEBUG  ||||  Closing message decoder   [io.debezium.connector.postgresql.connection.PostgresReplicationConnection]
2024-11-20 17:46:25,003 INFO   ||||  Connection gracefully closed   [io.debezium.jdbc.JdbcConnection]
2024-11-20 17:46:25,004 DEBUG  ||||  Closing replication connection   [io.debezium.connector.postgresql.connection.PostgresReplicationConnection]
2024-11-20 17:46:25,004 INFO   ||||  Connection gracefully closed   [io.debezium.jdbc.JdbcConnection]
2024-11-20 17:46:25,025 INFO   ||||  Connection gracefully closed   [io.debezium.jdbc.JdbcConnection]
2024-11-20 17:46:25,026 INFO   ||||  Connection gracefully closed   [io.debezium.jdbc.JdbcConnection]
2024-11-20 17:46:25,026 INFO   TimescaleDbDatabaseTest|||test|  Stopped task #1 out of 1 tasks (it took 383 ms to stop the task).   [io.debezium.embedded.async.AsyncEmbeddedEngine]
2024-11-20 17:46:25,027 INFO   ||||  Connection gracefully closed   [io.debezium.jdbc.JdbcConnection]
2024-11-20 17:46:25,027 INFO   TimescaleDbDatabaseTest|||engine|  Engine is stopped.   [io.debezium.embedded.async.AsyncEmbeddedEngine]
2024-11-20 17:46:25,027 INFO   TimescaleDbDatabaseTest|||engine|  Engine state has changed from 'STOPPING' to 'STOPPED'   [io.debezium.embedded.async.AsyncEmbeddedEngine]
2024-11-20 17:46:25,028 INFO   TimescaleDbDatabaseTest|||engine|  Connector 'io.debezium.connector.postgresql.PostgresConnector' completed normally.   [io.debezium.connector.postgresql.transforms.timescaledb.TimescaleDbDatabaseTest]
2024-11-20 17:46:25,129 INFO   TimescaleDbDatabaseTest|||test|  Interrupting the engine   [io.debezium.connector.postgresql.transforms.timescaledb.TimescaleDbDatabaseTest]
2024-11-20 17:46:25,298 INFO   TimescaleDbDatabaseTest|||test|  Stopping the connector   [io.debezium.connector.postgresql.transforms.timescaledb.TimescaleDbDatabaseTest]
2024-11-20 17:46:25,298 INFO   TimescaleDbDatabaseTest|||test|  Test io.debezium.connector.postgresql.transforms.timescaledb.TimescaleDbDatabaseTest#shouldTransformAggregates succeeded   [io.debezium.connector.postgresql.transforms.timescaledb.TimescaleDbDatabaseTest]
2024-11-20 17:46:25,300 INFO   TimescaleDbDatabaseTest|||test|  Starting test io.debezium.connector.postgresql.transforms.timescaledb.TimescaleDbDatabaseTest#shouldTransformCompressedChunks   [io.debezium.connector.postgresql.transforms.timescaledb.TimescaleDbDatabaseTest]
2024-11-20 17:46:27,357 INFO   TimescaleDbDatabaseTest|||engine|  Engine state has changed from 'CREATING' to 'INITIALIZING'   [io.debezium.embedded.async.AsyncEmbeddedEngine]
2024-11-20 17:46:27,358 INFO   TimescaleDbDatabaseTest|||engine|  Loading the custom source info struct maker plugin: io.debezium.connector.postgresql.PostgresSourceInfoStructMaker   [io.debezium.config.CommonConnectorConfig]
2024-11-20 17:46:27,382 INFO   TimescaleDbDatabaseTest|||engine|  Successfully tested connection for jdbc:postgresql://localhost:57518/postgres with user 'postgres'   [io.debezium.connector.postgresql.PostgresConnector]
2024-11-20 17:46:27,393 INFO   ||||  Connection gracefully closed   [io.debezium.jdbc.JdbcConnection]
2024-11-20 17:46:27,394 INFO   TimescaleDbDatabaseTest|||engine|  Engine state has changed from 'INITIALIZING' to 'CREATING_TASKS'   [io.debezium.embedded.async.AsyncEmbeddedEngine]
2024-11-20 17:46:27,394 INFO   TimescaleDbDatabaseTest|||engine|  Engine state has changed from 'CREATING_TASKS' to 'STARTING_TASKS'   [io.debezium.embedded.async.AsyncEmbeddedEngine]
2024-11-20 17:46:27,395 INFO   TimescaleDbDatabaseTest|||engine|  Waiting max. for 180000 ms for individual source tasks to start.   [io.debezium.embedded.async.AsyncEmbeddedEngine]
2024-11-20 17:46:27,395 INFO   ||||  Starting PostgresConnectorTask with configuration:   [io.debezium.connector.common.BaseSourceTask]
2024-11-20 17:46:27,395 INFO   ||||     connector.class = io.debezium.connector.postgresql.PostgresConnector   [io.debezium.connector.common.BaseSourceTask]
2024-11-20 17:46:27,395 INFO   ||||     transforms.timescaledb.database.hostname = localhost   [io.debezium.connector.common.BaseSourceTask]
2024-11-20 17:46:27,395 INFO   ||||     transforms.timescaledb.database.password = ********   [io.debezium.connector.common.BaseSourceTask]
2024-11-20 17:46:27,395 INFO   ||||     transforms.timescaledb.database.user = postgres   [io.debezium.connector.common.BaseSourceTask]
2024-11-20 17:46:27,395 INFO   ||||     transforms.timescaledb.type = io.debezium.connector.postgresql.transforms.timescaledb.TimescaleDb   [io.debezium.connector.common.BaseSourceTask]
2024-11-20 17:46:27,395 INFO   ||||     record.processing.shutdown.timeout.ms = 1000   [io.debezium.connector.common.BaseSourceTask]
2024-11-20 17:46:27,395 INFO   ||||     transforms.timescaledb.database.port = 57518   [io.debezium.connector.common.BaseSourceTask]
2024-11-20 17:46:27,395 INFO   ||||     transforms = timescaledb   [io.debezium.connector.common.BaseSourceTask]
2024-11-20 17:46:27,395 INFO   ||||     schema.include.list = _timescaledb_internal   [io.debezium.connector.common.BaseSourceTask]
2024-11-20 17:46:27,395 INFO   ||||     slot.max.retries = 2   [io.debezium.connector.common.BaseSourceTask]
2024-11-20 17:46:27,395 INFO   ||||     record.processing.order = ORDERED   [io.debezium.connector.common.BaseSourceTask]
2024-11-20 17:46:27,395 INFO   ||||     database.sslmode = disable   [io.debezium.connector.common.BaseSourceTask]
2024-11-20 17:46:27,395 INFO   ||||     topic.prefix = test_server   [io.debezium.connector.common.BaseSourceTask]
2024-11-20 17:46:27,395 INFO   ||||     slot.retry.delay.ms = 2000   [io.debezium.connector.common.BaseSourceTask]
2024-11-20 17:46:27,395 INFO   ||||     offset.storage.file.filename = /Users/alvar/Projects/3.OpenSourceProjects/debezium/debezium-connector-postgres/target/data/file-connector-offsets.txt   [io.debezium.connector.common.BaseSourceTask]
2024-11-20 17:46:27,395 INFO   ||||     record.processing.threads =    [io.debezium.connector.common.BaseSourceTask]
2024-11-20 17:46:27,395 INFO   ||||     errors.retry.delay.initial.ms = 300   [io.debezium.connector.common.BaseSourceTask]
2024-11-20 17:46:27,395 INFO   ||||     value.converter = org.apache.kafka.connect.json.JsonConverter   [io.debezium.connector.common.BaseSourceTask]
2024-11-20 17:46:27,395 INFO   ||||     database.topic.prefix = dbserver1   [io.debezium.connector.common.BaseSourceTask]
2024-11-20 17:46:27,395 INFO   ||||     status.update.interval.ms = 100   [io.debezium.connector.common.BaseSourceTask]
2024-11-20 17:46:27,395 INFO   ||||     key.converter = org.apache.kafka.connect.json.JsonConverter   [io.debezium.connector.common.BaseSourceTask]
2024-11-20 17:46:27,395 INFO   ||||     database.user = postgres   [io.debezium.connector.common.BaseSourceTask]
2024-11-20 17:46:27,395 INFO   ||||     database.dbname = postgres   [io.debezium.connector.common.BaseSourceTask]
2024-11-20 17:46:27,395 INFO   ||||     transforms.timescaledb.database.dbname = postgres   [io.debezium.connector.common.BaseSourceTask]
2024-11-20 17:46:27,395 INFO   ||||     slot.drop.on.stop = true   [io.debezium.connector.common.BaseSourceTask]
2024-11-20 17:46:27,395 INFO   ||||     offset.storage = org.apache.kafka.connect.storage.FileOffsetBackingStore   [io.debezium.connector.common.BaseSourceTask]
2024-11-20 17:46:27,396 INFO   ||||     offset.flush.timeout.ms = 5000   [io.debezium.connector.common.BaseSourceTask]
2024-11-20 17:46:27,396 INFO   ||||     errors.retry.delay.max.ms = 10000   [io.debezium.connector.common.BaseSourceTask]
2024-11-20 17:46:27,396 INFO   ||||     plugin.name = pgoutput   [io.debezium.connector.common.BaseSourceTask]
2024-11-20 17:46:27,396 INFO   ||||     database.port = 57518   [io.debezium.connector.common.BaseSourceTask]
2024-11-20 17:46:27,396 INFO   ||||     offset.flush.interval.ms = 0   [io.debezium.connector.common.BaseSourceTask]
2024-11-20 17:46:27,396 INFO   ||||     internal.task.management.timeout.ms = 180000   [io.debezium.connector.common.BaseSourceTask]
2024-11-20 17:46:27,396 INFO   ||||     record.processing.with.serial.consumer = false   [io.debezium.connector.common.BaseSourceTask]
2024-11-20 17:46:27,396 INFO   ||||     include.unknown.datatypes = true   [io.debezium.connector.common.BaseSourceTask]
2024-11-20 17:46:27,396 INFO   ||||     errors.max.retries = -1   [io.debezium.connector.common.BaseSourceTask]
2024-11-20 17:46:27,396 INFO   ||||     database.hostname = localhost   [io.debezium.connector.common.BaseSourceTask]
2024-11-20 17:46:27,396 INFO   ||||     database.password = ********   [io.debezium.connector.common.BaseSourceTask]
2024-11-20 17:46:27,396 INFO   ||||     name = testing-connector   [io.debezium.connector.common.BaseSourceTask]
2024-11-20 17:46:27,396 INFO   ||||     snapshot.mode = no_data   [io.debezium.connector.common.BaseSourceTask]
2024-11-20 17:46:27,396 INFO   ||||  Loading the custom source info struct maker plugin: io.debezium.connector.postgresql.PostgresSourceInfoStructMaker   [io.debezium.config.CommonConnectorConfig]
2024-11-20 17:46:27,396 INFO   ||||  Loading the custom topic naming strategy plugin: io.debezium.schema.SchemaTopicNamingStrategy   [io.debezium.config.CommonConnectorConfig]
2024-11-20 17:46:27,406 INFO   ||||  Connection gracefully closed   [io.debezium.jdbc.JdbcConnection]
2024-11-20 17:46:27,442 WARN   ||||  Type [oid:13592, name:_pg_user_mappings] is already mapped   [io.debezium.connector.postgresql.TypeRegistry]
2024-11-20 17:46:27,442 WARN   ||||  Type [oid:16923, name:compression_settings] is already mapped   [io.debezium.connector.postgresql.TypeRegistry]
2024-11-20 17:46:27,442 WARN   ||||  Type [oid:16922, name:_compression_settings] is already mapped   [io.debezium.connector.postgresql.TypeRegistry]
2024-11-20 17:46:27,442 WARN   ||||  Type [oid:13266, name:cardinal_number] is already mapped   [io.debezium.connector.postgresql.TypeRegistry]
2024-11-20 17:46:27,442 WARN   ||||  Type [oid:13269, name:character_data] is already mapped   [io.debezium.connector.postgresql.TypeRegistry]
2024-11-20 17:46:27,442 WARN   ||||  Type [oid:13271, name:sql_identifier] is already mapped   [io.debezium.connector.postgresql.TypeRegistry]
2024-11-20 17:46:27,442 WARN   ||||  Type [oid:13277, name:time_stamp] is already mapped   [io.debezium.connector.postgresql.TypeRegistry]
2024-11-20 17:46:27,442 WARN   ||||  Type [oid:13279, name:yes_or_no] is already mapped   [io.debezium.connector.postgresql.TypeRegistry]
2024-11-20 17:46:27,444 INFO   ||||  No previous offsets found   [io.debezium.connector.common.BaseSourceTask]
2024-11-20 17:46:27,480 WARN   ||||  Type [oid:13592, name:_pg_user_mappings] is already mapped   [io.debezium.connector.postgresql.TypeRegistry]
2024-11-20 17:46:27,480 WARN   ||||  Type [oid:16923, name:compression_settings] is already mapped   [io.debezium.connector.postgresql.TypeRegistry]
2024-11-20 17:46:27,480 WARN   ||||  Type [oid:16922, name:_compression_settings] is already mapped   [io.debezium.connector.postgresql.TypeRegistry]
2024-11-20 17:46:27,480 WARN   ||||  Type [oid:13266, name:cardinal_number] is already mapped   [io.debezium.connector.postgresql.TypeRegistry]
2024-11-20 17:46:27,480 WARN   ||||  Type [oid:13269, name:character_data] is already mapped   [io.debezium.connector.postgresql.TypeRegistry]
2024-11-20 17:46:27,480 WARN   ||||  Type [oid:13271, name:sql_identifier] is already mapped   [io.debezium.connector.postgresql.TypeRegistry]
2024-11-20 17:46:27,480 WARN   ||||  Type [oid:13277, name:time_stamp] is already mapped   [io.debezium.connector.postgresql.TypeRegistry]
2024-11-20 17:46:27,480 WARN   ||||  Type [oid:13279, name:yes_or_no] is already mapped   [io.debezium.connector.postgresql.TypeRegistry]
2024-11-20 17:46:27,483 INFO   ||||  Connector started for the first time.   [io.debezium.connector.common.BaseSourceTask]
2024-11-20 17:46:27,483 INFO   Postgres|test_server||postgres-connector-task|  No previous offset found   [io.debezium.connector.postgresql.PostgresConnectorTask]
2024-11-20 17:46:27,486 INFO   Postgres|test_server||postgres-connector-task|  user 'postgres' connected to database 'postgres' on PostgreSQL 15.8 on x86_64-pc-linux-musl, compiled by gcc (Alpine 13.2.1_git20240309) 13.2.1 20240309, 64-bit with roles:
	role 'pg_read_all_settings' [superuser: false, replication: false, inherit: true, create role: false, create db: false, can log in: false]
	role 'pg_database_owner' [superuser: false, replication: false, inherit: true, create role: false, create db: false, can log in: false]
	role 'pg_stat_scan_tables' [superuser: false, replication: false, inherit: true, create role: false, create db: false, can log in: false]
	role 'pg_checkpoint' [superuser: false, replication: false, inherit: true, create role: false, create db: false, can log in: false]
	role 'pg_write_server_files' [superuser: false, replication: false, inherit: true, create role: false, create db: false, can log in: false]
	role 'pg_read_all_data' [superuser: false, replication: false, inherit: true, create role: false, create db: false, can log in: false]
	role 'pg_write_all_data' [superuser: false, replication: false, inherit: true, create role: false, create db: false, can log in: false]
	role 'pg_monitor' [superuser: false, replication: false, inherit: true, create role: false, create db: false, can log in: false]
	role 'pg_read_server_files' [superuser: false, replication: false, inherit: true, create role: false, create db: false, can log in: false]
	role 'pg_execute_server_program' [superuser: false, replication: false, inherit: true, create role: false, create db: false, can log in: false]
	role 'pg_read_all_stats' [superuser: false, replication: false, inherit: true, create role: false, create db: false, can log in: false]
	role 'pg_signal_backend' [superuser: false, replication: false, inherit: true, create role: false, create db: false, can log in: false]
	role 'postgres' [superuser: true, replication: true, inherit: true, create role: true, create db: true, can log in: true]   [io.debezium.connector.postgresql.PostgresConnectorTask]
2024-11-20 17:46:27,489 INFO   Postgres|test_server||postgres-connector-task|  Obtained valid replication slot ReplicationSlot [active=false, latestFlushedLsn=null, catalogXmin=null]   [io.debezium.connector.postgresql.connection.PostgresConnection]
2024-11-20 17:46:27,489 WARN   Postgres|test_server||postgres-connector-task|  Connector has enabled automated replication slot removal upon restart (slot.drop.on.stop = true). This setting is not recommended for production environments, as a new replication slot will be created after a connector restart, resulting in missed data change events.   [io.debezium.connector.postgresql.PostgresTaskContext]
2024-11-20 17:46:27,489 DEBUG  Postgres|test_server||postgres-connector-task|  Creating new replication slot 'debezium' for plugin 'PGOUTPUT'   [io.debezium.connector.postgresql.connection.PostgresReplicationConnection]
2024-11-20 17:46:27,499 INFO   Postgres|test_server||postgres-connector-task|  Initializing PgOutput logical decoder publication   [io.debezium.connector.postgresql.connection.PostgresReplicationConnection]
2024-11-20 17:46:27,507 INFO   Postgres|test_server||postgres-connector-task|  Creating replication slot with command CREATE_REPLICATION_SLOT "debezium"  LOGICAL pgoutput   [io.debezium.connector.postgresql.connection.PostgresReplicationConnection]
2024-11-20 17:46:27,510 INFO   Postgres|test_server||postgres-connector-task|  Requested thread factory for component PostgresConnector, id = test_server named = SignalProcessor   [io.debezium.util.Threads]
2024-11-20 17:46:27,511 INFO   Postgres|test_server||postgres-connector-task|  Requested thread factory for component PostgresConnector, id = test_server named = change-event-source-coordinator   [io.debezium.util.Threads]
2024-11-20 17:46:27,511 INFO   Postgres|test_server||postgres-connector-task|  Requested thread factory for component PostgresConnector, id = test_server named = blocking-snapshot   [io.debezium.util.Threads]
2024-11-20 17:46:27,511 INFO   Postgres|test_server||postgres-connector-task|  Creating thread debezium-postgresconnector-test_server-change-event-source-coordinator   [io.debezium.util.Threads]
2024-11-20 17:46:27,511 INFO   TimescaleDbDatabaseTest|||engine|  All tasks have started successfully.   [io.debezium.embedded.async.AsyncEmbeddedEngine]
2024-11-20 17:46:27,511 INFO   TimescaleDbDatabaseTest|||engine|  Engine state has changed from 'STARTING_TASKS' to 'POLLING_TASKS'   [io.debezium.embedded.async.AsyncEmbeddedEngine]
2024-11-20 17:46:27,511 INFO   TimescaleDbDatabaseTest|||engine|  Using io.debezium.embedded.async.ParallelSmtConsumerProcessor processor   [io.debezium.embedded.async.AsyncEmbeddedEngine]
2024-11-20 17:46:27,511 INFO   Postgres|test_server||snapshot|  Metrics registered   [io.debezium.pipeline.ChangeEventSourceCoordinator]
2024-11-20 17:46:27,511 INFO   Postgres|test_server||snapshot|  Context created   [io.debezium.pipeline.ChangeEventSourceCoordinator]
2024-11-20 17:46:27,511 INFO   Postgres|test_server|0|snapshot|postgres  According to the connector configuration no snapshot will be executed   [io.debezium.connector.postgresql.PostgresSnapshotChangeEventSource]
2024-11-20 17:46:27,512 INFO   Postgres|test_server|0|snapshot|postgres  Snapshot ended with SnapshotResult [status=SKIPPED, offset=null]   [io.debezium.pipeline.ChangeEventSourceCoordinator]
2024-11-20 17:46:27,512 INFO   Postgres|test_server|0|streaming|postgres  Connected metrics set to 'true'   [io.debezium.pipeline.ChangeEventSourceCoordinator]
2024-11-20 17:46:27,512 INFO   Postgres|test_server|0|streaming|postgres  Creating initial offset context   [io.debezium.connector.postgresql.PostgresOffsetContext]
2024-11-20 17:46:27,514 INFO   Postgres|test_server|0|streaming|postgres  Read xlogStart at 'LSN{0/193C9F8}' from transaction '735'   [io.debezium.connector.postgresql.PostgresOffsetContext]
2024-11-20 17:46:27,554 INFO   Postgres|test_server|0|streaming|postgres  REPLICA IDENTITY for '_timescaledb_internal.bgw_policy_chunk_stats' is 'DEFAULT'; UPDATE and DELETE events will contain previous values only for PK columns   [io.debezium.connector.postgresql.PostgresSchema]
2024-11-20 17:46:27,556 INFO   Postgres|test_server|0|streaming|postgres  REPLICA IDENTITY for '_timescaledb_internal.bgw_job_stat_history' is 'DEFAULT'; UPDATE and DELETE events will contain previous values only for PK columns   [io.debezium.connector.postgresql.PostgresSchema]
2024-11-20 17:46:27,557 INFO   Postgres|test_server|0|streaming|postgres  REPLICA IDENTITY for '_timescaledb_internal.bgw_job_stat' is 'DEFAULT'; UPDATE and DELETE events will contain previous values only for PK columns   [io.debezium.connector.postgresql.PostgresSchema]
2024-11-20 17:46:27,559 INFO   Postgres|test_server|0|streaming|postgres  SignalProcessor started. Scheduling it every 5000ms   [io.debezium.pipeline.signal.SignalProcessor]
2024-11-20 17:46:27,559 INFO   Postgres|test_server|0|streaming|postgres  Creating thread debezium-postgresconnector-test_server-SignalProcessor   [io.debezium.util.Threads]
2024-11-20 17:46:27,559 INFO   Postgres|test_server|0|streaming|postgres  Starting streaming   [io.debezium.pipeline.ChangeEventSourceCoordinator]
2024-11-20 17:46:27,559 INFO   Postgres|test_server|0|streaming|postgres  No previous LSN found in Kafka, streaming from the latest xlogpos or flushed LSN...   [io.debezium.connector.postgresql.PostgresStreamingChangeEventSource]
2024-11-20 17:46:27,559 INFO   Postgres|test_server|0|streaming|postgres  WAL position will not be searched   [io.debezium.connector.postgresql.connection.WalPositionLocator]
2024-11-20 17:46:27,559 INFO   Postgres|test_server|0|streaming|postgres  Initializing PgOutput logical decoder publication   [io.debezium.connector.postgresql.connection.PostgresReplicationConnection]
2024-11-20 17:46:27,582 INFO   Postgres|test_server|0|streaming|postgres  Obtained valid replication slot ReplicationSlot [active=false, latestFlushedLsn=LSN{0/193C9F8}, catalogXmin=735]   [io.debezium.connector.postgresql.connection.PostgresConnection]
2024-11-20 17:46:27,583 INFO   ||||  Connection gracefully closed   [io.debezium.jdbc.JdbcConnection]
2024-11-20 17:46:27,583 DEBUG  Postgres|test_server|0|streaming|postgres  running 'IDENTIFY_SYSTEM' to validate replication connection   [io.debezium.connector.postgresql.connection.PostgresReplicationConnection]
2024-11-20 17:46:27,585 DEBUG  Postgres|test_server|0|streaming|postgres  received latest xlogpos '0/193C9F8'   [io.debezium.connector.postgresql.connection.PostgresReplicationConnection]
2024-11-20 17:46:27,585 DEBUG  Postgres|test_server|0|streaming|postgres  starting streaming from LSN 'LSN{0/193C9F8}'   [io.debezium.connector.postgresql.connection.PostgresReplicationConnection]
2024-11-20 17:46:27,596 INFO   Postgres|test_server|0|streaming|postgres  Requested thread factory for component PostgresConnector, id = test_server named = keep-alive   [io.debezium.util.Threads]
2024-11-20 17:46:27,596 INFO   Postgres|test_server|0|streaming|postgres  Creating thread debezium-postgresconnector-test_server-keep-alive   [io.debezium.util.Threads]
2024-11-20 17:46:27,628 INFO   Postgres|test_server|0|streaming|postgres  REPLICA IDENTITY for '_timescaledb_internal.bgw_policy_chunk_stats' is 'DEFAULT'; UPDATE and DELETE events will contain previous values only for PK columns   [io.debezium.connector.postgresql.PostgresSchema]
2024-11-20 17:46:27,629 INFO   Postgres|test_server|0|streaming|postgres  REPLICA IDENTITY for '_timescaledb_internal.bgw_job_stat_history' is 'DEFAULT'; UPDATE and DELETE events will contain previous values only for PK columns   [io.debezium.connector.postgresql.PostgresSchema]
2024-11-20 17:46:27,630 INFO   Postgres|test_server|0|streaming|postgres  REPLICA IDENTITY for '_timescaledb_internal.bgw_job_stat' is 'DEFAULT'; UPDATE and DELETE events will contain previous values only for PK columns   [io.debezium.connector.postgresql.PostgresSchema]
2024-11-20 17:46:27,632 INFO   Postgres|test_server|0|streaming|postgres  Processing messages   [io.debezium.connector.postgresql.PostgresStreamingChangeEventSource]
2024-11-20 17:46:27,659 WARN   Postgres|test_server|0|streaming|postgres  Primary keys are not defined for table 'chunk_constraint', defaulting to unique indices   [io.debezium.connector.postgresql.connection.pgoutput.PgOutputMessageDecoder]
2024-11-20 17:46:27,670 WARN   Postgres|test_server|0|streaming|postgres  Primary keys are not defined for table 'chunk_index', defaulting to unique indices   [io.debezium.connector.postgresql.connection.pgoutput.PgOutputMessageDecoder]
2024-11-20 17:46:27,681 WARN   Postgres|test_server|0|streaming|postgres  Primary keys are not defined for table '_hyper_1_1_chunk', defaulting to unique indices   [io.debezium.connector.postgresql.connection.pgoutput.PgOutputMessageDecoder]
2024-11-20 17:46:27,692 WARN   Postgres|test_server|0|streaming|postgres  Primary keys are not defined for table '_hyper_1_1_chunk', defaulting to unique indices   [io.debezium.connector.postgresql.connection.pgoutput.PgOutputMessageDecoder]
2024-11-20 17:46:27,730 WARN   Postgres|test_server|0|streaming|postgres  Primary keys are not defined for table 'compress_hyper_2_2_chunk', defaulting to unique indices   [io.debezium.connector.postgresql.connection.pgoutput.PgOutputMessageDecoder]
Consumed record 1 / 6 (5 more)
{"sourcePartition" : {"server" : "test_server"}, "sourceOffset" : {"lsn_proc" : "26517744", "messageType" : "INSERT", "lsn" : "26517744", "txId" : "736", "ts_usec" : "1732121187623848"}, "topic" : "timescaledb.public.conditions", "kafkaPartition" : null, "key" : null, "value" : {"before" : null, "after" : {"time" : "2024-11-20T16:46:27.613819Z", "location" : "Loc 1", "temperature" : "30.0", "humidity" : "50.0"}, "source" : {"version" : "3.0.3-SNAPSHOT", "connector" : "postgresql", "name" : "test_server", "ts_ms" : "1732121187623", "snapshot" : "false", "db" : "postgres", "sequence" : "[null,"26517744"]", "ts_us" : "1732121187623848", "ts_ns" : "1732121187623848000", "schema" : "public", "table" : "conditions", "txId" : "736", "lsn" : "26517744", "xmin" : null}, "transaction" : null, "op" : "c", "ts_ms" : "1732121187685", "ts_us" : "1732121187685506", "ts_ns" : "1732121187685506000"}}
2024-11-20 17:46:28,044 INFO   ||||  Found previous partition offset PostgresPartition [sourcePartition={server=test_server}]: {lsn_proc=26572624, messageType=MESSAGE, lsn_commit=26536240, lsn=26536240, txId=740, ts_usec=1732121187638057}   [io.debezium.connector.common.BaseSourceTask]
Consumed record 2 / 6 (4 more)
{"sourcePartition" : {"server" : "test_server"}, "sourceOffset" : {"lsn_proc" : "26519576", "messageType" : "INSERT", "lsn_commit" : "26519520", "lsn" : "26519576", "txId" : "737", "ts_usec" : "1732121187625842"}, "topic" : "timescaledb.public.conditions", "kafkaPartition" : null, "key" : null, "value" : {"before" : null, "after" : {"time" : "2024-11-20T16:46:27.624955Z", "location" : "Loc 1", "temperature" : "35.0", "humidity" : "55.0"}, "source" : {"version" : "3.0.3-SNAPSHOT", "connector" : "postgresql", "name" : "test_server", "ts_ms" : "1732121187625", "snapshot" : "false", "db" : "postgres", "sequence" : "["26519520","26519576"]", "ts_us" : "1732121187625842", "ts_ns" : "1732121187625842000", "schema" : "public", "table" : "conditions", "txId" : "737", "lsn" : "26519576", "xmin" : null}, "transaction" : null, "op" : "c", "ts_ms" : "1732121187697", "ts_us" : "1732121187697453", "ts_ns" : "1732121187697453000"}}
Consumed record 3 / 6 (3 more)
{"sourcePartition" : {"server" : "test_server"}, "sourceOffset" : {"lsn_proc" : "26519832", "messageType" : "INSERT", "lsn_commit" : "26519776", "lsn" : "26519832", "txId" : "738", "ts_usec" : "1732121187627092"}, "topic" : "timescaledb.public.conditions", "kafkaPartition" : null, "key" : null, "value" : {"before" : null, "after" : {"time" : "2024-11-20T16:46:27.626771Z", "location" : "Loc 1", "temperature" : "40.0", "humidity" : "60.0"}, "source" : {"version" : "3.0.3-SNAPSHOT", "connector" : "postgresql", "name" : "test_server", "ts_ms" : "1732121187627", "snapshot" : "false", "db" : "postgres", "sequence" : "["26519776","26519832"]", "ts_us" : "1732121187627092", "ts_ns" : "1732121187627092000", "schema" : "public", "table" : "conditions", "txId" : "738", "lsn" : "26519832", "xmin" : null}, "transaction" : null, "op" : "c", "ts_ms" : "1732121187697", "ts_us" : "1732121187697865", "ts_ns" : "1732121187697865000"}}
Consumed record 4 / 6 (2 more)
{"sourcePartition" : {"server" : "test_server"}, "sourceOffset" : {"lsn_proc" : "26536240", "messageType" : "MESSAGE", "lsn_commit" : "26536240", "lsn" : "26536384", "txId" : "740", "ts_usec" : "1732121187638057"}, "topic" : "test_server.message", "kafkaPartition" : null, "key" : {"prefix" : "::timescaledb-compression-start"}, "value" : {"op" : "m", "ts_ms" : "1732121187719", "source" : {"version" : "3.0.3-SNAPSHOT", "connector" : "postgresql", "name" : "test_server", "ts_ms" : "1732121187638", "snapshot" : "false", "db" : "postgres", "sequence" : "["26536240","26536384"]", "ts_us" : "1732121187638057", "ts_ns" : "1732121187638057000", "schema" : "", "table" : "", "txId" : "740", "lsn" : "26536384", "xmin" : null}, "transaction" : null, "message" : {"prefix" : "::timescaledb-compression-start", "content" : []}}}
Consumed record 5 / 6 (1 more)
{"sourcePartition" : {"server" : "test_server"}, "sourceOffset" : {"lsn_proc" : "26560808", "messageType" : "INSERT", "lsn_commit" : "26536240", "lsn" : "26560808", "txId" : "740", "ts_usec" : "1732121187638057"}, "topic" : "timescaledb._timescaledb_internal._compressed_hypertable_2", "kafkaPartition" : null, "key" : null, "value" : {"before" : null, "after" : {"_ts_meta_count" : "3", "location" : "Loc 1", "_ts_meta_min_1" : "2024-11-20T16:46:27.613819Z", "_ts_meta_max_1" : "2024-11-20T16:46:27.626771Z", "time" : [66, 65, 65, 65, 65, 115, 112, 90, 113, 79, 67, 99, 101, 47, 47, 47, 47, 47, 47, 47, 47, 57, 83, 65, 65, 65, 65, 65, 65, 119, 65, 65, 65, 65, 77, 65, 65, 65, 65, 65, 65, 65, 65, 76, 55, 103, 65, 70, 108, 76, 78, 82, 119, 90, 52, 109, 65, 65, 87, 85, 115, 49, 72, 66, 114, 70, 85, 65, 65, 65, 65, 65, 65, 65, 66, 73, 122, 119, 61, 61], "temperature" : [65, 119, 66, 65, 80, 103, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 77, 65, 65, 65, 65, 66, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 69, 65, 65, 65, 65, 65, 65, 65, 65, 65, 66, 119, 65, 65, 65, 65, 77, 65, 65, 65, 65, 66, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 69, 65, 65, 65, 65, 65, 65, 65, 65, 65, 66, 119, 65, 65, 65, 65, 69, 83, 65, 65, 65, 65, 65, 65, 65, 65, 107, 48, 69, 65, 65, 65, 65, 68, 65, 65, 65, 65, 65, 81, 65, 65, 65, 65, 65, 65, 65, 65, 65, 69, 65, 65, 65, 65, 65, 65, 65, 65, 67, 69, 48, 65, 65, 65, 65, 66, 71, 81, 65, 65, 65, 65, 65, 66, 47, 51, 65, 82], "humidity" : [65, 119, 66, 65, 83, 81, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 77, 65, 65, 65, 65, 66, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 69, 65, 65, 65, 65, 65, 65, 65, 65, 65, 66, 119, 65, 65, 65, 65, 77, 65, 65, 65, 65, 66, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 69, 65, 65, 65, 65, 65, 65, 65, 65, 65, 66, 119, 65, 65, 65, 65, 69, 83, 65, 65, 65, 65, 65, 65, 65, 65, 52, 48, 69, 65, 65, 65, 65, 68, 65, 65, 65, 65, 65, 81, 65, 65, 65, 65, 65, 65, 65, 65, 65, 69, 65, 65, 65, 65, 65, 65, 65, 65, 65, 48, 52, 65, 65, 65, 65, 66, 70, 81, 65, 65, 65, 65, 65, 65, 70, 117, 65, 110]}, "source" : {"version" : "3.0.3-SNAPSHOT", "connector" : "postgresql", "name" : "test_server", "ts_ms" : "1732121187638", "snapshot" : "false", "db" : "postgres", "sequence" : "["26536240","26560808"]", "ts_us" : "1732121187638057", "ts_ns" : "1732121187638057000", "schema" : "_timescaledb_internal", "table" : "_compressed_hypertable_2", "txId" : "740", "lsn" : "26560808", "xmin" : null}, "transaction" : null, "op" : "c", "ts_ms" : "1732121187736", "ts_us" : "1732121187736103", "ts_ns" : "1732121187736103000"}}
Consumed record 6 / 6 (0 more)
{"sourcePartition" : {"server" : "test_server"}, "sourceOffset" : {"lsn_proc" : "26572624", "messageType" : "MESSAGE", "lsn_commit" : "26536240", "lsn" : "26573408", "txId" : "740", "ts_usec" : "1732121187638057"}, "topic" : "test_server.message", "kafkaPartition" : null, "key" : {"prefix" : "::timescaledb-compression-end"}, "value" : {"op" : "m", "ts_ms" : "1732121187744", "source" : {"version" : "3.0.3-SNAPSHOT", "connector" : "postgresql", "name" : "test_server", "ts_ms" : "1732121187638", "snapshot" : "false", "db" : "postgres", "sequence" : "["26536240","26573408"]", "ts_us" : "1732121187638057", "ts_ns" : "1732121187638057000", "schema" : "", "table" : "", "txId" : "740", "lsn" : "26573408", "xmin" : null}, "transaction" : null, "message" : {"prefix" : "::timescaledb-compression-end", "content" : []}}}
2024-11-20 17:46:28,058 INFO   TimescaleDbDatabaseTest|||test|  Stopping the connector   [io.debezium.connector.postgresql.transforms.timescaledb.TimescaleDbDatabaseTest]
2024-11-20 17:46:28,058 INFO   TimescaleDbDatabaseTest|||test|  Stopping the engine   [io.debezium.connector.postgresql.transforms.timescaledb.TimescaleDbDatabaseTest]
2024-11-20 17:46:28,058 INFO   TimescaleDbDatabaseTest|||test|  Engine state has changed from 'POLLING_TASKS' to 'STOPPING'   [io.debezium.embedded.async.AsyncEmbeddedEngine]
2024-11-20 17:46:28,058 INFO   ||||  Stopping down connector   [io.debezium.connector.common.BaseSourceTask]
2024-11-20 17:46:28,058 INFO   TimescaleDbDatabaseTest|||engine|  Task interrupted while polling.   [io.debezium.embedded.async.AsyncEmbeddedEngine]
2024-11-20 17:46:28,255 INFO   Postgres|test_server|0|streaming|postgres  Finished streaming   [io.debezium.pipeline.ChangeEventSourceCoordinator]
2024-11-20 17:46:28,255 INFO   Postgres|test_server|0|streaming|postgres  Connected metrics set to 'false'   [io.debezium.pipeline.ChangeEventSourceCoordinator]
2024-11-20 17:46:28,256 INFO   ||||  SignalProcessor stopped   [io.debezium.pipeline.signal.SignalProcessor]
2024-11-20 17:46:28,256 INFO   ||||  Debezium ServiceRegistry stopped.   [io.debezium.service.DefaultServiceRegistry]
2024-11-20 17:46:28,256 DEBUG  ||||  Closing message decoder   [io.debezium.connector.postgresql.connection.PostgresReplicationConnection]
2024-11-20 17:46:28,257 INFO   ||||  Connection gracefully closed   [io.debezium.jdbc.JdbcConnection]
2024-11-20 17:46:28,257 DEBUG  ||||  Closing replication connection   [io.debezium.connector.postgresql.connection.PostgresReplicationConnection]
2024-11-20 17:46:28,257 INFO   ||||  Connection gracefully closed   [io.debezium.jdbc.JdbcConnection]
2024-11-20 17:46:28,278 INFO   ||||  Connection gracefully closed   [io.debezium.jdbc.JdbcConnection]
2024-11-20 17:46:28,279 INFO   ||||  Connection gracefully closed   [io.debezium.jdbc.JdbcConnection]
2024-11-20 17:46:28,279 INFO   TimescaleDbDatabaseTest|||test|  Stopped task #1 out of 1 tasks (it took 220 ms to stop the task).   [io.debezium.embedded.async.AsyncEmbeddedEngine]
2024-11-20 17:46:28,279 INFO   ||||  Connection gracefully closed   [io.debezium.jdbc.JdbcConnection]
2024-11-20 17:46:28,280 INFO   TimescaleDbDatabaseTest|||engine|  Engine is stopped.   [io.debezium.embedded.async.AsyncEmbeddedEngine]
2024-11-20 17:46:28,280 INFO   TimescaleDbDatabaseTest|||engine|  Engine state has changed from 'STOPPING' to 'STOPPED'   [io.debezium.embedded.async.AsyncEmbeddedEngine]
2024-11-20 17:46:28,280 INFO   TimescaleDbDatabaseTest|||engine|  Connector 'io.debezium.connector.postgresql.PostgresConnector' completed normally.   [io.debezium.connector.postgresql.transforms.timescaledb.TimescaleDbDatabaseTest]
2024-11-20 17:46:28,384 INFO   TimescaleDbDatabaseTest|||test|  Interrupting the engine   [io.debezium.connector.postgresql.transforms.timescaledb.TimescaleDbDatabaseTest]
2024-11-20 17:46:28,553 INFO   TimescaleDbDatabaseTest|||test|  Stopping the connector   [io.debezium.connector.postgresql.transforms.timescaledb.TimescaleDbDatabaseTest]
2024-11-20 17:46:28,553 INFO   TimescaleDbDatabaseTest|||test|  Test io.debezium.connector.postgresql.transforms.timescaledb.TimescaleDbDatabaseTest#shouldTransformCompressedChunks succeeded   [io.debezium.connector.postgresql.transforms.timescaledb.TimescaleDbDatabaseTest]
2024-11-20 17:46:28,554 INFO   TimescaleDbDatabaseTest|||test|  Starting test io.debezium.connector.postgresql.transforms.timescaledb.TimescaleDbDatabaseTest#shouldTransformChunks   [io.debezium.connector.postgresql.transforms.timescaledb.TimescaleDbDatabaseTest]
2024-11-20 17:46:30,559 INFO   TimescaleDbDatabaseTest|||engine|  Engine state has changed from 'CREATING' to 'INITIALIZING'   [io.debezium.embedded.async.AsyncEmbeddedEngine]
2024-11-20 17:46:30,560 INFO   TimescaleDbDatabaseTest|||engine|  Loading the custom source info struct maker plugin: io.debezium.connector.postgresql.PostgresSourceInfoStructMaker   [io.debezium.config.CommonConnectorConfig]
2024-11-20 17:46:30,586 INFO   TimescaleDbDatabaseTest|||engine|  Successfully tested connection for jdbc:postgresql://localhost:57529/postgres with user 'postgres'   [io.debezium.connector.postgresql.PostgresConnector]
2024-11-20 17:46:30,597 INFO   ||||  Connection gracefully closed   [io.debezium.jdbc.JdbcConnection]
2024-11-20 17:46:30,597 INFO   TimescaleDbDatabaseTest|||engine|  Engine state has changed from 'INITIALIZING' to 'CREATING_TASKS'   [io.debezium.embedded.async.AsyncEmbeddedEngine]
2024-11-20 17:46:30,598 INFO   TimescaleDbDatabaseTest|||engine|  Engine state has changed from 'CREATING_TASKS' to 'STARTING_TASKS'   [io.debezium.embedded.async.AsyncEmbeddedEngine]
2024-11-20 17:46:30,598 INFO   TimescaleDbDatabaseTest|||engine|  Waiting max. for 180000 ms for individual source tasks to start.   [io.debezium.embedded.async.AsyncEmbeddedEngine]
2024-11-20 17:46:30,598 INFO   ||||  Starting PostgresConnectorTask with configuration:   [io.debezium.connector.common.BaseSourceTask]
2024-11-20 17:46:30,598 INFO   ||||     connector.class = io.debezium.connector.postgresql.PostgresConnector   [io.debezium.connector.common.BaseSourceTask]
2024-11-20 17:46:30,598 INFO   ||||     transforms.timescaledb.database.hostname = localhost   [io.debezium.connector.common.BaseSourceTask]
2024-11-20 17:46:30,598 INFO   ||||     transforms.timescaledb.database.password = ********   [io.debezium.connector.common.BaseSourceTask]
2024-11-20 17:46:30,598 INFO   ||||     transforms.timescaledb.database.user = postgres   [io.debezium.connector.common.BaseSourceTask]
2024-11-20 17:46:30,598 INFO   ||||     transforms.timescaledb.type = io.debezium.connector.postgresql.transforms.timescaledb.TimescaleDb   [io.debezium.connector.common.BaseSourceTask]
2024-11-20 17:46:30,598 INFO   ||||     record.processing.shutdown.timeout.ms = 1000   [io.debezium.connector.common.BaseSourceTask]
2024-11-20 17:46:30,598 INFO   ||||     transforms.timescaledb.database.port = 57529   [io.debezium.connector.common.BaseSourceTask]
2024-11-20 17:46:30,598 INFO   ||||     transforms = timescaledb   [io.debezium.connector.common.BaseSourceTask]
2024-11-20 17:46:30,598 INFO   ||||     schema.include.list = _timescaledb_internal   [io.debezium.connector.common.BaseSourceTask]
2024-11-20 17:46:30,598 INFO   ||||     slot.max.retries = 2   [io.debezium.connector.common.BaseSourceTask]
2024-11-20 17:46:30,598 INFO   ||||     record.processing.order = ORDERED   [io.debezium.connector.common.BaseSourceTask]
2024-11-20 17:46:30,598 INFO   ||||     database.sslmode = disable   [io.debezium.connector.common.BaseSourceTask]
2024-11-20 17:46:30,598 INFO   ||||     topic.prefix = test_server   [io.debezium.connector.common.BaseSourceTask]
2024-11-20 17:46:30,598 INFO   ||||     slot.retry.delay.ms = 2000   [io.debezium.connector.common.BaseSourceTask]
2024-11-20 17:46:30,598 INFO   ||||     offset.storage.file.filename = /Users/alvar/Projects/3.OpenSourceProjects/debezium/debezium-connector-postgres/target/data/file-connector-offsets.txt   [io.debezium.connector.common.BaseSourceTask]
2024-11-20 17:46:30,598 INFO   ||||     record.processing.threads =    [io.debezium.connector.common.BaseSourceTask]
2024-11-20 17:46:30,598 INFO   ||||     errors.retry.delay.initial.ms = 300   [io.debezium.connector.common.BaseSourceTask]
2024-11-20 17:46:30,598 INFO   ||||     value.converter = org.apache.kafka.connect.json.JsonConverter   [io.debezium.connector.common.BaseSourceTask]
2024-11-20 17:46:30,598 INFO   ||||     database.topic.prefix = dbserver1   [io.debezium.connector.common.BaseSourceTask]
2024-11-20 17:46:30,599 INFO   ||||     status.update.interval.ms = 100   [io.debezium.connector.common.BaseSourceTask]
2024-11-20 17:46:30,599 INFO   ||||     key.converter = org.apache.kafka.connect.json.JsonConverter   [io.debezium.connector.common.BaseSourceTask]
2024-11-20 17:46:30,599 INFO   ||||     database.user = postgres   [io.debezium.connector.common.BaseSourceTask]
2024-11-20 17:46:30,599 INFO   ||||     database.dbname = postgres   [io.debezium.connector.common.BaseSourceTask]
2024-11-20 17:46:30,599 INFO   ||||     transforms.timescaledb.database.dbname = postgres   [io.debezium.connector.common.BaseSourceTask]
2024-11-20 17:46:30,599 INFO   ||||     slot.drop.on.stop = true   [io.debezium.connector.common.BaseSourceTask]
2024-11-20 17:46:30,599 INFO   ||||     offset.storage = org.apache.kafka.connect.storage.FileOffsetBackingStore   [io.debezium.connector.common.BaseSourceTask]
2024-11-20 17:46:30,599 INFO   ||||     offset.flush.timeout.ms = 5000   [io.debezium.connector.common.BaseSourceTask]
2024-11-20 17:46:30,599 INFO   ||||     errors.retry.delay.max.ms = 10000   [io.debezium.connector.common.BaseSourceTask]
2024-11-20 17:46:30,599 INFO   ||||     plugin.name = pgoutput   [io.debezium.connector.common.BaseSourceTask]
2024-11-20 17:46:30,599 INFO   ||||     database.port = 57529   [io.debezium.connector.common.BaseSourceTask]
2024-11-20 17:46:30,599 INFO   ||||     offset.flush.interval.ms = 0   [io.debezium.connector.common.BaseSourceTask]
2024-11-20 17:46:30,599 INFO   ||||     internal.task.management.timeout.ms = 180000   [io.debezium.connector.common.BaseSourceTask]
2024-11-20 17:46:30,599 INFO   ||||     record.processing.with.serial.consumer = false   [io.debezium.connector.common.BaseSourceTask]
2024-11-20 17:46:30,599 INFO   ||||     include.unknown.datatypes = true   [io.debezium.connector.common.BaseSourceTask]
2024-11-20 17:46:30,599 INFO   ||||     errors.max.retries = -1   [io.debezium.connector.common.BaseSourceTask]
2024-11-20 17:46:30,599 INFO   ||||     database.hostname = localhost   [io.debezium.connector.common.BaseSourceTask]
2024-11-20 17:46:30,599 INFO   ||||     database.password = ********   [io.debezium.connector.common.BaseSourceTask]
2024-11-20 17:46:30,599 INFO   ||||     name = testing-connector   [io.debezium.connector.common.BaseSourceTask]
2024-11-20 17:46:30,599 INFO   ||||     snapshot.mode = no_data   [io.debezium.connector.common.BaseSourceTask]
2024-11-20 17:46:30,599 INFO   ||||  Loading the custom source info struct maker plugin: io.debezium.connector.postgresql.PostgresSourceInfoStructMaker   [io.debezium.config.CommonConnectorConfig]
2024-11-20 17:46:30,599 INFO   ||||  Loading the custom topic naming strategy plugin: io.debezium.schema.SchemaTopicNamingStrategy   [io.debezium.config.CommonConnectorConfig]
2024-11-20 17:46:30,610 INFO   ||||  Connection gracefully closed   [io.debezium.jdbc.JdbcConnection]
2024-11-20 17:46:30,645 WARN   ||||  Type [oid:13592, name:_pg_user_mappings] is already mapped   [io.debezium.connector.postgresql.TypeRegistry]
2024-11-20 17:46:30,646 WARN   ||||  Type [oid:16923, name:compression_settings] is already mapped   [io.debezium.connector.postgresql.TypeRegistry]
2024-11-20 17:46:30,646 WARN   ||||  Type [oid:16922, name:_compression_settings] is already mapped   [io.debezium.connector.postgresql.TypeRegistry]
2024-11-20 17:46:30,646 WARN   ||||  Type [oid:13266, name:cardinal_number] is already mapped   [io.debezium.connector.postgresql.TypeRegistry]
2024-11-20 17:46:30,646 WARN   ||||  Type [oid:13269, name:character_data] is already mapped   [io.debezium.connector.postgresql.TypeRegistry]
2024-11-20 17:46:30,646 WARN   ||||  Type [oid:13271, name:sql_identifier] is already mapped   [io.debezium.connector.postgresql.TypeRegistry]
2024-11-20 17:46:30,646 WARN   ||||  Type [oid:13277, name:time_stamp] is already mapped   [io.debezium.connector.postgresql.TypeRegistry]
2024-11-20 17:46:30,646 WARN   ||||  Type [oid:13279, name:yes_or_no] is already mapped   [io.debezium.connector.postgresql.TypeRegistry]
2024-11-20 17:46:30,647 INFO   ||||  No previous offsets found   [io.debezium.connector.common.BaseSourceTask]
2024-11-20 17:46:30,682 WARN   ||||  Type [oid:13592, name:_pg_user_mappings] is already mapped   [io.debezium.connector.postgresql.TypeRegistry]
2024-11-20 17:46:30,682 WARN   ||||  Type [oid:16923, name:compression_settings] is already mapped   [io.debezium.connector.postgresql.TypeRegistry]
2024-11-20 17:46:30,682 WARN   ||||  Type [oid:16922, name:_compression_settings] is already mapped   [io.debezium.connector.postgresql.TypeRegistry]
2024-11-20 17:46:30,682 WARN   ||||  Type [oid:13266, name:cardinal_number] is already mapped   [io.debezium.connector.postgresql.TypeRegistry]
2024-11-20 17:46:30,682 WARN   ||||  Type [oid:13269, name:character_data] is already mapped   [io.debezium.connector.postgresql.TypeRegistry]
2024-11-20 17:46:30,682 WARN   ||||  Type [oid:13271, name:sql_identifier] is already mapped   [io.debezium.connector.postgresql.TypeRegistry]
2024-11-20 17:46:30,682 WARN   ||||  Type [oid:13277, name:time_stamp] is already mapped   [io.debezium.connector.postgresql.TypeRegistry]
2024-11-20 17:46:30,682 WARN   ||||  Type [oid:13279, name:yes_or_no] is already mapped   [io.debezium.connector.postgresql.TypeRegistry]
2024-11-20 17:46:30,685 INFO   ||||  Connector started for the first time.   [io.debezium.connector.common.BaseSourceTask]
2024-11-20 17:46:30,685 INFO   Postgres|test_server||postgres-connector-task|  No previous offset found   [io.debezium.connector.postgresql.PostgresConnectorTask]
2024-11-20 17:46:30,688 INFO   Postgres|test_server||postgres-connector-task|  user 'postgres' connected to database 'postgres' on PostgreSQL 15.8 on x86_64-pc-linux-musl, compiled by gcc (Alpine 13.2.1_git20240309) 13.2.1 20240309, 64-bit with roles:
	role 'pg_read_all_settings' [superuser: false, replication: false, inherit: true, create role: false, create db: false, can log in: false]
	role 'pg_database_owner' [superuser: false, replication: false, inherit: true, create role: false, create db: false, can log in: false]
	role 'pg_stat_scan_tables' [superuser: false, replication: false, inherit: true, create role: false, create db: false, can log in: false]
	role 'pg_checkpoint' [superuser: false, replication: false, inherit: true, create role: false, create db: false, can log in: false]
	role 'pg_write_server_files' [superuser: false, replication: false, inherit: true, create role: false, create db: false, can log in: false]
	role 'pg_read_all_data' [superuser: false, replication: false, inherit: true, create role: false, create db: false, can log in: false]
	role 'pg_write_all_data' [superuser: false, replication: false, inherit: true, create role: false, create db: false, can log in: false]
	role 'pg_monitor' [superuser: false, replication: false, inherit: true, create role: false, create db: false, can log in: false]
	role 'pg_read_server_files' [superuser: false, replication: false, inherit: true, create role: false, create db: false, can log in: false]
	role 'pg_execute_server_program' [superuser: false, replication: false, inherit: true, create role: false, create db: false, can log in: false]
	role 'pg_read_all_stats' [superuser: false, replication: false, inherit: true, create role: false, create db: false, can log in: false]
	role 'pg_signal_backend' [superuser: false, replication: false, inherit: true, create role: false, create db: false, can log in: false]
	role 'postgres' [superuser: true, replication: true, inherit: true, create role: true, create db: true, can log in: true]   [io.debezium.connector.postgresql.PostgresConnectorTask]
2024-11-20 17:46:30,691 INFO   Postgres|test_server||postgres-connector-task|  Obtained valid replication slot ReplicationSlot [active=false, latestFlushedLsn=null, catalogXmin=null]   [io.debezium.connector.postgresql.connection.PostgresConnection]
2024-11-20 17:46:30,691 WARN   Postgres|test_server||postgres-connector-task|  Connector has enabled automated replication slot removal upon restart (slot.drop.on.stop = true). This setting is not recommended for production environments, as a new replication slot will be created after a connector restart, resulting in missed data change events.   [io.debezium.connector.postgresql.PostgresTaskContext]
2024-11-20 17:46:30,691 DEBUG  Postgres|test_server||postgres-connector-task|  Creating new replication slot 'debezium' for plugin 'PGOUTPUT'   [io.debezium.connector.postgresql.connection.PostgresReplicationConnection]
2024-11-20 17:46:30,701 INFO   Postgres|test_server||postgres-connector-task|  Initializing PgOutput logical decoder publication   [io.debezium.connector.postgresql.connection.PostgresReplicationConnection]
2024-11-20 17:46:30,709 INFO   Postgres|test_server||postgres-connector-task|  Creating replication slot with command CREATE_REPLICATION_SLOT "debezium"  LOGICAL pgoutput   [io.debezium.connector.postgresql.connection.PostgresReplicationConnection]
2024-11-20 17:46:30,712 INFO   Postgres|test_server||postgres-connector-task|  Requested thread factory for component PostgresConnector, id = test_server named = SignalProcessor   [io.debezium.util.Threads]
2024-11-20 17:46:30,712 INFO   Postgres|test_server||postgres-connector-task|  Requested thread factory for component PostgresConnector, id = test_server named = change-event-source-coordinator   [io.debezium.util.Threads]
2024-11-20 17:46:30,712 INFO   Postgres|test_server||postgres-connector-task|  Requested thread factory for component PostgresConnector, id = test_server named = blocking-snapshot   [io.debezium.util.Threads]
2024-11-20 17:46:30,712 INFO   Postgres|test_server||postgres-connector-task|  Creating thread debezium-postgresconnector-test_server-change-event-source-coordinator   [io.debezium.util.Threads]
2024-11-20 17:46:30,712 INFO   TimescaleDbDatabaseTest|||engine|  All tasks have started successfully.   [io.debezium.embedded.async.AsyncEmbeddedEngine]
2024-11-20 17:46:30,712 INFO   TimescaleDbDatabaseTest|||engine|  Engine state has changed from 'STARTING_TASKS' to 'POLLING_TASKS'   [io.debezium.embedded.async.AsyncEmbeddedEngine]
2024-11-20 17:46:30,712 INFO   TimescaleDbDatabaseTest|||engine|  Using io.debezium.embedded.async.ParallelSmtConsumerProcessor processor   [io.debezium.embedded.async.AsyncEmbeddedEngine]
2024-11-20 17:46:30,712 INFO   Postgres|test_server||snapshot|  Metrics registered   [io.debezium.pipeline.ChangeEventSourceCoordinator]
2024-11-20 17:46:30,712 INFO   Postgres|test_server||snapshot|  Context created   [io.debezium.pipeline.ChangeEventSourceCoordinator]
2024-11-20 17:46:30,712 INFO   Postgres|test_server|0|snapshot|postgres  According to the connector configuration no snapshot will be executed   [io.debezium.connector.postgresql.PostgresSnapshotChangeEventSource]
2024-11-20 17:46:30,712 INFO   Postgres|test_server|0|snapshot|postgres  Snapshot ended with SnapshotResult [status=SKIPPED, offset=null]   [io.debezium.pipeline.ChangeEventSourceCoordinator]
2024-11-20 17:46:30,712 INFO   Postgres|test_server|0|streaming|postgres  Connected metrics set to 'true'   [io.debezium.pipeline.ChangeEventSourceCoordinator]
2024-11-20 17:46:30,713 INFO   Postgres|test_server|0|streaming|postgres  Creating initial offset context   [io.debezium.connector.postgresql.PostgresOffsetContext]
2024-11-20 17:46:30,715 INFO   Postgres|test_server|0|streaming|postgres  Read xlogStart at 'LSN{0/193C9F8}' from transaction '735'   [io.debezium.connector.postgresql.PostgresOffsetContext]
2024-11-20 17:46:30,756 INFO   Postgres|test_server|0|streaming|postgres  REPLICA IDENTITY for '_timescaledb_internal.bgw_policy_chunk_stats' is 'DEFAULT'; UPDATE and DELETE events will contain previous values only for PK columns   [io.debezium.connector.postgresql.PostgresSchema]
2024-11-20 17:46:30,757 INFO   Postgres|test_server|0|streaming|postgres  REPLICA IDENTITY for '_timescaledb_internal.bgw_job_stat_history' is 'DEFAULT'; UPDATE and DELETE events will contain previous values only for PK columns   [io.debezium.connector.postgresql.PostgresSchema]
2024-11-20 17:46:30,759 INFO   Postgres|test_server|0|streaming|postgres  REPLICA IDENTITY for '_timescaledb_internal.bgw_job_stat' is 'DEFAULT'; UPDATE and DELETE events will contain previous values only for PK columns   [io.debezium.connector.postgresql.PostgresSchema]
2024-11-20 17:46:30,761 INFO   Postgres|test_server|0|streaming|postgres  SignalProcessor started. Scheduling it every 5000ms   [io.debezium.pipeline.signal.SignalProcessor]
2024-11-20 17:46:30,761 INFO   Postgres|test_server|0|streaming|postgres  Creating thread debezium-postgresconnector-test_server-SignalProcessor   [io.debezium.util.Threads]
2024-11-20 17:46:30,761 INFO   Postgres|test_server|0|streaming|postgres  Starting streaming   [io.debezium.pipeline.ChangeEventSourceCoordinator]
2024-11-20 17:46:30,761 INFO   Postgres|test_server|0|streaming|postgres  No previous LSN found in Kafka, streaming from the latest xlogpos or flushed LSN...   [io.debezium.connector.postgresql.PostgresStreamingChangeEventSource]
2024-11-20 17:46:30,761 INFO   Postgres|test_server|0|streaming|postgres  WAL position will not be searched   [io.debezium.connector.postgresql.connection.WalPositionLocator]
2024-11-20 17:46:30,761 INFO   Postgres|test_server|0|streaming|postgres  Initializing PgOutput logical decoder publication   [io.debezium.connector.postgresql.connection.PostgresReplicationConnection]
2024-11-20 17:46:30,783 INFO   Postgres|test_server|0|streaming|postgres  Obtained valid replication slot ReplicationSlot [active=false, latestFlushedLsn=LSN{0/193C9F8}, catalogXmin=735]   [io.debezium.connector.postgresql.connection.PostgresConnection]
2024-11-20 17:46:30,784 INFO   ||||  Connection gracefully closed   [io.debezium.jdbc.JdbcConnection]
2024-11-20 17:46:30,784 DEBUG  Postgres|test_server|0|streaming|postgres  running 'IDENTIFY_SYSTEM' to validate replication connection   [io.debezium.connector.postgresql.connection.PostgresReplicationConnection]
2024-11-20 17:46:30,785 DEBUG  Postgres|test_server|0|streaming|postgres  received latest xlogpos '0/193C9F8'   [io.debezium.connector.postgresql.connection.PostgresReplicationConnection]
2024-11-20 17:46:30,785 DEBUG  Postgres|test_server|0|streaming|postgres  starting streaming from LSN 'LSN{0/193C9F8}'   [io.debezium.connector.postgresql.connection.PostgresReplicationConnection]
2024-11-20 17:46:30,797 INFO   Postgres|test_server|0|streaming|postgres  Requested thread factory for component PostgresConnector, id = test_server named = keep-alive   [io.debezium.util.Threads]
2024-11-20 17:46:30,797 INFO   Postgres|test_server|0|streaming|postgres  Creating thread debezium-postgresconnector-test_server-keep-alive   [io.debezium.util.Threads]
2024-11-20 17:46:30,827 INFO   Postgres|test_server|0|streaming|postgres  REPLICA IDENTITY for '_timescaledb_internal.bgw_policy_chunk_stats' is 'DEFAULT'; UPDATE and DELETE events will contain previous values only for PK columns   [io.debezium.connector.postgresql.PostgresSchema]
2024-11-20 17:46:30,829 INFO   Postgres|test_server|0|streaming|postgres  REPLICA IDENTITY for '_timescaledb_internal.bgw_job_stat_history' is 'DEFAULT'; UPDATE and DELETE events will contain previous values only for PK columns   [io.debezium.connector.postgresql.PostgresSchema]
2024-11-20 17:46:30,830 INFO   Postgres|test_server|0|streaming|postgres  REPLICA IDENTITY for '_timescaledb_internal.bgw_job_stat' is 'DEFAULT'; UPDATE and DELETE events will contain previous values only for PK columns   [io.debezium.connector.postgresql.PostgresSchema]
2024-11-20 17:46:30,832 INFO   Postgres|test_server|0|streaming|postgres  Processing messages   [io.debezium.connector.postgresql.PostgresStreamingChangeEventSource]
2024-11-20 17:46:30,857 WARN   Postgres|test_server|0|streaming|postgres  Primary keys are not defined for table 'chunk_constraint', defaulting to unique indices   [io.debezium.connector.postgresql.connection.pgoutput.PgOutputMessageDecoder]
2024-11-20 17:46:30,868 WARN   Postgres|test_server|0|streaming|postgres  Primary keys are not defined for table 'chunk_index', defaulting to unique indices   [io.debezium.connector.postgresql.connection.pgoutput.PgOutputMessageDecoder]
2024-11-20 17:46:30,879 WARN   Postgres|test_server|0|streaming|postgres  Primary keys are not defined for table '_hyper_1_1_chunk', defaulting to unique indices   [io.debezium.connector.postgresql.connection.pgoutput.PgOutputMessageDecoder]
2024-11-20 17:46:30,890 WARN   Postgres|test_server|0|streaming|postgres  Primary keys are not defined for table '_hyper_1_1_chunk', defaulting to unique indices   [io.debezium.connector.postgresql.connection.pgoutput.PgOutputMessageDecoder]
2024-11-20 17:46:31,245 INFO   ||||  Found previous partition offset PostgresPartition [sourcePartition={server=test_server}]: {lsn_proc=26519832, messageType=INSERT, lsn_commit=26519776, lsn=26519776, txId=738, ts_usec=1732121190828667}   [io.debezium.connector.common.BaseSourceTask]
2024-11-20 17:46:31,247 INFO   TimescaleDbDatabaseTest|||test|  Stopping the connector   [io.debezium.connector.postgresql.transforms.timescaledb.TimescaleDbDatabaseTest]
2024-11-20 17:46:31,247 INFO   TimescaleDbDatabaseTest|||test|  Stopping the engine   [io.debezium.connector.postgresql.transforms.timescaledb.TimescaleDbDatabaseTest]
2024-11-20 17:46:31,247 INFO   TimescaleDbDatabaseTest|||test|  Engine state has changed from 'POLLING_TASKS' to 'STOPPING'   [io.debezium.embedded.async.AsyncEmbeddedEngine]
2024-11-20 17:46:31,248 INFO   ||||  Stopping down connector   [io.debezium.connector.common.BaseSourceTask]
2024-11-20 17:46:31,248 INFO   TimescaleDbDatabaseTest|||engine|  Task interrupted while polling.   [io.debezium.embedded.async.AsyncEmbeddedEngine]
2024-11-20 17:46:31,404 INFO   Postgres|test_server|0|streaming|postgres  Finished streaming   [io.debezium.pipeline.ChangeEventSourceCoordinator]
2024-11-20 17:46:31,405 INFO   Postgres|test_server|0|streaming|postgres  Connected metrics set to 'false'   [io.debezium.pipeline.ChangeEventSourceCoordinator]
2024-11-20 17:46:31,405 INFO   ||||  SignalProcessor stopped   [io.debezium.pipeline.signal.SignalProcessor]
2024-11-20 17:46:31,406 INFO   ||||  Debezium ServiceRegistry stopped.   [io.debezium.service.DefaultServiceRegistry]
2024-11-20 17:46:31,406 DEBUG  ||||  Closing message decoder   [io.debezium.connector.postgresql.connection.PostgresReplicationConnection]
2024-11-20 17:46:31,406 INFO   ||||  Connection gracefully closed   [io.debezium.jdbc.JdbcConnection]
2024-11-20 17:46:31,407 DEBUG  ||||  Closing replication connection   [io.debezium.connector.postgresql.connection.PostgresReplicationConnection]
2024-11-20 17:46:31,407 INFO   ||||  Connection gracefully closed   [io.debezium.jdbc.JdbcConnection]
2024-11-20 17:46:31,428 INFO   ||||  Connection gracefully closed   [io.debezium.jdbc.JdbcConnection]
2024-11-20 17:46:31,428 INFO   ||||  Connection gracefully closed   [io.debezium.jdbc.JdbcConnection]
2024-11-20 17:46:31,428 INFO   TimescaleDbDatabaseTest|||test|  Stopped task #1 out of 1 tasks (it took 180 ms to stop the task).   [io.debezium.embedded.async.AsyncEmbeddedEngine]
2024-11-20 17:46:31,429 INFO   ||||  Connection gracefully closed   [io.debezium.jdbc.JdbcConnection]
2024-11-20 17:46:31,429 INFO   TimescaleDbDatabaseTest|||engine|  Engine is stopped.   [io.debezium.embedded.async.AsyncEmbeddedEngine]
2024-11-20 17:46:31,429 INFO   TimescaleDbDatabaseTest|||engine|  Engine state has changed from 'STOPPING' to 'STOPPED'   [io.debezium.embedded.async.AsyncEmbeddedEngine]
2024-11-20 17:46:31,429 INFO   TimescaleDbDatabaseTest|||engine|  Connector 'io.debezium.connector.postgresql.PostgresConnector' completed normally.   [io.debezium.connector.postgresql.transforms.timescaledb.TimescaleDbDatabaseTest]
2024-11-20 17:46:31,530 INFO   TimescaleDbDatabaseTest|||test|  Interrupting the engine   [io.debezium.connector.postgresql.transforms.timescaledb.TimescaleDbDatabaseTest]
2024-11-20 17:46:31,703 INFO   TimescaleDbDatabaseTest|||test|  Stopping the connector   [io.debezium.connector.postgresql.transforms.timescaledb.TimescaleDbDatabaseTest]
2024-11-20 17:46:31,703 INFO   TimescaleDbDatabaseTest|||test|  Test io.debezium.connector.postgresql.transforms.timescaledb.TimescaleDbDatabaseTest#shouldTransformChunks succeeded   [io.debezium.connector.postgresql.transforms.timescaledb.TimescaleDbDatabaseTest]
[INFO] Tests run: 3, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 11.14 s -- in io.debezium.connector.postgresql.transforms.timescaledb.TimescaleDbDatabaseTest
[INFO] Running io.debezium.connector.postgresql.transforms.timescaledb.TimescaleDbTest
2024-11-20 17:46:31,707 INFO   TimescaleDbDatabaseTest|||test|  Starting test io.debezium.connector.postgresql.transforms.timescaledb.TimescaleDbTest#shouldProcessHypertable   [io.debezium.connector.postgresql.transforms.timescaledb.TimescaleDbTest]
2024-11-20 17:46:31,708 INFO   TimescaleDbTest|||test|  Stopping the connector   [io.debezium.connector.postgresql.transforms.timescaledb.TimescaleDbTest]
2024-11-20 17:46:31,708 INFO   TimescaleDbTest|||test|  Test io.debezium.connector.postgresql.transforms.timescaledb.TimescaleDbTest#shouldProcessHypertable succeeded   [io.debezium.connector.postgresql.transforms.timescaledb.TimescaleDbTest]
2024-11-20 17:46:31,709 INFO   TimescaleDbTest|||test|  Starting test io.debezium.connector.postgresql.transforms.timescaledb.TimescaleDbTest#shouldIgnoreMessagesWithoutRequiredSource   [io.debezium.connector.postgresql.transforms.timescaledb.TimescaleDbTest]
2024-11-20 17:46:31,709 INFO   TimescaleDbTest|||test|  Stopping the connector   [io.debezium.connector.postgresql.transforms.timescaledb.TimescaleDbTest]
2024-11-20 17:46:31,709 INFO   TimescaleDbTest|||test|  Test io.debezium.connector.postgresql.transforms.timescaledb.TimescaleDbTest#shouldIgnoreMessagesWithoutRequiredSource succeeded   [io.debezium.connector.postgresql.transforms.timescaledb.TimescaleDbTest]
2024-11-20 17:46:31,710 INFO   TimescaleDbTest|||test|  Starting test io.debezium.connector.postgresql.transforms.timescaledb.TimescaleDbTest#shouldProcessAggregate   [io.debezium.connector.postgresql.transforms.timescaledb.TimescaleDbTest]
2024-11-20 17:46:31,711 INFO   TimescaleDbTest|||test|  Stopping the connector   [io.debezium.connector.postgresql.transforms.timescaledb.TimescaleDbTest]
2024-11-20 17:46:31,711 INFO   TimescaleDbTest|||test|  Test io.debezium.connector.postgresql.transforms.timescaledb.TimescaleDbTest#shouldProcessAggregate succeeded   [io.debezium.connector.postgresql.transforms.timescaledb.TimescaleDbTest]
2024-11-20 17:46:31,712 INFO   TimescaleDbTest|||test|  Starting test io.debezium.connector.postgresql.transforms.timescaledb.TimescaleDbTest#shouldRouteToDifferentTopic   [io.debezium.connector.postgresql.transforms.timescaledb.TimescaleDbTest]
2024-11-20 17:46:31,712 INFO   TimescaleDbTest|||test|  Stopping the connector   [io.debezium.connector.postgresql.transforms.timescaledb.TimescaleDbTest]
2024-11-20 17:46:31,712 INFO   TimescaleDbTest|||test|  Test io.debezium.connector.postgresql.transforms.timescaledb.TimescaleDbTest#shouldRouteToDifferentTopic succeeded   [io.debezium.connector.postgresql.transforms.timescaledb.TimescaleDbTest]
2024-11-20 17:46:31,714 INFO   TimescaleDbTest|||test|  Starting test io.debezium.connector.postgresql.transforms.timescaledb.TimescaleDbTest#shouldWarnOnOrphanChunk   [io.debezium.connector.postgresql.transforms.timescaledb.TimescaleDbTest]
2024-11-20 17:46:31,715 WARN   TimescaleDbTest|||test|  Unable to find hypertable for chunk '_timescaledb_internal._hyper_10_1_chunk'   [io.debezium.connector.postgresql.transforms.timescaledb.TimescaleDb]
2024-11-20 17:46:31,715 INFO   TimescaleDbTest|||test|  Stopping the connector   [io.debezium.connector.postgresql.transforms.timescaledb.TimescaleDbTest]
2024-11-20 17:46:31,715 INFO   TimescaleDbTest|||test|  Test io.debezium.connector.postgresql.transforms.timescaledb.TimescaleDbTest#shouldWarnOnOrphanChunk succeeded   [io.debezium.connector.postgresql.transforms.timescaledb.TimescaleDbTest]
2024-11-20 17:46:31,716 INFO   TimescaleDbTest|||test|  Starting test io.debezium.connector.postgresql.transforms.timescaledb.TimescaleDbTest#shouldIgnoreMessagesForNonTimescaleSchema   [io.debezium.connector.postgresql.transforms.timescaledb.TimescaleDbTest]
2024-11-20 17:46:31,717 INFO   TimescaleDbTest|||test|  Stopping the connector   [io.debezium.connector.postgresql.transforms.timescaledb.TimescaleDbTest]
2024-11-20 17:46:31,717 INFO   TimescaleDbTest|||test|  Test io.debezium.connector.postgresql.transforms.timescaledb.TimescaleDbTest#shouldIgnoreMessagesForNonTimescaleSchema succeeded   [io.debezium.connector.postgresql.transforms.timescaledb.TimescaleDbTest]
[INFO] Tests run: 6, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.006 s -- in io.debezium.connector.postgresql.transforms.timescaledb.TimescaleDbTest
[INFO] Running io.debezium.connector.postgresql.PostgresPartitionTest
[INFO] Tests run: 4, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0 s -- in io.debezium.connector.postgresql.PostgresPartitionTest
[INFO] Running io.debezium.connector.postgresql.FieldTest
[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0 s -- in io.debezium.connector.postgresql.FieldTest
[INFO] Running io.debezium.connector.postgresql.CustomTypeEncodingTest
[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.001 s -- in io.debezium.connector.postgresql.CustomTypeEncodingTest
[INFO] 
[INFO] Results:
[INFO] 
[INFO] Tests run: 49, Failures: 0, Errors: 0, Skipped: 0
[INFO] 
[INFO] 
[INFO] --- plugin:3.0.3-SNAPSHOT:generate-api-spec (generate-connector-metadata) @ debezium-connector-postgres ---
[INFO] Generated API spec at /Users/alvar/Projects/3.OpenSourceProjects/debezium/debezium-connector-postgres/target/classes/META-INF/resources
[INFO] 
[INFO] --- jar:3.0.2:jar (default-jar) @ debezium-connector-postgres ---
[INFO] Building jar: /Users/alvar/Projects/3.OpenSourceProjects/debezium/debezium-connector-postgres/target/debezium-connector-postgres-3.0.3-SNAPSHOT.jar
[INFO] 
[INFO] --- source:3.1.0:test-jar-no-fork (attach-test-sources) @ debezium-connector-postgres ---
[INFO] Building jar: /Users/alvar/Projects/3.OpenSourceProjects/debezium/debezium-connector-postgres/target/debezium-connector-postgres-3.0.3-SNAPSHOT-test-sources.jar
[INFO] 
[INFO] --- jar:3.0.2:test-jar (test-jar) @ debezium-connector-postgres ---
[INFO] Building jar: /Users/alvar/Projects/3.OpenSourceProjects/debezium/debezium-connector-postgres/target/debezium-connector-postgres-3.0.3-SNAPSHOT-tests.jar
[INFO] 
[INFO] --- docker:0.43.4:build (start) @ debezium-connector-postgres ---
[INFO] Building tar: /Users/alvar/Projects/3.OpenSourceProjects/debezium/debezium-connector-postgres/target/docker/debezium/postgres-server-test-database/tmp/docker-build.tar
[INFO] DOCKER> [debezium/postgres-server-test-database:latest]: Created docker-build.tar in 22 milliseconds
[INFO] DOCKER> Step 1/3 : FROM quay.io/debezium/postgres:17
[INFO] DOCKER> 
[INFO] DOCKER> ---> 7fd4321eb273
[INFO] DOCKER> Step 2/3 : MAINTAINER Debezium community
[INFO] DOCKER> 
[INFO] DOCKER> ---> Using cache
[INFO] DOCKER> ---> f5944e5ff078
[INFO] DOCKER> Step 3/3 : RUN ln -fs /usr/share/zoneinfo/US/Samoa /etc/localtime && echo timezone=US/Samoa >> /usr/share/postgresql/postgresql.conf.sample
[INFO] DOCKER> 
[INFO] DOCKER> ---> Using cache
[INFO] DOCKER> ---> 8ab0353dfcd0
[INFO] DOCKER> Successfully built 8ab0353dfcd0
[INFO] DOCKER> Successfully tagged debezium/postgres-server-test-database:latest
[INFO] DOCKER> [debezium/postgres-server-test-database:latest]: Built image sha256:8ab03
[INFO] 
[INFO] --- docker:0.43.4:start (start) @ debezium-connector-postgres ---
[INFO] DOCKER> [debezium/postgres-server-test-database:latest]: Start container da32c37337ed
16:46:34.220 postgresThe files belonging to this database system will be owned by user "postgres".
16:46:34.220 postgresThis user must also own the server process.
16:46:34.220 postgres
16:46:34.222 postgresThe database cluster will be initialized with locale "en_US.utf8".
16:46:34.222 postgresThe default text search configuration will be set to "english".
16:46:34.222 postgres
16:46:34.222 postgresData page checksums are disabled.
16:46:34.222 postgres
16:46:34.222 postgresfixing permissions on existing directory /var/lib/postgresql/data ... ok
16:46:34.223 postgrescreating subdirectories ... ok
16:46:34.223 postgresselecting dynamic shared memory implementation ... posix
16:46:34.259 postgresselecting default "max_connections" ... 100
16:46:34.280 postgresselecting default "shared_buffers" ... 128MB
16:46:34.302 postgresselecting default time zone ... US/Samoa
16:46:34.304 postgrescreating configuration files ... ok
16:46:34.482 postgresrunning bootstrap script ... ok
16:46:34.904 postgresperforming post-bootstrap initialization ... ok
16:46:35.063 postgresinitdb: warning: enabling "trust" authentication for local connections
16:46:35.063 postgresinitdb: hint: You can change this by editing pg_hba.conf or using the option -A, or --auth-local and --auth-host, the next time you run initdb.
16:46:35.063 postgressyncing data to disk ... ok
16:46:35.063 postgres
16:46:35.063 postgres
16:46:35.063 postgresSuccess. You can now start the database server using:
16:46:35.063 postgres
16:46:35.063 postgres    pg_ctl -D /var/lib/postgresql/data -l logfile start
16:46:35.063 postgres
16:46:35.101 postgreswaiting for server to start....2024-11-20 05:46:35.101 SST [48] LOG:  starting PostgreSQL 17.1 (Debian 17.1-1.pgdg110+1) on x86_64-pc-linux-gnu, compiled by gcc (Debian 10.2.1-6) 10.2.1 20210110, 64-bit
16:46:35.102 postgres2024-11-20 05:46:35.102 SST [48] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
16:46:35.107 postgres2024-11-20 05:46:35.106 SST [51] LOG:  database system was shut down at 2024-11-20 05:46:34 SST
16:46:35.110 postgres2024-11-20 05:46:35.110 SST [48] LOG:  database system is ready to accept connections
16:46:35.186 postgres done
16:46:35.186 postgresserver started
16:46:35.234 postgres
16:46:35.234 postgres/usr/local/bin/docker-entrypoint.sh: sourcing /docker-entrypoint-initdb.d/init-permissions.sh
16:46:35.235 postgres
16:46:35.237 postgreswaiting for server to shut down...2024-11-20 05:46:35.236 SST [48] LOG:  received fast shutdown request
16:46:35.238 postgres.2024-11-20 05:46:35.238 SST [48] LOG:  aborting any active transactions
16:46:35.240 postgres2024-11-20 05:46:35.239 SST [48] LOG:  background worker "logical replication launcher" (PID 54) exited with exit code 1
16:46:35.240 postgres2024-11-20 05:46:35.240 SST [49] LOG:  shutting down
16:46:35.241 postgres2024-11-20 05:46:35.241 SST [49] LOG:  checkpoint starting: shutdown immediate
16:46:35.248 postgres2024-11-20 05:46:35.248 SST [49] LOG:  checkpoint complete: wrote 3 buffers (0.0%); 0 WAL file(s) added, 0 removed, 0 recycled; write=0.003 s, sync=0.001 s, total=0.009 s; sync files=2, longest=0.001 s, average=0.001 s; distance=0 kB, estimate=0 kB; lsn=0/15AA290, redo lsn=0/15AA290
16:46:35.252 postgres2024-11-20 05:46:35.251 SST [48] LOG:  database system is shut down
16:46:35.337 postgres done
16:46:35.337 postgresserver stopped
16:46:35.339 postgres
16:46:35.339 postgresPostgreSQL init process complete; ready for start up.
16:46:35.339 postgres
16:46:35.361 postgres2024-11-20 05:46:35.361 SST [1] LOG:  starting PostgreSQL 17.1 (Debian 17.1-1.pgdg110+1) on x86_64-pc-linux-gnu, compiled by gcc (Debian 10.2.1-6) 10.2.1 20210110, 64-bit
16:46:35.361 postgres2024-11-20 05:46:35.361 SST [1] LOG:  listening on IPv4 address "0.0.0.0", port 5432
16:46:35.361 postgres2024-11-20 05:46:35.361 SST [1] LOG:  listening on IPv6 address "::", port 5432
16:46:35.364 postgres2024-11-20 05:46:35.364 SST [1] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
16:46:35.368 postgres2024-11-20 05:46:35.368 SST [62] LOG:  database system was shut down at 2024-11-20 05:46:35 SST
16:46:35.373 postgres2024-11-20 05:46:35.373 SST [1] LOG:  database system is ready to accept connections
[INFO] DOCKER> Pattern '(?s)PostgreSQL init process complete.*database system is ready to accept connections' matched for container da32c37337ed
[INFO] DOCKER> [debezium/postgres-server-test-database:latest]: Waited on log out '(?s)PostgreSQL init process complete.*database system is ready to accept connections' 1524 ms
[INFO] 
[INFO] --- failsafe:3.1.2:integration-test (integration-test) @ debezium-connector-postgres ---
[INFO] Using auto detected provider org.apache.maven.surefire.junit4.JUnit4Provider
[INFO] 
[INFO] -------------------------------------------------------
[INFO]  T E S T S
[INFO] -------------------------------------------------------
[INFO] Running io.debezium.connector.postgresql.PostgresMoneyIT
17:46:36,111 |-INFO in ch.qos.logback.classic.LoggerContext[default] - Found resource [logback-test.xml] at [file:/Users/alvar/Projects/3.OpenSourceProjects/debezium/debezium-connector-postgres/target/test-classes/logback-test.xml]
17:46:36,111 |-WARN in ch.qos.logback.classic.LoggerContext[default] - Resource [logback-test.xml] occurs multiple times on the classpath.
17:46:36,111 |-WARN in ch.qos.logback.classic.LoggerContext[default] - Resource [logback-test.xml] occurs at [file:/Users/alvar/Projects/3.OpenSourceProjects/debezium/debezium-connector-postgres/target/test-classes/logback-test.xml]
17:46:36,111 |-WARN in ch.qos.logback.classic.LoggerContext[default] - Resource [logback-test.xml] occurs at [jar:file:/Users/alvar/.m2/repository/io/debezium/debezium-embedded/3.0.3-SNAPSHOT/debezium-embedded-3.0.3-SNAPSHOT-tests.jar!/logback-test.xml]
17:46:36,111 |-WARN in ch.qos.logback.classic.LoggerContext[default] - Resource [logback-test.xml] occurs at [jar:file:/Users/alvar/.m2/repository/io/debezium/debezium-core/3.0.3-SNAPSHOT/debezium-core-3.0.3-SNAPSHOT-tests.jar!/logback-test.xml]
17:46:36,147 |-INFO in ch.qos.logback.classic.joran.action.ConfigurationAction - debug attribute not set
17:46:36,148 |-INFO in ch.qos.logback.core.joran.action.AppenderAction - About to instantiate appender of type [ch.qos.logback.core.ConsoleAppender]
17:46:36,152 |-INFO in ch.qos.logback.core.joran.action.AppenderAction - Naming appender as [CONSOLE]
17:46:36,155 |-INFO in ch.qos.logback.core.joran.action.NestedComplexPropertyIA - Assuming default type [ch.qos.logback.classic.encoder.PatternLayoutEncoder] for [encoder] property
17:46:36,197 |-INFO in ch.qos.logback.classic.joran.action.RootLoggerAction - Setting level of ROOT logger to WARN
17:46:36,197 |-INFO in ch.qos.logback.core.joran.action.AppenderRefAction - Attaching appender named [CONSOLE] to Logger[ROOT]
17:46:36,197 |-INFO in ch.qos.logback.classic.joran.action.LoggerAction - Setting level of logger [io.debezium] to INFO
17:46:36,197 |-INFO in ch.qos.logback.classic.joran.action.LoggerAction - Setting additivity of logger [io.debezium] to false
17:46:36,197 |-INFO in ch.qos.logback.core.joran.action.AppenderRefAction - Attaching appender named [CONSOLE] to Logger[io.debezium]
17:46:36,197 |-INFO in ch.qos.logback.classic.joran.action.LoggerAction - Setting level of logger [io.debezium.embedded.EmbeddedWorkerConfig] to WARN
17:46:36,197 |-INFO in ch.qos.logback.classic.joran.action.LoggerAction - Setting additivity of logger [io.debezium.embedded.EmbeddedWorkerConfig] to false
17:46:36,197 |-INFO in ch.qos.logback.core.joran.action.AppenderRefAction - Attaching appender named [CONSOLE] to Logger[io.debezium.embedded.EmbeddedWorkerConfig]
17:46:36,197 |-INFO in ch.qos.logback.classic.joran.action.LoggerAction - Setting level of logger [org.reflections] to ERROR
17:46:36,197 |-INFO in ch.qos.logback.classic.joran.action.LoggerAction - Setting additivity of logger [org.reflections] to false
17:46:36,197 |-INFO in ch.qos.logback.core.joran.action.AppenderRefAction - Attaching appender named [CONSOLE] to Logger[org.reflections]
17:46:36,198 |-INFO in ch.qos.logback.classic.joran.action.LoggerAction - Setting level of logger [io.confluent.connect.avro] to WARN
17:46:36,198 |-INFO in ch.qos.logback.classic.joran.action.LoggerAction - Setting additivity of logger [io.confluent.connect.avro] to false
17:46:36,198 |-INFO in ch.qos.logback.core.joran.action.AppenderRefAction - Attaching appender named [CONSOLE] to Logger[io.confluent.connect.avro]
17:46:36,198 |-INFO in ch.qos.logback.classic.joran.action.LoggerAction - Setting level of logger [io.confluent.kafka.serializers] to WARN
17:46:36,198 |-INFO in ch.qos.logback.classic.joran.action.LoggerAction - Setting additivity of logger [io.confluent.kafka.serializers] to false
17:46:36,198 |-INFO in ch.qos.logback.core.joran.action.AppenderRefAction - Attaching appender named [CONSOLE] to Logger[io.confluent.kafka.serializers]
17:46:36,198 |-INFO in ch.qos.logback.classic.joran.action.LoggerAction - Setting level of logger [io.debezium.connector.postgresql.connection.PostgresReplicationConnection] to DEBUG
17:46:36,198 |-INFO in ch.qos.logback.classic.joran.action.LoggerAction - Setting additivity of logger [io.debezium.connector.postgresql.connection.PostgresReplicationConnection] to false
17:46:36,198 |-INFO in ch.qos.logback.core.joran.action.AppenderRefAction - Attaching appender named [CONSOLE] to Logger[io.debezium.connector.postgresql.connection.PostgresReplicationConnection]
17:46:36,198 |-INFO in ch.qos.logback.classic.joran.action.LoggerAction - Setting level of logger [io.debezium.pipeline.signal.channels.SourceSignalChannel] to DEBUG
17:46:36,198 |-INFO in ch.qos.logback.classic.joran.action.LoggerAction - Setting additivity of logger [io.debezium.pipeline.signal.channels.SourceSignalChannel] to false
17:46:36,198 |-INFO in ch.qos.logback.core.joran.action.AppenderRefAction - Attaching appender named [CONSOLE] to Logger[io.debezium.pipeline.signal.channels.SourceSignalChannel]
17:46:36,198 |-INFO in ch.qos.logback.classic.joran.action.ConfigurationAction - End of configuration.
17:46:36,198 |-INFO in ch.qos.logback.classic.joran.JoranConfigurator@61d6015a - Registering current configuration as safe fallback point

2024-11-20 17:46:36,305 INFO   ||||  Starting test io.debezium.connector.postgresql.PostgresMoneyIT#shouldReceiveChangesForInsertsWithDoubleMode   [io.debezium.connector.postgresql.PostgresMoneyIT]
2024-11-20 17:46:36,554 INFO   ||||  Connection gracefully closed   [io.debezium.jdbc.JdbcConnection]
2024-11-20 17:46:36,582 INFO   ||||  Connection gracefully closed   [io.debezium.jdbc.JdbcConnection]
2024-11-20 17:46:36,691 INFO   ||||  Connection gracefully closed   [io.debezium.jdbc.JdbcConnection]
2024-11-20 17:46:36,708 INFO   ||||  Connection gracefully closed   [io.debezium.jdbc.JdbcConnection]
2024-11-20 17:46:36,752 INFO   PostgresMoneyIT|||engine|  Engine state has changed from 'CREATING' to 'INITIALIZING'   [io.debezium.embedded.async.AsyncEmbeddedEngine]
2024-11-20 17:46:36,767 INFO   PostgresMoneyIT|||engine|  Loading the custom source info struct maker plugin: io.debezium.connector.postgresql.PostgresSourceInfoStructMaker   [io.debezium.config.CommonConnectorConfig]
2024-11-20 17:46:36,792 INFO   PostgresMoneyIT|||engine|  Successfully tested connection for jdbc:postgresql://localhost:5432/postgres with user 'postgres'   [io.debezium.connector.postgresql.PostgresConnector]
2024-11-20 17:46:36,804 INFO   ||||  Connection gracefully closed   [io.debezium.jdbc.JdbcConnection]
2024-11-20 17:46:36,814 INFO   PostgresMoneyIT|||engine|  Engine state has changed from 'INITIALIZING' to 'CREATING_TASKS'   [io.debezium.embedded.async.AsyncEmbeddedEngine]
2024-11-20 17:46:36,821 INFO   PostgresMoneyIT|||engine|  Engine state has changed from 'CREATING_TASKS' to 'STARTING_TASKS'   [io.debezium.embedded.async.AsyncEmbeddedEngine]
2024-11-20 17:46:36,822 INFO   PostgresMoneyIT|||engine|  Waiting max. for 180000 ms for individual source tasks to start.   [io.debezium.embedded.async.AsyncEmbeddedEngine]
2024-11-20 17:46:36,823 INFO   ||||  Starting PostgresConnectorTask with configuration:   [io.debezium.connector.common.BaseSourceTask]
2024-11-20 17:46:36,824 INFO   ||||     connector.class = io.debezium.connector.postgresql.PostgresConnector   [io.debezium.connector.common.BaseSourceTask]
2024-11-20 17:46:36,824 INFO   ||||     record.processing.shutdown.timeout.ms = 1000   [io.debezium.connector.common.BaseSourceTask]
2024-11-20 17:46:36,824 INFO   ||||     slot.max.retries = 2   [io.debezium.connector.common.BaseSourceTask]
2024-11-20 17:46:36,824 INFO   ||||     record.processing.order = ORDERED   [io.debezium.connector.common.BaseSourceTask]
2024-11-20 17:46:36,824 INFO   ||||     topic.prefix = test_server   [io.debezium.connector.common.BaseSourceTask]
2024-11-20 17:46:36,824 INFO   ||||     database.sslmode = disable   [io.debezium.connector.common.BaseSourceTask]
2024-11-20 17:46:36,824 INFO   ||||     slot.retry.delay.ms = 2000   [io.debezium.connector.common.BaseSourceTask]
2024-11-20 17:46:36,824 INFO   ||||     decimal.handling.mode = double   [io.debezium.connector.common.BaseSourceTask]
2024-11-20 17:46:36,825 INFO   ||||     offset.storage.file.filename = /Users/alvar/Projects/3.OpenSourceProjects/debezium/debezium-connector-postgres/target/data/file-connector-offsets.txt   [io.debezium.connector.common.BaseSourceTask]
2024-11-20 17:46:36,825 INFO   ||||     record.processing.threads =    [io.debezium.connector.common.BaseSourceTask]
2024-11-20 17:46:36,825 INFO   ||||     errors.retry.delay.initial.ms = 300   [io.debezium.connector.common.BaseSourceTask]
2024-11-20 17:46:36,825 INFO   ||||     value.converter = org.apache.kafka.connect.json.JsonConverter   [io.debezium.connector.common.BaseSourceTask]
2024-11-20 17:46:36,825 INFO   ||||     database.topic.prefix = dbserver1   [io.debezium.connector.common.BaseSourceTask]
2024-11-20 17:46:36,825 INFO   ||||     status.update.interval.ms = 100   [io.debezium.connector.common.BaseSourceTask]
2024-11-20 17:46:36,825 INFO   ||||     key.converter = org.apache.kafka.connect.json.JsonConverter   [io.debezium.connector.common.BaseSourceTask]
2024-11-20 17:46:36,825 INFO   ||||     database.user = postgres   [io.debezium.connector.common.BaseSourceTask]
2024-11-20 17:46:36,825 INFO   ||||     database.dbname = postgres   [io.debezium.connector.common.BaseSourceTask]
2024-11-20 17:46:36,825 INFO   ||||     slot.drop.on.stop = true   [io.debezium.connector.common.BaseSourceTask]
2024-11-20 17:46:36,825 INFO   ||||     offset.storage = org.apache.kafka.connect.storage.FileOffsetBackingStore   [io.debezium.connector.common.BaseSourceTask]
2024-11-20 17:46:36,825 INFO   ||||     offset.flush.timeout.ms = 5000   [io.debezium.connector.common.BaseSourceTask]
2024-11-20 17:46:36,825 INFO   ||||     errors.retry.delay.max.ms = 10000   [io.debezium.connector.common.BaseSourceTask]
2024-11-20 17:46:36,825 INFO   ||||     database.port = 5432   [io.debezium.connector.common.BaseSourceTask]
2024-11-20 17:46:36,826 INFO   ||||     plugin.name = decoderbufs   [io.debezium.connector.common.BaseSourceTask]
2024-11-20 17:46:36,826 INFO   ||||     offset.flush.interval.ms = 0   [io.debezium.connector.common.BaseSourceTask]
2024-11-20 17:46:36,826 INFO   ||||     internal.task.management.timeout.ms = 180000   [io.debezium.connector.common.BaseSourceTask]
2024-11-20 17:46:36,826 INFO   ||||     record.processing.with.serial.consumer = false   [io.debezium.connector.common.BaseSourceTask]
2024-11-20 17:46:36,826 INFO   ||||     errors.max.retries = -1   [io.debezium.connector.common.BaseSourceTask]
2024-11-20 17:46:36,826 INFO   ||||     database.hostname = localhost   [io.debezium.connector.common.BaseSourceTask]
2024-11-20 17:46:36,826 INFO   ||||     database.password = ********   [io.debezium.connector.common.BaseSourceTask]
2024-11-20 17:46:36,826 INFO   ||||     name = testing-connector   [io.debezium.connector.common.BaseSourceTask]
2024-11-20 17:46:36,826 INFO   ||||     snapshot.mode = no_data   [io.debezium.connector.common.BaseSourceTask]
2024-11-20 17:46:36,826 INFO   ||||  Loading the custom source info struct maker plugin: io.debezium.connector.postgresql.PostgresSourceInfoStructMaker   [io.debezium.config.CommonConnectorConfig]
2024-11-20 17:46:36,827 INFO   ||||  Loading the custom topic naming strategy plugin: io.debezium.schema.SchemaTopicNamingStrategy   [io.debezium.config.CommonConnectorConfig]
2024-11-20 17:46:36,839 INFO   ||||  Connection gracefully closed   [io.debezium.jdbc.JdbcConnection]
2024-11-20 17:46:36,873 WARN   ||||  Type [oid:13534, name:_pg_user_mappings] is already mapped   [io.debezium.connector.postgresql.TypeRegistry]
2024-11-20 17:46:36,875 WARN   ||||  Type [oid:16386, name:ltree] is already mapped   [io.debezium.connector.postgresql.TypeRegistry]
2024-11-20 17:46:36,876 WARN   ||||  Type [oid:16440, name:lquery] is already mapped   [io.debezium.connector.postgresql.TypeRegistry]
2024-11-20 17:46:36,876 WARN   ||||  Type [oid:16456, name:ltxtquery] is already mapped   [io.debezium.connector.postgresql.TypeRegistry]
2024-11-20 17:46:36,877 WARN   ||||  Type [oid:17355, name:hstore] is already mapped   [io.debezium.connector.postgresql.TypeRegistry]
2024-11-20 17:46:36,877 WARN   ||||  Type [oid:13210, name:cardinal_number] is already mapped   [io.debezium.connector.postgresql.TypeRegistry]
2024-11-20 17:46:36,877 WARN   ||||  Type [oid:13213, name:character_data] is already mapped   [io.debezium.connector.postgresql.TypeRegistry]
2024-11-20 17:46:36,877 WARN   ||||  Type [oid:13215, name:sql_identifier] is already mapped   [io.debezium.connector.postgresql.TypeRegistry]
2024-11-20 17:46:36,877 WARN   ||||  Type [oid:13221, name:time_stamp] is already mapped   [io.debezium.connector.postgresql.TypeRegistry]
2024-11-20 17:46:36,877 WARN   ||||  Type [oid:13223, name:yes_or_no] is already mapped   [io.debezium.connector.postgresql.TypeRegistry]
2024-11-20 17:46:36,911 INFO   ||||  No previous offsets found   [io.debezium.connector.common.BaseSourceTask]
2024-11-20 17:46:36,935 WARN   ||||  Type [oid:13534, name:_pg_user_mappings] is already mapped   [io.debezium.connector.postgresql.TypeRegistry]
2024-11-20 17:46:36,937 WARN   ||||  Type [oid:16386, name:ltree] is already mapped   [io.debezium.connector.postgresql.TypeRegistry]
2024-11-20 17:46:36,937 WARN   ||||  Type [oid:16440, name:lquery] is already mapped   [io.debezium.connector.postgresql.TypeRegistry]
2024-11-20 17:46:36,937 WARN   ||||  Type [oid:16456, name:ltxtquery] is already mapped   [io.debezium.connector.postgresql.TypeRegistry]
2024-11-20 17:46:36,938 WARN   ||||  Type [oid:17355, name:hstore] is already mapped   [io.debezium.connector.postgresql.TypeRegistry]
2024-11-20 17:46:36,938 WARN   ||||  Type [oid:13210, name:cardinal_number] is already mapped   [io.debezium.connector.postgresql.TypeRegistry]
2024-11-20 17:46:36,939 WARN   ||||  Type [oid:13213, name:character_data] is already mapped   [io.debezium.connector.postgresql.TypeRegistry]
2024-11-20 17:46:36,939 WARN   ||||  Type [oid:13215, name:sql_identifier] is already mapped   [io.debezium.connector.postgresql.TypeRegistry]
2024-11-20 17:46:36,939 WARN   ||||  Type [oid:13221, name:time_stamp] is already mapped   [io.debezium.connector.postgresql.TypeRegistry]
2024-11-20 17:46:36,939 WARN   ||||  Type [oid:13223, name:yes_or_no] is already mapped   [io.debezium.connector.postgresql.TypeRegistry]
2024-11-20 17:46:36,953 INFO   ||||  Connector started for the first time.   [io.debezium.connector.common.BaseSourceTask]
2024-11-20 17:46:36,954 INFO   Postgres|test_server||postgres-connector-task|  No previous offset found   [io.debezium.connector.postgresql.PostgresConnectorTask]
2024-11-20 17:46:36,958 INFO   Postgres|test_server||postgres-connector-task|  user 'postgres' connected to database 'postgres' on PostgreSQL 17.1 (Debian 17.1-1.pgdg110+1) on x86_64-pc-linux-gnu, compiled by gcc (Debian 10.2.1-6) 10.2.1 20210110, 64-bit with roles:
	role 'pg_read_all_settings' [superuser: false, replication: false, inherit: true, create role: false, create db: false, can log in: false]
	role 'pg_database_owner' [superuser: false, replication: false, inherit: true, create role: false, create db: false, can log in: false]
	role 'pg_stat_scan_tables' [superuser: false, replication: false, inherit: true, create role: false, create db: false, can log in: false]
	role 'pg_checkpoint' [superuser: false, replication: false, inherit: true, create role: false, create db: false, can log in: false]
	role 'pg_write_server_files' [superuser: false, replication: false, inherit: true, create role: false, create db: false, can log in: false]
	role 'pg_use_reserved_connections' [superuser: false, replication: false, inherit: true, create role: false, create db: false, can log in: false]
	role 'pg_read_all_data' [superuser: false, replication: false, inherit: true, create role: false, create db: false, can log in: false]
	role 'pg_write_all_data' [superuser: false, replication: false, inherit: true, create role: false, create db: false, can log in: false]
	role 'pg_monitor' [superuser: false, replication: false, inherit: true, create role: false, create db: false, can log in: false]
	role 'pg_read_server_files' [superuser: false, replication: false, inherit: true, create role: false, create db: false, can log in: false]
	role 'pg_create_subscription' [superuser: false, replication: false, inherit: true, create role: false, create db: false, can log in: false]
	role 'pg_execute_server_program' [superuser: false, replication: false, inherit: true, create role: false, create db: false, can log in: false]
	role 'pg_read_all_stats' [superuser: false, replication: false, inherit: true, create role: false, create db: false, can log in: false]
	role 'pg_signal_backend' [superuser: false, replication: false, inherit: true, create role: false, create db: false, can log in: false]
	role 'pg_maintain' [superuser: false, replication: false, inherit: true, create role: false, create db: false, can log in: false]
	role 'postgres' [superuser: true, replication: true, inherit: true, create role: true, create db: true, can log in: true]   [io.debezium.connector.postgresql.PostgresConnectorTask]
2024-11-20 17:46:36,962 INFO   Postgres|test_server||postgres-connector-task|  Obtained valid replication slot ReplicationSlot [active=false, latestFlushedLsn=null, catalogXmin=null]   [io.debezium.connector.postgresql.connection.PostgresConnection]
2024-11-20 17:46:36,965 WARN   Postgres|test_server||postgres-connector-task|  Connector has enabled automated replication slot removal upon restart (slot.drop.on.stop = true). This setting is not recommended for production environments, as a new replication slot will be created after a connector restart, resulting in missed data change events.   [io.debezium.connector.postgresql.PostgresTaskContext]
2024-11-20 17:46:36,969 DEBUG  Postgres|test_server||postgres-connector-task|  Creating new replication slot 'debezium' for plugin 'DECODERBUFS'   [io.debezium.connector.postgresql.connection.PostgresReplicationConnection]
2024-11-20 17:46:36,979 INFO   Postgres|test_server||postgres-connector-task|  Creating replication slot with command CREATE_REPLICATION_SLOT "debezium"  LOGICAL decoderbufs   [io.debezium.connector.postgresql.connection.PostgresReplicationConnection]
16:46:36.987 postgres2024-11-20 05:46:36.986 SST [74] LOG:  logical decoding found consistent point at 0/1890658
16:46:36.987 postgres2024-11-20 05:46:36.986 SST [74] DETAIL:  There are no running transactions.
16:46:36.987 postgres2024-11-20 05:46:36.986 SST [74] STATEMENT:  CREATE_REPLICATION_SLOT "debezium"  LOGICAL decoderbufs
16:46:36.987 postgres2024-11-20 05:46:36.986 SST [74] LOG:  exported logical decoding snapshot: "00000070-00000002-1" with 0 transaction IDs
16:46:36.987 postgres2024-11-20 05:46:36.986 SST [74] STATEMENT:  CREATE_REPLICATION_SLOT "debezium"  LOGICAL decoderbufs
2024-11-20 17:46:37,000 INFO   Postgres|test_server||postgres-connector-task|  Requested thread factory for component PostgresConnector, id = test_server named = SignalProcessor   [io.debezium.util.Threads]
2024-11-20 17:46:37,013 INFO   Postgres|test_server||postgres-connector-task|  Requested thread factory for component PostgresConnector, id = test_server named = change-event-source-coordinator   [io.debezium.util.Threads]
2024-11-20 17:46:37,014 INFO   Postgres|test_server||postgres-connector-task|  Requested thread factory for component PostgresConnector, id = test_server named = blocking-snapshot   [io.debezium.util.Threads]
2024-11-20 17:46:37,022 INFO   Postgres|test_server||postgres-connector-task|  Creating thread debezium-postgresconnector-test_server-change-event-source-coordinator   [io.debezium.util.Threads]
2024-11-20 17:46:37,023 INFO   PostgresMoneyIT|||engine|  All tasks have started successfully.   [io.debezium.embedded.async.AsyncEmbeddedEngine]
2024-11-20 17:46:37,023 INFO   PostgresMoneyIT|||engine|  Engine state has changed from 'STARTING_TASKS' to 'POLLING_TASKS'   [io.debezium.embedded.async.AsyncEmbeddedEngine]
2024-11-20 17:46:37,024 INFO   PostgresMoneyIT|||engine|  Using io.debezium.embedded.async.ParallelSmtConsumerProcessor processor   [io.debezium.embedded.async.AsyncEmbeddedEngine]
2024-11-20 17:46:37,237 INFO   Postgres|test_server||snapshot|  Metrics registered   [io.debezium.pipeline.ChangeEventSourceCoordinator]
2024-11-20 17:46:37,237 INFO   Postgres|test_server||snapshot|  Context created   [io.debezium.pipeline.ChangeEventSourceCoordinator]
2024-11-20 17:46:37,241 INFO   Postgres|test_server|0|snapshot|postgres  According to the connector configuration no snapshot will be executed   [io.debezium.connector.postgresql.PostgresSnapshotChangeEventSource]
2024-11-20 17:46:37,243 INFO   Postgres|test_server|0|snapshot|postgres  Snapshot ended with SnapshotResult [status=SKIPPED, offset=null]   [io.debezium.pipeline.ChangeEventSourceCoordinator]
2024-11-20 17:46:37,246 INFO   Postgres|test_server|0|streaming|postgres  Connected metrics set to 'true'   [io.debezium.pipeline.ChangeEventSourceCoordinator]
2024-11-20 17:46:37,247 INFO   Postgres|test_server|0|streaming|postgres  Creating initial offset context   [io.debezium.connector.postgresql.PostgresOffsetContext]
2024-11-20 17:46:37,250 INFO   Postgres|test_server|0|streaming|postgres  Read xlogStart at 'LSN{0/1890690}' from transaction '742'   [io.debezium.connector.postgresql.PostgresOffsetContext]
2024-11-20 17:46:37,349 INFO   Postgres|test_server|0|streaming|postgres  REPLICA IDENTITY for 'post_money.debezium_test' is 'DEFAULT'; UPDATE and DELETE events will contain previous values only for PK columns   [io.debezium.connector.postgresql.PostgresSchema]
2024-11-20 17:46:37,373 INFO   ||||  Connection gracefully closed   [io.debezium.jdbc.JdbcConnection]
2024-11-20 17:46:37,380 INFO   Postgres|test_server|0|streaming|postgres  SignalProcessor started. Scheduling it every 5000ms   [io.debezium.pipeline.signal.SignalProcessor]
2024-11-20 17:46:37,381 INFO   Postgres|test_server|0|streaming|postgres  Creating thread debezium-postgresconnector-test_server-SignalProcessor   [io.debezium.util.Threads]
2024-11-20 17:46:37,381 INFO   Postgres|test_server|0|streaming|postgres  Starting streaming   [io.debezium.pipeline.ChangeEventSourceCoordinator]
2024-11-20 17:46:37,381 INFO   Postgres|test_server|0|streaming|postgres  No previous LSN found in Kafka, streaming from the latest xlogpos or flushed LSN...   [io.debezium.connector.postgresql.PostgresStreamingChangeEventSource]
2024-11-20 17:46:37,382 INFO   Postgres|test_server|0|streaming|postgres  WAL position will not be searched   [io.debezium.connector.postgresql.connection.WalPositionLocator]
16:46:37.415 postgres2024-11-20 05:46:37.414 SST [74] LOG:  starting logical decoding for slot "debezium"
16:46:37.415 postgres2024-11-20 05:46:37.414 SST [74] DETAIL:  Streaming transactions committing after 0/1890690, reading WAL from 0/1890658.
16:46:37.415 postgres2024-11-20 05:46:37.414 SST [74] STATEMENT:  START_REPLICATION SLOT "debezium" LOGICAL 0/1890690
16:46:37.415 postgres2024-11-20 05:46:37.415 SST [74] LOG:  logical decoding found consistent point at 0/1890658
16:46:37.415 postgres2024-11-20 05:46:37.415 SST [74] DETAIL:  There are no running transactions.
16:46:37.415 postgres2024-11-20 05:46:37.415 SST [74] STATEMENT:  START_REPLICATION SLOT "debezium" LOGICAL 0/1890690
2024-11-20 17:46:37,403 INFO   Postgres|test_server|0|streaming|postgres  Obtained valid replication slot ReplicationSlot [active=false, latestFlushedLsn=LSN{0/1890690}, catalogXmin=742]   [io.debezium.connector.postgresql.connection.PostgresConnection]
2024-11-20 17:46:37,404 INFO   ||||  Connection gracefully closed   [io.debezium.jdbc.JdbcConnection]
2024-11-20 17:46:37,405 DEBUG  Postgres|test_server|0|streaming|postgres  running 'IDENTIFY_SYSTEM' to validate replication connection   [io.debezium.connector.postgresql.connection.PostgresReplicationConnection]
2024-11-20 17:46:37,407 DEBUG  Postgres|test_server|0|streaming|postgres  received latest xlogpos '0/1890A08'   [io.debezium.connector.postgresql.connection.PostgresReplicationConnection]
2024-11-20 17:46:37,408 DEBUG  Postgres|test_server|0|streaming|postgres  starting streaming from LSN 'LSN{0/1890690}'   [io.debezium.connector.postgresql.connection.PostgresReplicationConnection]
2024-11-20 17:46:37,429 INFO   Postgres|test_server|0|streaming|postgres  Requested thread factory for component PostgresConnector, id = test_server named = keep-alive   [io.debezium.util.Threads]
2024-11-20 17:46:37,429 INFO   Postgres|test_server|0|streaming|postgres  Creating thread debezium-postgresconnector-test_server-keep-alive   [io.debezium.util.Threads]
2024-11-20 17:46:37,488 INFO   Postgres|test_server|0|streaming|postgres  REPLICA IDENTITY for 'post_money.debezium_test' is 'DEFAULT'; UPDATE and DELETE events will contain previous values only for PK columns   [io.debezium.connector.postgresql.PostgresSchema]
2024-11-20 17:46:37,491 INFO   Postgres|test_server|0|streaming|postgres  Processing messages   [io.debezium.connector.postgresql.PostgresStreamingChangeEventSource]
2024-11-20 17:46:37,595 INFO   ||||  Found previous partition offset PostgresPartition [sourcePartition={server=test_server}]: {lsn_proc=25758032, messageType=INSERT, lsn_commit=25758032, lsn=25758032, txId=743, ts_usec=1732121197371378}   [io.debezium.connector.common.BaseSourceTask]
2024-11-20 17:46:37,669 INFO   PostgresMoneyIT|||test|  Stopping the connector   [io.debezium.connector.postgresql.PostgresMoneyIT]
2024-11-20 17:46:37,669 INFO   PostgresMoneyIT|||test|  Stopping the engine   [io.debezium.connector.postgresql.PostgresMoneyIT]
2024-11-20 17:46:37,669 INFO   PostgresMoneyIT|||test|  Engine state has changed from 'POLLING_TASKS' to 'STOPPING'   [io.debezium.embedded.async.AsyncEmbeddedEngine]
2024-11-20 17:46:37,669 INFO   PostgresMoneyIT|||engine|  Task interrupted while polling.   [io.debezium.embedded.async.AsyncEmbeddedEngine]
2024-11-20 17:46:37,670 INFO   ||||  Stopping down connector   [io.debezium.connector.common.BaseSourceTask]
2024-11-20 17:46:38,058 INFO   Postgres|test_server|0|streaming|postgres  Finished streaming   [io.debezium.pipeline.ChangeEventSourceCoordinator]
2024-11-20 17:46:38,058 INFO   Postgres|test_server|0|streaming|postgres  Connected metrics set to 'false'   [io.debezium.pipeline.ChangeEventSourceCoordinator]
2024-11-20 17:46:38,059 INFO   ||||  SignalProcessor stopped   [io.debezium.pipeline.signal.SignalProcessor]
2024-11-20 17:46:38,059 INFO   ||||  Debezium ServiceRegistry stopped.   [io.debezium.service.DefaultServiceRegistry]
2024-11-20 17:46:38,059 DEBUG  ||||  Closing message decoder   [io.debezium.connector.postgresql.connection.PostgresReplicationConnection]
2024-11-20 17:46:38,059 DEBUG  ||||  Closing replication connection   [io.debezium.connector.postgresql.connection.PostgresReplicationConnection]
2024-11-20 17:46:38,060 INFO   ||||  Connection gracefully closed   [io.debezium.jdbc.JdbcConnection]
2024-11-20 17:46:38,075 INFO   ||||  Connection gracefully closed   [io.debezium.jdbc.JdbcConnection]
2024-11-20 17:46:38,076 INFO   ||||  Connection gracefully closed   [io.debezium.jdbc.JdbcConnection]
2024-11-20 17:46:38,076 INFO   ||||  Connection gracefully closed   [io.debezium.jdbc.JdbcConnection]
2024-11-20 17:46:38,077 INFO   PostgresMoneyIT|||test|  Stopped task #1 out of 1 tasks (it took 406 ms to stop the task).   [io.debezium.embedded.async.AsyncEmbeddedEngine]
2024-11-20 17:46:38,078 INFO   PostgresMoneyIT|||engine|  Engine is stopped.   [io.debezium.embedded.async.AsyncEmbeddedEngine]
2024-11-20 17:46:38,078 INFO   PostgresMoneyIT|||engine|  Engine state has changed from 'STOPPING' to 'STOPPED'   [io.debezium.embedded.async.AsyncEmbeddedEngine]
2024-11-20 17:46:38,078 INFO   PostgresMoneyIT|||engine|  Connector 'io.debezium.connector.postgresql.PostgresConnector' completed normally.   [io.debezium.connector.postgresql.PostgresMoneyIT]
16:46:38.197 postgres2024-11-20 05:46:38.197 SST [78] ERROR:  replication slot "debezium" does not exist
16:46:38.197 postgres2024-11-20 05:46:38.197 SST [78] STATEMENT:  SELECT pg_drop_replication_slot('debezium')
2024-11-20 17:46:38,180 INFO   PostgresMoneyIT|||test|  Interrupting the engine   [io.debezium.connector.postgresql.PostgresMoneyIT]
2024-11-20 17:46:38,199 INFO   ||||  Connection gracefully closed   [io.debezium.jdbc.JdbcConnection]
2024-11-20 17:46:38,200 INFO   PostgresMoneyIT|||test|  Stopping the connector   [io.debezium.connector.postgresql.PostgresMoneyIT]
2024-11-20 17:46:38,201 INFO   PostgresMoneyIT|||test|  Test io.debezium.connector.postgresql.PostgresMoneyIT#shouldReceiveChangesForInsertsWithDoubleMode succeeded   [io.debezium.connector.postgresql.PostgresMoneyIT]
2024-11-20 17:46:38,205 INFO   PostgresMoneyIT|||test|  Starting test io.debezium.connector.postgresql.PostgresMoneyIT#shouldReceiveChangesForInsertNullAndZeroMoney   [io.debezium.connector.postgresql.PostgresMoneyIT]
2024-11-20 17:46:38,226 INFO   ||||  Connection gracefully closed   [io.debezium.jdbc.JdbcConnection]
2024-11-20 17:46:38,293 INFO   ||||  Connection gracefully closed   [io.debezium.jdbc.JdbcConnection]
2024-11-20 17:46:38,395 INFO   ||||  Connection gracefully closed   [io.debezium.jdbc.JdbcConnection]
2024-11-20 17:46:38,411 INFO   ||||  Connection gracefully closed   [io.debezium.jdbc.JdbcConnection]
2024-11-20 17:46:38,413 INFO   PostgresMoneyIT|||engine|  Engine state has changed from 'CREATING' to 'INITIALIZING'   [io.debezium.embedded.async.AsyncEmbeddedEngine]
2024-11-20 17:46:38,414 INFO   PostgresMoneyIT|||engine|  Loading the custom source info struct maker plugin: io.debezium.connector.postgresql.PostgresSourceInfoStructMaker   [io.debezium.config.CommonConnectorConfig]
2024-11-20 17:46:38,426 INFO   PostgresMoneyIT|||engine|  Successfully tested connection for jdbc:postgresql://localhost:5432/postgres with user 'postgres'   [io.debezium.connector.postgresql.PostgresConnector]
2024-11-20 17:46:38,431 INFO   ||||  Connection gracefully closed   [io.debezium.jdbc.JdbcConnection]
2024-11-20 17:46:38,433 INFO   PostgresMoneyIT|||engine|  Engine state has changed from 'INITIALIZING' to 'CREATING_TASKS'   [io.debezium.embedded.async.AsyncEmbeddedEngine]
2024-11-20 17:46:38,433 INFO   PostgresMoneyIT|||engine|  Engine state has changed from 'CREATING_TASKS' to 'STARTING_TASKS'   [io.debezium.embedded.async.AsyncEmbeddedEngine]
2024-11-20 17:46:38,433 INFO   PostgresMoneyIT|||engine|  Waiting max. for 180000 ms for individual source tasks to start.   [io.debezium.embedded.async.AsyncEmbeddedEngine]
2024-11-20 17:46:38,434 INFO   ||||  Starting PostgresConnectorTask with configuration:   [io.debezium.connector.common.BaseSourceTask]
2024-11-20 17:46:38,434 INFO   ||||     connector.class = io.debezium.connector.postgresql.PostgresConnector   [io.debezium.connector.common.BaseSourceTask]
2024-11-20 17:46:38,434 INFO   ||||     record.processing.shutdown.timeout.ms = 1000   [io.debezium.connector.common.BaseSourceTask]
2024-11-20 17:46:38,434 INFO   ||||     slot.max.retries = 2   [io.debezium.connector.common.BaseSourceTask]
2024-11-20 17:46:38,434 INFO   ||||     record.processing.order = ORDERED   [io.debezium.connector.common.BaseSourceTask]
2024-11-20 17:46:38,435 INFO   ||||     topic.prefix = test_server   [io.debezium.connector.common.BaseSourceTask]
2024-11-20 17:46:38,435 INFO   ||||     database.sslmode = disable   [io.debezium.connector.common.BaseSourceTask]
2024-11-20 17:46:38,435 INFO   ||||     slot.retry.delay.ms = 2000   [io.debezium.connector.common.BaseSourceTask]
2024-11-20 17:46:38,435 INFO   ||||     offset.storage.file.filename = /Users/alvar/Projects/3.OpenSourceProjects/debezium/debezium-connector-postgres/target/data/file-connector-offsets.txt   [io.debezium.connector.common.BaseSourceTask]
2024-11-20 17:46:38,435 INFO   ||||     record.processing.threads =    [io.debezium.connector.common.BaseSourceTask]
2024-11-20 17:46:38,435 INFO   ||||     errors.retry.delay.initial.ms = 300   [io.debezium.connector.common.BaseSourceTask]
2024-11-20 17:46:38,435 INFO   ||||     value.converter = org.apache.kafka.connect.json.JsonConverter   [io.debezium.connector.common.BaseSourceTask]
2024-11-20 17:46:38,435 INFO   ||||     database.topic.prefix = dbserver1   [io.debezium.connector.common.BaseSourceTask]
2024-11-20 17:46:38,435 INFO   ||||     status.update.interval.ms = 100   [io.debezium.connector.common.BaseSourceTask]
2024-11-20 17:46:38,435 INFO   ||||     key.converter = org.apache.kafka.connect.json.JsonConverter   [io.debezium.connector.common.BaseSourceTask]
2024-11-20 17:46:38,435 INFO   ||||     database.user = postgres   [io.debezium.connector.common.BaseSourceTask]
2024-11-20 17:46:38,435 INFO   ||||     database.dbname = postgres   [io.debezium.connector.common.BaseSourceTask]
2024-11-20 17:46:38,435 INFO   ||||     slot.drop.on.stop = true   [io.debezium.connector.common.BaseSourceTask]
2024-11-20 17:46:38,435 INFO   ||||     offset.storage = org.apache.kafka.connect.storage.FileOffsetBackingStore   [io.debezium.connector.common.BaseSourceTask]
2024-11-20 17:46:38,435 INFO   ||||     offset.flush.timeout.ms = 5000   [io.debezium.connector.common.BaseSourceTask]
2024-11-20 17:46:38,435 INFO   ||||     errors.retry.delay.max.ms = 10000   [io.debezium.connector.common.BaseSourceTask]
2024-11-20 17:46:38,435 INFO   ||||     database.port = 5432   [io.debezium.connector.common.BaseSourceTask]
2024-11-20 17:46:38,435 INFO   ||||     plugin.name = decoderbufs   [io.debezium.connector.common.BaseSourceTask]
2024-11-20 17:46:38,435 INFO   ||||     offset.flush.interval.ms = 0   [io.debezium.connector.common.BaseSourceTask]
2024-11-20 17:46:38,435 INFO   ||||     internal.task.management.timeout.ms = 180000   [io.debezium.connector.common.BaseSourceTask]
2024-11-20 17:46:38,435 INFO   ||||     record.processing.with.serial.consumer = false   [io.debezium.connector.common.BaseSourceTask]
2024-11-20 17:46:38,435 INFO   ||||     errors.max.retries = -1   [io.debezium.connector.common.BaseSourceTask]
2024-11-20 17:46:38,435 INFO   ||||     database.hostname = localhost   [io.debezium.connector.common.BaseSourceTask]
2024-11-20 17:46:38,435 INFO   ||||     database.password = ********   [io.debezium.connector.common.BaseSourceTask]
2024-11-20 17:46:38,435 INFO   ||||     name = testing-connector   [io.debezium.connector.common.BaseSourceTask]
2024-11-20 17:46:38,435 INFO   ||||     snapshot.mode = no_data   [io.debezium.connector.common.BaseSourceTask]
2024-11-20 17:46:38,436 INFO   ||||  Loading the custom source info struct maker plugin: io.debezium.connector.postgresql.PostgresSourceInfoStructMaker   [io.debezium.config.CommonConnectorConfig]
2024-11-20 17:46:38,436 INFO   ||||  Loading the custom topic naming strategy plugin: io.debezium.schema.SchemaTopicNamingStrategy   [io.debezium.config.CommonConnectorConfig]
2024-11-20 17:46:38,448 INFO   ||||  Connection gracefully closed   [io.debezium.jdbc.JdbcConnection]
2024-11-20 17:46:38,469 WARN   ||||  Type [oid:13534, name:_pg_user_mappings] is already mapped   [io.debezium.connector.postgresql.TypeRegistry]
2024-11-20 17:46:38,472 WARN   ||||  Type [oid:17490, name:ltree] is already mapped   [io.debezium.connector.postgresql.TypeRegistry]
2024-11-20 17:46:38,472 WARN   ||||  Type [oid:17544, name:lquery] is already mapped   [io.debezium.connector.postgresql.TypeRegistry]
2024-11-20 17:46:38,472 WARN   ||||  Type [oid:17560, name:ltxtquery] is already mapped   [io.debezium.connector.postgresql.TypeRegistry]
2024-11-20 17:46:38,473 WARN   ||||  Type [oid:18459, name:hstore] is already mapped   [io.debezium.connector.postgresql.TypeRegistry]
2024-11-20 17:46:38,473 WARN   ||||  Type [oid:13210, name:cardinal_number] is already mapped   [io.debezium.connector.postgresql.TypeRegistry]
2024-11-20 17:46:38,473 WARN   ||||  Type [oid:13213, name:character_data] is already mapped   [io.debezium.connector.postgresql.TypeRegistry]
2024-11-20 17:46:38,473 WARN   ||||  Type [oid:13215, name:sql_identifier] is already mapped   [io.debezium.connector.postgresql.TypeRegistry]
2024-11-20 17:46:38,473 WARN   ||||  Type [oid:13221, name:time_stamp] is already mapped   [io.debezium.connector.postgresql.TypeRegistry]
2024-11-20 17:46:38,473 WARN   ||||  Type [oid:13223, name:yes_or_no] is already mapped   [io.debezium.connector.postgresql.TypeRegistry]
2024-11-20 17:46:38,475 INFO   ||||  No previous offsets found   [io.debezium.connector.common.BaseSourceTask]
2024-11-20 17:46:38,497 WARN   ||||  Type [oid:13534, name:_pg_user_mappings] is already mapped   [io.debezium.connector.postgresql.TypeRegistry]
2024-11-20 17:46:38,498 WARN   ||||  Type [oid:17490, name:ltree] is already mapped   [io.debezium.connector.postgresql.TypeRegistry]
2024-11-20 17:46:38,498 WARN   ||||  Type [oid:17544, name:lquery] is already mapped   [io.debezium.connector.postgresql.TypeRegistry]
2024-11-20 17:46:38,499 WARN   ||||  Type [oid:17560, name:ltxtquery] is already mapped   [io.debezium.connector.postgresql.TypeRegistry]
2024-11-20 17:46:38,499 WARN   ||||  Type [oid:18459, name:hstore] is already mapped   [io.debezium.connector.postgresql.TypeRegistry]
2024-11-20 17:46:38,499 WARN   ||||  Type [oid:13210, name:cardinal_number] is already mapped   [io.debezium.connector.postgresql.TypeRegistry]
2024-11-20 17:46:38,499 WARN   ||||  Type [oid:13213, name:character_data] is already mapped   [io.debezium.connector.postgresql.TypeRegistry]
2024-11-20 17:46:38,499 WARN   ||||  Type [oid:13215, name:sql_identifier] is already mapped   [io.debezium.connector.postgresql.TypeRegistry]
2024-11-20 17:46:38,499 WARN   ||||  Type [oid:13221, name:time_stamp] is already mapped   [io.debezium.connector.postgresql.TypeRegistry]
2024-11-20 17:46:38,499 WARN   ||||  Type [oid:13223, name:yes_or_no] is already mapped   [io.debezium.connector.postgresql.TypeRegistry]
2024-11-20 17:46:38,503 INFO   ||||  Connector started for the first time.   [io.debezium.connector.common.BaseSourceTask]
2024-11-20 17:46:38,503 INFO   Postgres|test_server||postgres-connector-task|  No previous offset found   [io.debezium.connector.postgresql.PostgresConnectorTask]
2024-11-20 17:46:38,505 INFO   Postgres|test_server||postgres-connector-task|  user 'postgres' connected to database 'postgres' on PostgreSQL 17.1 (Debian 17.1-1.pgdg110+1) on x86_64-pc-linux-gnu, compiled by gcc (Debian 10.2.1-6) 10.2.1 20210110, 64-bit with roles:
	role 'pg_read_all_settings' [superuser: false, replication: false, inherit: true, create role: false, create db: false, can log in: false]
	role 'pg_database_owner' [superuser: false, replication: false, inherit: true, create role: false, create db: false, can log in: false]
	role 'pg_stat_scan_tables' [superuser: false, replication: false, inherit: true, create role: false, create db: false, can log in: false]
	role 'pg_checkpoint' [superuser: false, replication: false, inherit: true, create role: false, create db: false, can log in: false]
	role 'pg_write_server_files' [superuser: false, replication: false, inherit: true, create role: false, create db: false, can log in: false]
	role 'pg_use_reserved_connections' [superuser: false, replication: false, inherit: true, create role: false, create db: false, can log in: false]
	role 'pg_read_all_data' [superuser: false, replication: false, inherit: true, create role: false, create db: false, can log in: false]
	role 'pg_write_all_data' [superuser: false, replication: false, inherit: true, create role: false, create db: false, can log in: false]
	role 'pg_monitor' [superuser: false, replication: false, inherit: true, create role: false, create db: false, can log in: false]
	role 'pg_read_server_files' [superuser: false, replication: false, inherit: true, create role: false, create db: false, can log in: false]
	role 'pg_create_subscription' [superuser: false, replication: false, inherit: true, create role: false, create db: false, can log in: false]
	role 'pg_execute_server_program' [superuser: false, replication: false, inherit: true, create role: false, create db: false, can log in: false]
	role 'pg_read_all_stats' [superuser: false, replication: false, inherit: true, create role: false, create db: false, can log in: false]
	role 'pg_signal_backend' [superuser: false, replication: false, inherit: true, create role: false, create db: false, can log in: false]
	role 'pg_maintain' [superuser: false, replication: false, inherit: true, create role: false, create db: false, can log in: false]
	role 'postgres' [superuser: true, replication: true, inherit: true, create role: true, create db: true, can log in: true]   [io.debezium.connector.postgresql.PostgresConnectorTask]
2024-11-20 17:46:38,506 INFO   Postgres|test_server||postgres-connector-task|  Obtained valid replication slot ReplicationSlot [active=false, latestFlushedLsn=null, catalogXmin=null]   [io.debezium.connector.postgresql.connection.PostgresConnection]
2024-11-20 17:46:38,506 WARN   Postgres|test_server||postgres-connector-task|  Connector has enabled automated replication slot removal upon restart (slot.drop.on.stop = true). This setting is not recommended for production environments, as a new replication slot will be created after a connector restart, resulting in missed data change events.   [io.debezium.connector.postgresql.PostgresTaskContext]
2024-11-20 17:46:38,507 DEBUG  Postgres|test_server||postgres-connector-task|  Creating new replication slot 'debezium' for plugin 'DECODERBUFS'   [io.debezium.connector.postgresql.connection.PostgresReplicationConnection]
16:46:38.525 postgres2024-11-20 05:46:38.524 SST [87] LOG:  logical decoding found consistent point at 0/1B7D5B0
16:46:38.525 postgres2024-11-20 05:46:38.524 SST [87] DETAIL:  There are no running transactions.
16:46:38.525 postgres2024-11-20 05:46:38.524 SST [87] STATEMENT:  CREATE_REPLICATION_SLOT "debezium"  LOGICAL decoderbufs
16:46:38.525 postgres2024-11-20 05:46:38.525 SST [87] LOG:  exported logical decoding snapshot: "00000071-00000002-1" with 0 transaction IDs
16:46:38.525 postgres2024-11-20 05:46:38.525 SST [87] STATEMENT:  CREATE_REPLICATION_SLOT "debezium"  LOGICAL decoderbufs
16:46:38.603 postgres2024-11-20 05:46:38.603 SST [87] LOG:  starting logical decoding for slot "debezium"
16:46:38.603 postgres2024-11-20 05:46:38.603 SST [87] DETAIL:  Streaming transactions committing after 0/1B7D5E8, reading WAL from 0/1B7D5B0.
16:46:38.603 postgres2024-11-20 05:46:38.603 SST [87] STATEMENT:  START_REPLICATION SLOT "debezium" LOGICAL 0/1B7D5E8
16:46:38.603 postgres2024-11-20 05:46:38.603 SST [87] LOG:  logical decoding found consistent point at 0/1B7D5B0
16:46:38.603 postgres2024-11-20 05:46:38.603 SST [87] DETAIL:  There are no running transactions.
16:46:38.603 postgres2024-11-20 05:46:38.603 SST [87] STATEMENT:  START_REPLICATION SLOT "debezium" LOGICAL 0/1B7D5E8
2024-11-20 17:46:38,518 INFO   Postgres|test_server||postgres-connector-task|  Creating replication slot with command CREATE_REPLICATION_SLOT "debezium"  LOGICAL decoderbufs   [io.debezium.connector.postgresql.connection.PostgresReplicationConnection]
2024-11-20 17:46:38,529 INFO   Postgres|test_server||postgres-connector-task|  Requested thread factory for component PostgresConnector, id = test_server named = SignalProcessor   [io.debezium.util.Threads]
2024-11-20 17:46:38,530 INFO   Postgres|test_server||postgres-connector-task|  Requested thread factory for component PostgresConnector, id = test_server named = change-event-source-coordinator   [io.debezium.util.Threads]
2024-11-20 17:46:38,530 INFO   Postgres|test_server||postgres-connector-task|  Requested thread factory for component PostgresConnector, id = test_server named = blocking-snapshot   [io.debezium.util.Threads]
2024-11-20 17:46:38,530 INFO   Postgres|test_server||postgres-connector-task|  Creating thread debezium-postgresconnector-test_server-change-event-source-coordinator   [io.debezium.util.Threads]
2024-11-20 17:46:38,530 INFO   PostgresMoneyIT|||engine|  All tasks have started successfully.   [io.debezium.embedded.async.AsyncEmbeddedEngine]
2024-11-20 17:46:38,530 INFO   PostgresMoneyIT|||engine|  Engine state has changed from 'STARTING_TASKS' to 'POLLING_TASKS'   [io.debezium.embedded.async.AsyncEmbeddedEngine]
2024-11-20 17:46:38,530 INFO   PostgresMoneyIT|||engine|  Using io.debezium.embedded.async.ParallelSmtConsumerProcessor processor   [io.debezium.embedded.async.AsyncEmbeddedEngine]
2024-11-20 17:46:38,531 INFO   Postgres|test_server||snapshot|  Metrics registered   [io.debezium.pipeline.ChangeEventSourceCoordinator]
2024-11-20 17:46:38,531 INFO   Postgres|test_server||snapshot|  Context created   [io.debezium.pipeline.ChangeEventSourceCoordinator]
2024-11-20 17:46:38,531 INFO   Postgres|test_server|0|snapshot|postgres  According to the connector configuration no snapshot will be executed   [io.debezium.connector.postgresql.PostgresSnapshotChangeEventSource]
2024-11-20 17:46:38,531 INFO   Postgres|test_server|0|snapshot|postgres  Snapshot ended with SnapshotResult [status=SKIPPED, offset=null]   [io.debezium.pipeline.ChangeEventSourceCoordinator]
2024-11-20 17:46:38,531 INFO   Postgres|test_server|0|streaming|postgres  Connected metrics set to 'true'   [io.debezium.pipeline.ChangeEventSourceCoordinator]
2024-11-20 17:46:38,531 INFO   Postgres|test_server|0|streaming|postgres  Creating initial offset context   [io.debezium.connector.postgresql.PostgresOffsetContext]
2024-11-20 17:46:38,533 INFO   Postgres|test_server|0|streaming|postgres  Read xlogStart at 'LSN{0/1B7D5E8}' from transaction '747'   [io.debezium.connector.postgresql.PostgresOffsetContext]
2024-11-20 17:46:38,585 INFO   Postgres|test_server|0|streaming|postgres  REPLICA IDENTITY for 'post_money.debezium_test' is 'DEFAULT'; UPDATE and DELETE events will contain previous values only for PK columns   [io.debezium.connector.postgresql.PostgresSchema]
2024-11-20 17:46:38,587 INFO   Postgres|test_server|0|streaming|postgres  SignalProcessor started. Scheduling it every 5000ms   [io.debezium.pipeline.signal.SignalProcessor]
2024-11-20 17:46:38,587 INFO   Postgres|test_server|0|streaming|postgres  Creating thread debezium-postgresconnector-test_server-SignalProcessor   [io.debezium.util.Threads]
2024-11-20 17:46:38,587 INFO   Postgres|test_server|0|streaming|postgres  Starting streaming   [io.debezium.pipeline.ChangeEventSourceCoordinator]
2024-11-20 17:46:38,587 INFO   Postgres|test_server|0|streaming|postgres  No previous LSN found in Kafka, streaming from the latest xlogpos or flushed LSN...   [io.debezium.connector.postgresql.PostgresStreamingChangeEventSource]
2024-11-20 17:46:38,587 INFO   Postgres|test_server|0|streaming|postgres  WAL position will not be searched   [io.debezium.connector.postgresql.connection.WalPositionLocator]
2024-11-20 17:46:38,600 INFO   Postgres|test_server|0|streaming|postgres  Obtained valid replication slot ReplicationSlot [active=false, latestFlushedLsn=LSN{0/1B7D5E8}, catalogXmin=747]   [io.debezium.connector.postgresql.connection.PostgresConnection]
2024-11-20 17:46:38,601 INFO   ||||  Connection gracefully closed   [io.debezium.jdbc.JdbcConnection]
2024-11-20 17:46:38,601 DEBUG  Postgres|test_server|0|streaming|postgres  running 'IDENTIFY_SYSTEM' to validate replication connection   [io.debezium.connector.postgresql.connection.PostgresReplicationConnection]
2024-11-20 17:46:38,602 DEBUG  Postgres|test_server|0|streaming|postgres  received latest xlogpos '0/1B7D5E8'   [io.debezium.connector.postgresql.connection.PostgresReplicationConnection]
2024-11-20 17:46:38,602 DEBUG  Postgres|test_server|0|streaming|postgres  starting streaming from LSN 'LSN{0/1B7D5E8}'   [io.debezium.connector.postgresql.connection.PostgresReplicationConnection]
2024-11-20 17:46:38,613 INFO   Postgres|test_server|0|streaming|postgres  Requested thread factory for component PostgresConnector, id = test_server named = keep-alive   [io.debezium.util.Threads]
2024-11-20 17:46:38,614 INFO   Postgres|test_server|0|streaming|postgres  Creating thread debezium-postgresconnector-test_server-keep-alive   [io.debezium.util.Threads]
2024-11-20 17:46:38,640 INFO   Postgres|test_server|0|streaming|postgres  REPLICA IDENTITY for 'post_money.debezium_test' is 'DEFAULT'; UPDATE and DELETE events will contain previous values only for PK columns   [io.debezium.connector.postgresql.PostgresSchema]
2024-11-20 17:46:38,641 INFO   Postgres|test_server|0|streaming|postgres  Processing messages   [io.debezium.connector.postgresql.PostgresStreamingChangeEventSource]
2024-11-20 17:46:38,650 INFO   ||||  Connection gracefully closed   [io.debezium.jdbc.JdbcConnection]
2024-11-20 17:46:39,538 INFO   ||||  Found previous partition offset PostgresPartition [sourcePartition={server=test_server}]: {lsn_proc=28825640, messageType=INSERT, lsn_commit=28825640, lsn=28825640, txId=748, ts_usec=1732121198649355}   [io.debezium.connector.common.BaseSourceTask]
2024-11-20 17:46:39,547 INFO   PostgresMoneyIT|||test|  Stopping the connector   [io.debezium.connector.postgresql.PostgresMoneyIT]
2024-11-20 17:46:39,547 INFO   PostgresMoneyIT|||test|  Stopping the engine   [io.debezium.connector.postgresql.PostgresMoneyIT]
2024-11-20 17:46:39,547 INFO   PostgresMoneyIT|||test|  Engine state has changed from 'POLLING_TASKS' to 'STOPPING'   [io.debezium.embedded.async.AsyncEmbeddedEngine]
2024-11-20 17:46:39,547 INFO   PostgresMoneyIT|||engine|  Task interrupted while polling.   [io.debezium.embedded.async.AsyncEmbeddedEngine]
2024-11-20 17:46:39,547 INFO   ||||  Stopping down connector   [io.debezium.connector.common.BaseSourceTask]
16:46:39.800 postgres2024-11-20 05:46:39.800 SST [91] ERROR:  replication slot "debezium" does not exist
16:46:39.800 postgres2024-11-20 05:46:39.800 SST [91] STATEMENT:  SELECT pg_drop_replication_slot('debezium')
2024-11-20 17:46:39,661 INFO   Postgres|test_server|0|streaming|postgres  Finished streaming   [io.debezium.pipeline.ChangeEventSourceCoordinator]
2024-11-20 17:46:39,661 INFO   Postgres|test_server|0|streaming|postgres  Connected metrics set to 'false'   [io.debezium.pipeline.ChangeEventSourceCoordinator]
2024-11-20 17:46:39,662 INFO   ||||  SignalProcessor stopped   [io.debezium.pipeline.signal.SignalProcessor]
2024-11-20 17:46:39,662 INFO   ||||  Debezium ServiceRegistry stopped.   [io.debezium.service.DefaultServiceRegistry]
2024-11-20 17:46:39,662 DEBUG  ||||  Closing message decoder   [io.debezium.connector.postgresql.connection.PostgresReplicationConnection]
2024-11-20 17:46:39,662 DEBUG  ||||  Closing replication connection   [io.debezium.connector.postgresql.connection.PostgresReplicationConnection]
2024-11-20 17:46:39,662 INFO   ||||  Connection gracefully closed   [io.debezium.jdbc.JdbcConnection]
2024-11-20 17:46:39,681 INFO   ||||  Connection gracefully closed   [io.debezium.jdbc.JdbcConnection]
2024-11-20 17:46:39,682 INFO   ||||  Connection gracefully closed   [io.debezium.jdbc.JdbcConnection]
2024-11-20 17:46:39,683 INFO   ||||  Connection gracefully closed   [io.debezium.jdbc.JdbcConnection]
2024-11-20 17:46:39,683 INFO   PostgresMoneyIT|||test|  Stopped task #1 out of 1 tasks (it took 135 ms to stop the task).   [io.debezium.embedded.async.AsyncEmbeddedEngine]
2024-11-20 17:46:39,683 INFO   PostgresMoneyIT|||engine|  Engine is stopped.   [io.debezium.embedded.async.AsyncEmbeddedEngine]
2024-11-20 17:46:39,683 INFO   PostgresMoneyIT|||engine|  Engine state has changed from 'STOPPING' to 'STOPPED'   [io.debezium.embedded.async.AsyncEmbeddedEngine]
2024-11-20 17:46:39,683 INFO   PostgresMoneyIT|||engine|  Connector 'io.debezium.connector.postgresql.PostgresConnector' completed normally.   [io.debezium.connector.postgresql.PostgresMoneyIT]
2024-11-20 17:46:39,784 INFO   PostgresMoneyIT|||test|  Interrupting the engine   [io.debezium.connector.postgresql.PostgresMoneyIT]
2024-11-20 17:46:39,801 INFO   ||||  Connection gracefully closed   [io.debezium.jdbc.JdbcConnection]
2024-11-20 17:46:39,802 INFO   PostgresMoneyIT|||test|  Stopping the connector   [io.debezium.connector.postgresql.PostgresMoneyIT]
2024-11-20 17:46:39,802 INFO   PostgresMoneyIT|||test|  Test io.debezium.connector.postgresql.PostgresMoneyIT#shouldReceiveChangesForInsertNullAndZeroMoney succeeded   [io.debezium.connector.postgresql.PostgresMoneyIT]
2024-11-20 17:46:39,804 INFO   PostgresMoneyIT|||test|  Starting test io.debezium.connector.postgresql.PostgresMoneyIT#shouldReceiveChangesForInsertsWithStringMode   [io.debezium.connector.postgresql.PostgresMoneyIT]
2024-11-20 17:46:39,820 INFO   ||||  Connection gracefully closed   [io.debezium.jdbc.JdbcConnection]
2024-11-20 17:46:39,878 INFO   ||||  Connection gracefully closed   [io.debezium.jdbc.JdbcConnection]
2024-11-20 17:46:39,976 INFO   ||||  Connection gracefully closed   [io.debezium.jdbc.JdbcConnection]
2024-11-20 17:46:39,991 INFO   ||||  Connection gracefully closed   [io.debezium.jdbc.JdbcConnection]
2024-11-20 17:46:39,993 INFO   PostgresMoneyIT|||engine|  Engine state has changed from 'CREATING' to 'INITIALIZING'   [io.debezium.embedded.async.AsyncEmbeddedEngine]
2024-11-20 17:46:39,994 INFO   PostgresMoneyIT|||engine|  Loading the custom source info struct maker plugin: io.debezium.connector.postgresql.PostgresSourceInfoStructMaker   [io.debezium.config.CommonConnectorConfig]
2024-11-20 17:46:40,006 INFO   PostgresMoneyIT|||engine|  Successfully tested connection for jdbc:postgresql://localhost:5432/postgres with user 'postgres'   [io.debezium.connector.postgresql.PostgresConnector]
2024-11-20 17:46:40,012 INFO   ||||  Connection gracefully closed   [io.debezium.jdbc.JdbcConnection]
2024-11-20 17:46:40,013 INFO   PostgresMoneyIT|||engine|  Engine state has changed from 'INITIALIZING' to 'CREATING_TASKS'   [io.debezium.embedded.async.AsyncEmbeddedEngine]
2024-11-20 17:46:40,013 INFO   PostgresMoneyIT|||engine|  Engine state has changed from 'CREATING_TASKS' to 'STARTING_TASKS'   [io.debezium.embedded.async.AsyncEmbeddedEngine]
2024-11-20 17:46:40,013 INFO   PostgresMoneyIT|||engine|  Waiting max. for 180000 ms for individual source tasks to start.   [io.debezium.embedded.async.AsyncEmbeddedEngine]
2024-11-20 17:46:40,014 INFO   ||||  Starting PostgresConnectorTask with configuration:   [io.debezium.connector.common.BaseSourceTask]
2024-11-20 17:46:40,014 INFO   ||||     connector.class = io.debezium.connector.postgresql.PostgresConnector   [io.debezium.connector.common.BaseSourceTask]
2024-11-20 17:46:40,014 INFO   ||||     record.processing.shutdown.timeout.ms = 1000   [io.debezium.connector.common.BaseSourceTask]
2024-11-20 17:46:40,014 INFO   ||||     slot.max.retries = 2   [io.debezium.connector.common.BaseSourceTask]
2024-11-20 17:46:40,014 INFO   ||||     record.processing.order = ORDERED   [io.debezium.connector.common.BaseSourceTask]
2024-11-20 17:46:40,014 INFO   ||||     topic.prefix = test_server   [io.debezium.connector.common.BaseSourceTask]
2024-11-20 17:46:40,014 INFO   ||||     database.sslmode = disable   [io.debezium.connector.common.BaseSourceTask]
2024-11-20 17:46:40,014 INFO   ||||     slot.retry.delay.ms = 2000   [io.debezium.connector.common.BaseSourceTask]
2024-11-20 17:46:40,014 INFO   ||||     decimal.handling.mode = string   [io.debezium.connector.common.BaseSourceTask]
2024-11-20 17:46:40,014 INFO   ||||     offset.storage.file.filename = /Users/alvar/Projects/3.OpenSourceProjects/debezium/debezium-connector-postgres/target/data/file-connector-offsets.txt   [io.debezium.connector.common.BaseSourceTask]
2024-11-20 17:46:40,014 INFO   ||||     record.processing.threads =    [io.debezium.connector.common.BaseSourceTask]
2024-11-20 17:46:40,014 INFO   ||||     errors.retry.delay.initial.ms = 300   [io.debezium.connector.common.BaseSourceTask]
2024-11-20 17:46:40,014 INFO   ||||     value.converter = org.apache.kafka.connect.json.JsonConverter   [io.debezium.connector.common.BaseSourceTask]
2024-11-20 17:46:40,014 INFO   ||||     database.topic.prefix = dbserver1   [io.debezium.connector.common.BaseSourceTask]
2024-11-20 17:46:40,014 INFO   ||||     status.update.interval.ms = 100   [io.debezium.connector.common.BaseSourceTask]
2024-11-20 17:46:40,014 INFO   ||||     key.converter = org.apache.kafka.connect.json.JsonConverter   [io.debezium.connector.common.BaseSourceTask]
2024-11-20 17:46:40,014 INFO   ||||     database.user = postgres   [io.debezium.connector.common.BaseSourceTask]
2024-11-20 17:46:40,014 INFO   ||||     database.dbname = postgres   [io.debezium.connector.common.BaseSourceTask]
2024-11-20 17:46:40,014 INFO   ||||     slot.drop.on.stop = true   [io.debezium.connector.common.BaseSourceTask]
2024-11-20 17:46:40,014 INFO   ||||     offset.storage = org.apache.kafka.connect.storage.FileOffsetBackingStore   [io.debezium.connector.common.BaseSourceTask]
2024-11-20 17:46:40,014 INFO   ||||     offset.flush.timeout.ms = 5000   [io.debezium.connector.common.BaseSourceTask]
2024-11-20 17:46:40,014 INFO   ||||     errors.retry.delay.max.ms = 10000   [io.debezium.connector.common.BaseSourceTask]
2024-11-20 17:46:40,015 INFO   ||||     database.port = 5432   [io.debezium.connector.common.BaseSourceTask]
2024-11-20 17:46:40,015 INFO   ||||     plugin.name = decoderbufs   [io.debezium.connector.common.BaseSourceTask]
2024-11-20 17:46:40,015 INFO   ||||     offset.flush.interval.ms = 0   [io.debezium.connector.common.BaseSourceTask]
2024-11-20 17:46:40,015 INFO   ||||     internal.task.management.timeout.ms = 180000   [io.debezium.connector.common.BaseSourceTask]
2024-11-20 17:46:40,015 INFO   ||||     record.processing.with.serial.consumer = false   [io.debezium.connector.common.BaseSourceTask]
2024-11-20 17:46:40,015 INFO   ||||     errors.max.retries = -1   [io.debezium.connector.common.BaseSourceTask]
2024-11-20 17:46:40,015 INFO   ||||     database.hostname = localhost   [io.debezium.connector.common.BaseSourceTask]
2024-11-20 17:46:40,015 INFO   ||||     database.password = ********   [io.debezium.connector.common.BaseSourceTask]
2024-11-20 17:46:40,015 INFO   ||||     name = testing-connector   [io.debezium.connector.common.BaseSourceTask]
2024-11-20 17:46:40,015 INFO   ||||     snapshot.mode = no_data   [io.debezium.connector.common.BaseSourceTask]
2024-11-20 17:46:40,015 INFO   ||||  Loading the custom source info struct maker plugin: io.debezium.connector.postgresql.PostgresSourceInfoStructMaker   [io.debezium.config.CommonConnectorConfig]
2024-11-20 17:46:40,015 INFO   ||||  Loading the custom topic naming strategy plugin: io.debezium.schema.SchemaTopicNamingStrategy   [io.debezium.config.CommonConnectorConfig]
2024-11-20 17:46:40,027 INFO   ||||  Connection gracefully closed   [io.debezium.jdbc.JdbcConnection]
2024-11-20 17:46:40,048 WARN   ||||  Type [oid:13534, name:_pg_user_mappings] is already mapped   [io.debezium.connector.postgresql.TypeRegistry]
2024-11-20 17:46:40,050 WARN   ||||  Type [oid:18594, name:ltree] is already mapped   [io.debezium.connector.postgresql.TypeRegistry]
2024-11-20 17:46:40,050 WARN   ||||  Type [oid:18648, name:lquery] is already mapped   [io.debezium.connector.postgresql.TypeRegistry]
2024-11-20 17:46:40,050 WARN   ||||  Type [oid:18664, name:ltxtquery] is already mapped   [io.debezium.connector.postgresql.TypeRegistry]
2024-11-20 17:46:40,051 WARN   ||||  Type [oid:19563, name:hstore] is already mapped   [io.debezium.connector.postgresql.TypeRegistry]
2024-11-20 17:46:40,051 WARN   ||||  Type [oid:13210, name:cardinal_number] is already mapped   [io.debezium.connector.postgresql.TypeRegistry]
2024-11-20 17:46:40,051 WARN   ||||  Type [oid:13213, name:character_data] is already mapped   [io.debezium.connector.postgresql.TypeRegistry]
2024-11-20 17:46:40,051 WARN   ||||  Type [oid:13215, name:sql_identifier] is already mapped   [io.debezium.connector.postgresql.TypeRegistry]
2024-11-20 17:46:40,051 WARN   ||||  Type [oid:13221, name:time_stamp] is already mapped   [io.debezium.connector.postgresql.TypeRegistry]
2024-11-20 17:46:40,051 WARN   ||||  Type [oid:13223, name:yes_or_no] is already mapped   [io.debezium.connector.postgresql.TypeRegistry]
16:46:40.101 postgres2024-11-20 05:46:40.101 SST [100] LOG:  logical decoding found consistent point at 0/1E5F360
16:46:40.101 postgres2024-11-20 05:46:40.101 SST [100] DETAIL:  There are no running transactions.
16:46:40.101 postgres2024-11-20 05:46:40.101 SST [100] STATEMENT:  CREATE_REPLICATION_SLOT "debezium"  LOGICAL decoderbufs
16:46:40.101 postgres2024-11-20 05:46:40.101 SST [100] LOG:  exported logical decoding snapshot: "00000072-00000002-1" with 0 transaction IDs
16:46:40.101 postgres2024-11-20 05:46:40.101 SST [100] STATEMENT:  CREATE_REPLICATION_SLOT "debezium"  LOGICAL decoderbufs
2024-11-20 17:46:40,052 INFO   ||||  No previous offsets found   [io.debezium.connector.common.BaseSourceTask]
2024-11-20 17:46:40,073 WARN   ||||  Type [oid:13534, name:_pg_user_mappings] is already mapped   [io.debezium.connector.postgresql.TypeRegistry]
2024-11-20 17:46:40,076 WARN   ||||  Type [oid:18594, name:ltree] is already mapped   [io.debezium.connector.postgresql.TypeRegistry]
2024-11-20 17:46:40,076 WARN   ||||  Type [oid:18648, name:lquery] is already mapped   [io.debezium.connector.postgresql.TypeRegistry]
2024-11-20 17:46:40,076 WARN   ||||  Type [oid:18664, name:ltxtquery] is already mapped   [io.debezium.connector.postgresql.TypeRegistry]
2024-11-20 17:46:40,077 WARN   ||||  Type [oid:19563, name:hstore] is already mapped   [io.debezium.connector.postgresql.TypeRegistry]
2024-11-20 17:46:40,077 WARN   ||||  Type [oid:13210, name:cardinal_number] is already mapped   [io.debezium.connector.postgresql.TypeRegistry]
2024-11-20 17:46:40,077 WARN   ||||  Type [oid:13213, name:character_data] is already mapped   [io.debezium.connector.postgresql.TypeRegistry]
2024-11-20 17:46:40,077 WARN   ||||  Type [oid:13215, name:sql_identifier] is already mapped   [io.debezium.connector.postgresql.TypeRegistry]
2024-11-20 17:46:40,077 WARN   ||||  Type [oid:13221, name:time_stamp] is already mapped   [io.debezium.connector.postgresql.TypeRegistry]
2024-11-20 17:46:40,077 WARN   ||||  Type [oid:13223, name:yes_or_no] is already mapped   [io.debezium.connector.postgresql.TypeRegistry]
2024-11-20 17:46:40,080 INFO   ||||  Connector started for the first time.   [io.debezium.connector.common.BaseSourceTask]
2024-11-20 17:46:40,080 INFO   Postgres|test_server||postgres-connector-task|  No previous offset found   [io.debezium.connector.postgresql.PostgresConnectorTask]
2024-11-20 17:46:40,082 INFO   Postgres|test_server||postgres-connector-task|  user 'postgres' connected to database 'postgres' on PostgreSQL 17.1 (Debian 17.1-1.pgdg110+1) on x86_64-pc-linux-gnu, compiled by gcc (Debian 10.2.1-6) 10.2.1 20210110, 64-bit with roles:
	role 'pg_read_all_settings' [superuser: false, replication: false, inherit: true, create role: false, create db: false, can log in: false]
	role 'pg_database_owner' [superuser: false, replication: false, inherit: true, create role: false, create db: false, can log in: false]
	role 'pg_stat_scan_tables' [superuser: false, replication: false, inherit: true, create role: false, create db: false, can log in: false]
	role 'pg_checkpoint' [superuser: false, replication: false, inherit: true, create role: false, create db: false, can log in: false]
	role 'pg_write_server_files' [superuser: false, replication: false, inherit: true, create role: false, create db: false, can log in: false]
	role 'pg_use_reserved_connections' [superuser: false, replication: false, inherit: true, create role: false, create db: false, can log in: false]
	role 'pg_read_all_data' [superuser: false, replication: false, inherit: true, create role: false, create db: false, can log in: false]
	role 'pg_write_all_data' [superuser: false, replication: false, inherit: true, create role: false, create db: false, can log in: false]
	role 'pg_monitor' [superuser: false, replication: false, inherit: true, create role: false, create db: false, can log in: false]
	role 'pg_read_server_files' [superuser: false, replication: false, inherit: true, create role: false, create db: false, can log in: false]
	role 'pg_create_subscription' [superuser: false, replication: false, inherit: true, create role: false, create db: false, can log in: false]
	role 'pg_execute_server_program' [superuser: false, replication: false, inherit: true, create role: false, create db: false, can log in: false]
	role 'pg_read_all_stats' [superuser: false, replication: false, inherit: true, create role: false, create db: false, can log in: false]
	role 'pg_signal_backend' [superuser: false, replication: false, inherit: true, create role: false, create db: false, can log in: false]
	role 'pg_maintain' [superuser: false, replication: false, inherit: true, create role: false, create db: false, can log in: false]
	role 'postgres' [superuser: true, replication: true, inherit: true, create role: true, create db: true, can log in: true]   [io.debezium.connector.postgresql.PostgresConnectorTask]
2024-11-20 17:46:40,084 INFO   Postgres|test_server||postgres-connector-task|  Obtained valid replication slot ReplicationSlot [active=false, latestFlushedLsn=null, catalogXmin=null]   [io.debezium.connector.postgresql.connection.PostgresConnection]
2024-11-20 17:46:40,084 WARN   Postgres|test_server||postgres-connector-task|  Connector has enabled automated replication slot removal upon restart (slot.drop.on.stop = true). This setting is not recommended for production environments, as a new replication slot will be created after a connector restart, resulting in missed data change events.   [io.debezium.connector.postgresql.PostgresTaskContext]
2024-11-20 17:46:40,084 DEBUG  Postgres|test_server||postgres-connector-task|  Creating new replication slot 'debezium' for plugin 'DECODERBUFS'   [io.debezium.connector.postgresql.connection.PostgresReplicationConnection]
2024-11-20 17:46:40,095 INFO   Postgres|test_server||postgres-connector-task|  Creating replication slot with command CREATE_REPLICATION_SLOT "debezium"  LOGICAL decoderbufs   [io.debezium.connector.postgresql.connection.PostgresReplicationConnection]
2024-11-20 17:46:40,105 INFO   Postgres|test_server||postgres-connector-task|  Requested thread factory for component PostgresConnector, id = test_server named = SignalProcessor   [io.debezium.util.Threads]
2024-11-20 17:46:40,105 INFO   Postgres|test_server||postgres-connector-task|  Requested thread factory for component PostgresConnector, id = test_server named = change-event-source-coordinator   [io.debezium.util.Threads]
2024-11-20 17:46:40,105 INFO   Postgres|test_server||postgres-connector-task|  Requested thread factory for component PostgresConnector, id = test_server named = blocking-snapshot   [io.debezium.util.Threads]
2024-11-20 17:46:40,106 INFO   Postgres|test_server||postgres-connector-task|  Creating thread debezium-postgresconnector-test_server-change-event-source-coordinator   [io.debezium.util.Threads]
2024-11-20 17:46:40,106 INFO   PostgresMoneyIT|||engine|  All tasks have started successfully.   [io.debezium.embedded.async.AsyncEmbeddedEngine]
2024-11-20 17:46:40,106 INFO   PostgresMoneyIT|||engine|  Engine state has changed from 'STARTING_TASKS' to 'POLLING_TASKS'   [io.debezium.embedded.async.AsyncEmbeddedEngine]
2024-11-20 17:46:40,106 INFO   PostgresMoneyIT|||engine|  Using io.debezium.embedded.async.ParallelSmtConsumerProcessor processor   [io.debezium.embedded.async.AsyncEmbeddedEngine]
2024-11-20 17:46:40,107 INFO   Postgres|test_server||snapshot|  Metrics registered   [io.debezium.pipeline.ChangeEventSourceCoordinator]
2024-11-20 17:46:40,107 INFO   Postgres|test_server||snapshot|  Context created   [io.debezium.pipeline.ChangeEventSourceCoordinator]
2024-11-20 17:46:40,107 INFO   Postgres|test_server|0|snapshot|postgres  According to the connector configuration no snapshot will be executed   [io.debezium.connector.postgresql.PostgresSnapshotChangeEventSource]
2024-11-20 17:46:40,107 INFO   Postgres|test_server|0|snapshot|postgres  Snapshot ended with SnapshotResult [status=SKIPPED, offset=null]   [io.debezium.pipeline.ChangeEventSourceCoordinator]
2024-11-20 17:46:40,107 INFO   Postgres|test_server|0|streaming|postgres  Connected metrics set to 'true'   [io.debezium.pipeline.ChangeEventSourceCoordinator]
2024-11-20 17:46:40,107 INFO   Postgres|test_server|0|streaming|postgres  Creating initial offset context   [io.debezium.connector.postgresql.PostgresOffsetContext]
2024-11-20 17:46:40,109 INFO   Postgres|test_server|0|streaming|postgres  Read xlogStart at 'LSN{0/1E5F398}' from transaction '752'   [io.debezium.connector.postgresql.PostgresOffsetContext]
2024-11-20 17:46:40,155 INFO   Postgres|test_server|0|streaming|postgres  REPLICA IDENTITY for 'post_money.debezium_test' is 'DEFAULT'; UPDATE and DELETE events will contain previous values only for PK columns   [io.debezium.connector.postgresql.PostgresSchema]
16:46:40.172 postgres2024-11-20 05:46:40.172 SST [100] LOG:  starting logical decoding for slot "debezium"
16:46:40.172 postgres2024-11-20 05:46:40.172 SST [100] DETAIL:  Streaming transactions committing after 0/1E5F398, reading WAL from 0/1E5F360.
16:46:40.172 postgres2024-11-20 05:46:40.172 SST [100] STATEMENT:  START_REPLICATION SLOT "debezium" LOGICAL 0/1E5F398
16:46:40.172 postgres2024-11-20 05:46:40.172 SST [100] LOG:  logical decoding found consistent point at 0/1E5F360
16:46:40.172 postgres2024-11-20 05:46:40.172 SST [100] DETAIL:  There are no running transactions.
16:46:40.172 postgres2024-11-20 05:46:40.172 SST [100] STATEMENT:  START_REPLICATION SLOT "debezium" LOGICAL 0/1E5F398
2024-11-20 17:46:40,157 INFO   Postgres|test_server|0|streaming|postgres  SignalProcessor started. Scheduling it every 5000ms   [io.debezium.pipeline.signal.SignalProcessor]
2024-11-20 17:46:40,157 INFO   Postgres|test_server|0|streaming|postgres  Creating thread debezium-postgresconnector-test_server-SignalProcessor   [io.debezium.util.Threads]
2024-11-20 17:46:40,157 INFO   Postgres|test_server|0|streaming|postgres  Starting streaming   [io.debezium.pipeline.ChangeEventSourceCoordinator]
2024-11-20 17:46:40,157 INFO   Postgres|test_server|0|streaming|postgres  No previous LSN found in Kafka, streaming from the latest xlogpos or flushed LSN...   [io.debezium.connector.postgresql.PostgresStreamingChangeEventSource]
2024-11-20 17:46:40,157 INFO   Postgres|test_server|0|streaming|postgres  WAL position will not be searched   [io.debezium.connector.postgresql.connection.WalPositionLocator]
2024-11-20 17:46:40,170 INFO   Postgres|test_server|0|streaming|postgres  Obtained valid replication slot ReplicationSlot [active=false, latestFlushedLsn=LSN{0/1E5F398}, catalogXmin=752]   [io.debezium.connector.postgresql.connection.PostgresConnection]
2024-11-20 17:46:40,171 INFO   ||||  Connection gracefully closed   [io.debezium.jdbc.JdbcConnection]
2024-11-20 17:46:40,171 DEBUG  Postgres|test_server|0|streaming|postgres  running 'IDENTIFY_SYSTEM' to validate replication connection   [io.debezium.connector.postgresql.connection.PostgresReplicationConnection]
2024-11-20 17:46:40,171 DEBUG  Postgres|test_server|0|streaming|postgres  received latest xlogpos '0/1E5F398'   [io.debezium.connector.postgresql.connection.PostgresReplicationConnection]
2024-11-20 17:46:40,171 DEBUG  Postgres|test_server|0|streaming|postgres  starting streaming from LSN 'LSN{0/1E5F398}'   [io.debezium.connector.postgresql.connection.PostgresReplicationConnection]
2024-11-20 17:46:40,183 INFO   Postgres|test_server|0|streaming|postgres  Requested thread factory for component PostgresConnector, id = test_server named = keep-alive   [io.debezium.util.Threads]
2024-11-20 17:46:40,183 INFO   Postgres|test_server|0|streaming|postgres  Creating thread debezium-postgresconnector-test_server-keep-alive   [io.debezium.util.Threads]
2024-11-20 17:46:40,210 INFO   Postgres|test_server|0|streaming|postgres  REPLICA IDENTITY for 'post_money.debezium_test' is 'DEFAULT'; UPDATE and DELETE events will contain previous values only for PK columns   [io.debezium.connector.postgresql.PostgresSchema]
2024-11-20 17:46:40,212 INFO   Postgres|test_server|0|streaming|postgres  Processing messages   [io.debezium.connector.postgresql.PostgresStreamingChangeEventSource]
2024-11-20 17:46:40,223 INFO   ||||  Connection gracefully closed   [io.debezium.jdbc.JdbcConnection]
2024-11-20 17:46:41,116 INFO   ||||  Found previous partition offset PostgresPartition [sourcePartition={server=test_server}]: {lsn_proc=31847720, messageType=INSERT, lsn_commit=31847720, lsn=31847720, txId=753, ts_usec=1732121200222434}   [io.debezium.connector.common.BaseSourceTask]
2024-11-20 17:46:41,122 INFO   PostgresMoneyIT|||test|  Stopping the connector   [io.debezium.connector.postgresql.PostgresMoneyIT]
2024-11-20 17:46:41,122 INFO   PostgresMoneyIT|||test|  Stopping the engine   [io.debezium.connector.postgresql.PostgresMoneyIT]
2024-11-20 17:46:41,122 INFO   PostgresMoneyIT|||test|  Engine state has changed from 'POLLING_TASKS' to 'STOPPING'   [io.debezium.embedded.async.AsyncEmbeddedEngine]
2024-11-20 17:46:41,122 INFO   ||||  Stopping down connector   [io.debezium.connector.common.BaseSourceTask]
2024-11-20 17:46:41,122 INFO   PostgresMoneyIT|||engine|  Task interrupted while polling.   [io.debezium.embedded.async.AsyncEmbeddedEngine]
2024-11-20 17:46:41,231 INFO   Postgres|test_server|0|streaming|postgres  Finished streaming   [io.debezium.pipeline.ChangeEventSourceCoordinator]
2024-11-20 17:46:41,231 INFO   Postgres|test_server|0|streaming|postgres  Connected metrics set to 'false'   [io.debezium.pipeline.ChangeEventSourceCoordinator]
2024-11-20 17:46:41,232 INFO   ||||  SignalProcessor stopped   [io.debezium.pipeline.signal.SignalProcessor]
2024-11-20 17:46:41,232 INFO   ||||  Debezium ServiceRegistry stopped.   [io.debezium.service.DefaultServiceRegistry]
2024-11-20 17:46:41,232 DEBUG  ||||  Closing message decoder   [io.debezium.connector.postgresql.connection.PostgresReplicationConnection]
2024-11-20 17:46:41,232 DEBUG  ||||  Closing replication connection   [io.debezium.connector.postgresql.connection.PostgresReplicationConnection]
2024-11-20 17:46:41,233 INFO   ||||  Connection gracefully closed   [io.debezium.jdbc.JdbcConnection]
2024-11-20 17:46:41,248 INFO   ||||  Connection gracefully closed   [io.debezium.jdbc.JdbcConnection]
2024-11-20 17:46:41,249 INFO   ||||  Connection gracefully closed   [io.debezium.jdbc.JdbcConnection]
2024-11-20 17:46:41,249 INFO   ||||  Connection gracefully closed   [io.debezium.jdbc.JdbcConnection]
2024-11-20 17:46:41,249 INFO   PostgresMoneyIT|||test|  Stopped task #1 out of 1 tasks (it took 127 ms to stop the task).   [io.debezium.embedded.async.AsyncEmbeddedEngine]
2024-11-20 17:46:41,250 INFO   PostgresMoneyIT|||engine|  Engine is stopped.   [io.debezium.embedded.async.AsyncEmbeddedEngine]
2024-11-20 17:46:41,250 INFO   PostgresMoneyIT|||engine|  Engine state has changed from 'STOPPING' to 'STOPPED'   [io.debezium.embedded.async.AsyncEmbeddedEngine]
2024-11-20 17:46:41,250 INFO   PostgresMoneyIT|||engine|  Connector 'io.debezium.connector.postgresql.PostgresConnector' completed normally.   [io.debezium.connector.postgresql.PostgresMoneyIT]
16:46:41.364 postgres2024-11-20 05:46:41.363 SST [104] ERROR:  replication slot "debezium" does not exist
16:46:41.364 postgres2024-11-20 05:46:41.363 SST [104] STATEMENT:  SELECT pg_drop_replication_slot('debezium')
2024-11-20 17:46:41,352 INFO   PostgresMoneyIT|||test|  Interrupting the engine   [io.debezium.connector.postgresql.PostgresMoneyIT]
2024-11-20 17:46:41,365 INFO   ||||  Connection gracefully closed   [io.debezium.jdbc.JdbcConnection]
2024-11-20 17:46:41,365 INFO   PostgresMoneyIT|||test|  Stopping the connector   [io.debezium.connector.postgresql.PostgresMoneyIT]
2024-11-20 17:46:41,365 INFO   PostgresMoneyIT|||test|  Test io.debezium.connector.postgresql.PostgresMoneyIT#shouldReceiveChangesForInsertsWithStringMode succeeded   [io.debezium.connector.postgresql.PostgresMoneyIT]
2024-11-20 17:46:41,366 INFO   PostgresMoneyIT|||test|  Starting test io.debezium.connector.postgresql.PostgresMoneyIT#shouldReceiveCorrectDefaultValueForHandlingMode   [io.debezium.connector.postgresql.PostgresMoneyIT]
2024-11-20 17:46:41,382 INFO   ||||  Connection gracefully closed   [io.debezium.jdbc.JdbcConnection]
2024-11-20 17:46:41,439 INFO   ||||  Connection gracefully closed   [io.debezium.jdbc.JdbcConnection]
2024-11-20 17:46:41,533 INFO   ||||  Connection gracefully closed   [io.debezium.jdbc.JdbcConnection]
2024-11-20 17:46:41,548 INFO   ||||  Connection gracefully closed   [io.debezium.jdbc.JdbcConnection]
2024-11-20 17:46:41,561 INFO   ||||  Connection gracefully closed   [io.debezium.jdbc.JdbcConnection]
2024-11-20 17:46:41,562 INFO   PostgresMoneyIT|||engine|  Engine state has changed from 'CREATING' to 'INITIALIZING'   [io.debezium.embedded.async.AsyncEmbeddedEngine]
2024-11-20 17:46:41,563 INFO   PostgresMoneyIT|||engine|  Loading the custom source info struct maker plugin: io.debezium.connector.postgresql.PostgresSourceInfoStructMaker   [io.debezium.config.CommonConnectorConfig]
2024-11-20 17:46:41,574 INFO   PostgresMoneyIT|||engine|  Successfully tested connection for jdbc:postgresql://localhost:5432/postgres with user 'postgres'   [io.debezium.connector.postgresql.PostgresConnector]
2024-11-20 17:46:41,578 INFO   ||||  Connection gracefully closed   [io.debezium.jdbc.JdbcConnection]
2024-11-20 17:46:41,579 INFO   PostgresMoneyIT|||engine|  Engine state has changed from 'INITIALIZING' to 'CREATING_TASKS'   [io.debezium.embedded.async.AsyncEmbeddedEngine]
2024-11-20 17:46:41,580 INFO   PostgresMoneyIT|||engine|  Engine state has changed from 'CREATING_TASKS' to 'STARTING_TASKS'   [io.debezium.embedded.async.AsyncEmbeddedEngine]
2024-11-20 17:46:41,580 INFO   PostgresMoneyIT|||engine|  Waiting max. for 180000 ms for individual source tasks to start.   [io.debezium.embedded.async.AsyncEmbeddedEngine]
2024-11-20 17:46:41,580 INFO   ||||  Starting PostgresConnectorTask with configuration:   [io.debezium.connector.common.BaseSourceTask]
2024-11-20 17:46:41,580 INFO   ||||     connector.class = io.debezium.connector.postgresql.PostgresConnector   [io.debezium.connector.common.BaseSourceTask]
2024-11-20 17:46:41,580 INFO   ||||     record.processing.shutdown.timeout.ms = 1000   [io.debezium.connector.common.BaseSourceTask]
2024-11-20 17:46:41,580 INFO   ||||     snapshot.select.statement.overrides.post_money.debezium_test = SELECT id, null AS m FROM post_money.debezium_test   [io.debezium.connector.common.BaseSourceTask]
2024-11-20 17:46:41,580 INFO   ||||     slot.max.retries = 2   [io.debezium.connector.common.BaseSourceTask]
2024-11-20 17:46:41,580 INFO   ||||     record.processing.order = ORDERED   [io.debezium.connector.common.BaseSourceTask]
2024-11-20 17:46:41,580 INFO   ||||     topic.prefix = test_server   [io.debezium.connector.common.BaseSourceTask]
2024-11-20 17:46:41,580 INFO   ||||     database.sslmode = disable   [io.debezium.connector.common.BaseSourceTask]
2024-11-20 17:46:41,580 INFO   ||||     slot.retry.delay.ms = 2000   [io.debezium.connector.common.BaseSourceTask]
2024-11-20 17:46:41,580 INFO   ||||     decimal.handling.mode = string   [io.debezium.connector.common.BaseSourceTask]
2024-11-20 17:46:41,580 INFO   ||||     offset.storage.file.filename = /Users/alvar/Projects/3.OpenSourceProjects/debezium/debezium-connector-postgres/target/data/file-connector-offsets.txt   [io.debezium.connector.common.BaseSourceTask]
2024-11-20 17:46:41,581 INFO   ||||     record.processing.threads =    [io.debezium.connector.common.BaseSourceTask]
2024-11-20 17:46:41,581 INFO   ||||     errors.retry.delay.initial.ms = 300   [io.debezium.connector.common.BaseSourceTask]
2024-11-20 17:46:41,581 INFO   ||||     value.converter = org.apache.kafka.connect.json.JsonConverter   [io.debezium.connector.common.BaseSourceTask]
2024-11-20 17:46:41,581 INFO   ||||     database.topic.prefix = dbserver1   [io.debezium.connector.common.BaseSourceTask]
2024-11-20 17:46:41,581 INFO   ||||     status.update.interval.ms = 100   [io.debezium.connector.common.BaseSourceTask]
2024-11-20 17:46:41,581 INFO   ||||     key.converter = org.apache.kafka.connect.json.JsonConverter   [io.debezium.connector.common.BaseSourceTask]
2024-11-20 17:46:41,581 INFO   ||||     database.user = postgres   [io.debezium.connector.common.BaseSourceTask]
2024-11-20 17:46:41,581 INFO   ||||     database.dbname = postgres   [io.debezium.connector.common.BaseSourceTask]
2024-11-20 17:46:41,581 INFO   ||||     slot.drop.on.stop = true   [io.debezium.connector.common.BaseSourceTask]
2024-11-20 17:46:41,581 INFO   ||||     offset.storage = org.apache.kafka.connect.storage.FileOffsetBackingStore   [io.debezium.connector.common.BaseSourceTask]
2024-11-20 17:46:41,581 INFO   ||||     snapshot.select.statement.overrides = post_money.debezium_test   [io.debezium.connector.common.BaseSourceTask]
2024-11-20 17:46:41,581 INFO   ||||     offset.flush.timeout.ms = 5000   [io.debezium.connector.common.BaseSourceTask]
2024-11-20 17:46:41,581 INFO   ||||     errors.retry.delay.max.ms = 10000   [io.debezium.connector.common.BaseSourceTask]
2024-11-20 17:46:41,581 INFO   ||||     database.port = 5432   [io.debezium.connector.common.BaseSourceTask]
2024-11-20 17:46:41,581 INFO   ||||     plugin.name = decoderbufs   [io.debezium.connector.common.BaseSourceTask]
2024-11-20 17:46:41,581 INFO   ||||     offset.flush.interval.ms = 0   [io.debezium.connector.common.BaseSourceTask]
2024-11-20 17:46:41,581 INFO   ||||     internal.task.management.timeout.ms = 180000   [io.debezium.connector.common.BaseSourceTask]
2024-11-20 17:46:41,581 INFO   ||||     record.processing.with.serial.consumer = false   [io.debezium.connector.common.BaseSourceTask]
2024-11-20 17:46:41,581 INFO   ||||     errors.max.retries = -1   [io.debezium.connector.common.BaseSourceTask]
2024-11-20 17:46:41,581 INFO   ||||     database.hostname = localhost   [io.debezium.connector.common.BaseSourceTask]
2024-11-20 17:46:41,581 INFO   ||||     database.password = ********   [io.debezium.connector.common.BaseSourceTask]
2024-11-20 17:46:41,581 INFO   ||||     name = testing-connector   [io.debezium.connector.common.BaseSourceTask]
2024-11-20 17:46:41,581 INFO   ||||     snapshot.mode = always   [io.debezium.connector.common.BaseSourceTask]
2024-11-20 17:46:41,581 INFO   ||||  Loading the custom source info struct maker plugin: io.debezium.connector.postgresql.PostgresSourceInfoStructMaker   [io.debezium.config.CommonConnectorConfig]
2024-11-20 17:46:41,581 INFO   ||||  Loading the custom topic naming strategy plugin: io.debezium.schema.SchemaTopicNamingStrategy   [io.debezium.config.CommonConnectorConfig]
16:46:41.660 postgres2024-11-20 05:46:41.660 SST [114] LOG:  logical decoding found consistent point at 0/213F638
16:46:41.660 postgres2024-11-20 05:46:41.660 SST [114] DETAIL:  There are no running transactions.
16:46:41.660 postgres2024-11-20 05:46:41.660 SST [114] STATEMENT:  CREATE_REPLICATION_SLOT "debezium"  LOGICAL decoderbufs
16:46:41.660 postgres2024-11-20 05:46:41.660 SST [114] LOG:  exported logical decoding snapshot: "00000073-00000002-1" with 0 transaction IDs
16:46:41.660 postgres2024-11-20 05:46:41.660 SST [114] STATEMENT:  CREATE_REPLICATION_SLOT "debezium"  LOGICAL decoderbufs
2024-11-20 17:46:41,592 INFO   ||||  Connection gracefully closed   [io.debezium.jdbc.JdbcConnection]
2024-11-20 17:46:41,612 WARN   ||||  Type [oid:13534, name:_pg_user_mappings] is already mapped   [io.debezium.connector.postgresql.TypeRegistry]
2024-11-20 17:46:41,614 WARN   ||||  Type [oid:19698, name:ltree] is already mapped   [io.debezium.connector.postgresql.TypeRegistry]
2024-11-20 17:46:41,614 WARN   ||||  Type [oid:19752, name:lquery] is already mapped   [io.debezium.connector.postgresql.TypeRegistry]
2024-11-20 17:46:41,614 WARN   ||||  Type [oid:19768, name:ltxtquery] is already mapped   [io.debezium.connector.postgresql.TypeRegistry]
2024-11-20 17:46:41,615 WARN   ||||  Type [oid:20667, name:hstore] is already mapped   [io.debezium.connector.postgresql.TypeRegistry]
2024-11-20 17:46:41,615 WARN   ||||  Type [oid:13210, name:cardinal_number] is already mapped   [io.debezium.connector.postgresql.TypeRegistry]
2024-11-20 17:46:41,615 WARN   ||||  Type [oid:13213, name:character_data] is already mapped   [io.debezium.connector.postgresql.TypeRegistry]
2024-11-20 17:46:41,615 WARN   ||||  Type [oid:13215, name:sql_identifier] is already mapped   [io.debezium.connector.postgresql.TypeRegistry]
2024-11-20 17:46:41,615 WARN   ||||  Type [oid:13221, name:time_stamp] is already mapped   [io.debezium.connector.postgresql.TypeRegistry]
2024-11-20 17:46:41,615 WARN   ||||  Type [oid:13223, name:yes_or_no] is already mapped   [io.debezium.connector.postgresql.TypeRegistry]
2024-11-20 17:46:41,616 INFO   ||||  No previous offsets found   [io.debezium.connector.common.BaseSourceTask]
2024-11-20 17:46:41,635 WARN   ||||  Type [oid:13534, name:_pg_user_mappings] is already mapped   [io.debezium.connector.postgresql.TypeRegistry]
2024-11-20 17:46:41,637 WARN   ||||  Type [oid:19698, name:ltree] is already mapped   [io.debezium.connector.postgresql.TypeRegistry]
2024-11-20 17:46:41,637 WARN   ||||  Type [oid:19752, name:lquery] is already mapped   [io.debezium.connector.postgresql.TypeRegistry]
2024-11-20 17:46:41,637 WARN   ||||  Type [oid:19768, name:ltxtquery] is already mapped   [io.debezium.connector.postgresql.TypeRegistry]
2024-11-20 17:46:41,637 WARN   ||||  Type [oid:20667, name:hstore] is already mapped   [io.debezium.connector.postgresql.TypeRegistry]
2024-11-20 17:46:41,637 WARN   ||||  Type [oid:13210, name:cardinal_number] is already mapped   [io.debezium.connector.postgresql.TypeRegistry]
2024-11-20 17:46:41,638 WARN   ||||  Type [oid:13213, name:character_data] is already mapped   [io.debezium.connector.postgresql.TypeRegistry]
2024-11-20 17:46:41,638 WARN   ||||  Type [oid:13215, name:sql_identifier] is already mapped   [io.debezium.connector.postgresql.TypeRegistry]
2024-11-20 17:46:41,638 WARN   ||||  Type [oid:13221, name:time_stamp] is already mapped   [io.debezium.connector.postgresql.TypeRegistry]
2024-11-20 17:46:41,638 WARN   ||||  Type [oid:13223, name:yes_or_no] is already mapped   [io.debezium.connector.postgresql.TypeRegistry]
2024-11-20 17:46:41,641 INFO   ||||  Connector started for the first time.   [io.debezium.connector.common.BaseSourceTask]
2024-11-20 17:46:41,641 INFO   Postgres|test_server||postgres-connector-task|  No previous offset found   [io.debezium.connector.postgresql.PostgresConnectorTask]
2024-11-20 17:46:41,643 INFO   Postgres|test_server||postgres-connector-task|  user 'postgres' connected to database 'postgres' on PostgreSQL 17.1 (Debian 17.1-1.pgdg110+1) on x86_64-pc-linux-gnu, compiled by gcc (Debian 10.2.1-6) 10.2.1 20210110, 64-bit with roles:
	role 'pg_read_all_settings' [superuser: false, replication: false, inherit: true, create role: false, create db: false, can log in: false]
	role 'pg_database_owner' [superuser: false, replication: false, inherit: true, create role: false, create db: false, can log in: false]
	role 'pg_stat_scan_tables' [superuser: false, replication: false, inherit: true, create role: false, create db: false, can log in: false]
	role 'pg_checkpoint' [superuser: false, replication: false, inherit: true, create role: false, create db: false, can log in: false]
	role 'pg_write_server_files' [superuser: false, replication: false, inherit: true, create role: false, create db: false, can log in: false]
	role 'pg_use_reserved_connections' [superuser: false, replication: false, inherit: true, create role: false, create db: false, can log in: false]
	role 'pg_read_all_data' [superuser: false, replication: false, inherit: true, create role: false, create db: false, can log in: false]
	role 'pg_write_all_data' [superuser: false, replication: false, inherit: true, create role: false, create db: false, can log in: false]
	role 'pg_monitor' [superuser: false, replication: false, inherit: true, create role: false, create db: false, can log in: false]
	role 'pg_read_server_files' [superuser: false, replication: false, inherit: true, create role: false, create db: false, can log in: false]
	role 'pg_create_subscription' [superuser: false, replication: false, inherit: true, create role: false, create db: false, can log in: false]
	role 'pg_execute_server_program' [superuser: false, replication: false, inherit: true, create role: false, create db: false, can log in: false]
	role 'pg_read_all_stats' [superuser: false, replication: false, inherit: true, create role: false, create db: false, can log in: false]
	role 'pg_signal_backend' [superuser: false, replication: false, inherit: true, create role: false, create db: false, can log in: false]
	role 'pg_maintain' [superuser: false, replication: false, inherit: true, create role: false, create db: false, can log in: false]
	role 'postgres' [superuser: true, replication: true, inherit: true, create role: true, create db: true, can log in: true]   [io.debezium.connector.postgresql.PostgresConnectorTask]
2024-11-20 17:46:41,644 INFO   Postgres|test_server||postgres-connector-task|  Obtained valid replication slot ReplicationSlot [active=false, latestFlushedLsn=null, catalogXmin=null]   [io.debezium.connector.postgresql.connection.PostgresConnection]
2024-11-20 17:46:41,644 WARN   Postgres|test_server||postgres-connector-task|  Connector has enabled automated replication slot removal upon restart (slot.drop.on.stop = true). This setting is not recommended for production environments, as a new replication slot will be created after a connector restart, resulting in missed data change events.   [io.debezium.connector.postgresql.PostgresTaskContext]
2024-11-20 17:46:41,644 DEBUG  Postgres|test_server||postgres-connector-task|  Creating new replication slot 'debezium' for plugin 'DECODERBUFS'   [io.debezium.connector.postgresql.connection.PostgresReplicationConnection]
2024-11-20 17:46:41,654 INFO   Postgres|test_server||postgres-connector-task|  Creating replication slot with command CREATE_REPLICATION_SLOT "debezium"  LOGICAL decoderbufs   [io.debezium.connector.postgresql.connection.PostgresReplicationConnection]
2024-11-20 17:46:41,664 INFO   Postgres|test_server||postgres-connector-task|  Requested thread factory for component PostgresConnector, id = test_server named = SignalProcessor   [io.debezium.util.Threads]
2024-11-20 17:46:41,664 INFO   Postgres|test_server||postgres-connector-task|  Requested thread factory for component PostgresConnector, id = test_server named = change-event-source-coordinator   [io.debezium.util.Threads]
2024-11-20 17:46:41,664 INFO   Postgres|test_server||postgres-connector-task|  Requested thread factory for component PostgresConnector, id = test_server named = blocking-snapshot   [io.debezium.util.Threads]
2024-11-20 17:46:41,664 INFO   Postgres|test_server||postgres-connector-task|  Creating thread debezium-postgresconnector-test_server-change-event-source-coordinator   [io.debezium.util.Threads]
2024-11-20 17:46:41,665 INFO   PostgresMoneyIT|||engine|  All tasks have started successfully.   [io.debezium.embedded.async.AsyncEmbeddedEngine]
2024-11-20 17:46:41,665 INFO   PostgresMoneyIT|||engine|  Engine state has changed from 'STARTING_TASKS' to 'POLLING_TASKS'   [io.debezium.embedded.async.AsyncEmbeddedEngine]
2024-11-20 17:46:41,665 INFO   PostgresMoneyIT|||engine|  Using io.debezium.embedded.async.ParallelSmtConsumerProcessor processor   [io.debezium.embedded.async.AsyncEmbeddedEngine]
2024-11-20 17:46:41,665 INFO   Postgres|test_server||snapshot|  Metrics registered   [io.debezium.pipeline.ChangeEventSourceCoordinator]
2024-11-20 17:46:41,665 INFO   Postgres|test_server||snapshot|  Context created   [io.debezium.pipeline.ChangeEventSourceCoordinator]
2024-11-20 17:46:41,666 INFO   Postgres|test_server|0|snapshot|postgres  Snapshot mode is set to ALWAYS, not checking exiting offset.   [io.debezium.snapshot.mode.AlwaysSnapshotter]
2024-11-20 17:46:41,666 INFO   Postgres|test_server|0|snapshot|postgres  According to the connector configuration data will be snapshotted   [io.debezium.connector.postgresql.PostgresSnapshotChangeEventSource]
2024-11-20 17:46:41,666 INFO   Postgres|test_server|0|snapshot|postgres  Snapshot step 1 - Preparing   [io.debezium.relational.RelationalSnapshotChangeEventSource]
2024-11-20 17:46:41,667 INFO   Postgres|test_server|0|snapshot|postgres  Setting isolation level   [io.debezium.connector.postgresql.PostgresSnapshotChangeEventSource]
2024-11-20 17:46:41,667 INFO   Postgres|test_server|0|snapshot|postgres  Opening transaction with statement SET TRANSACTION ISOLATION LEVEL REPEATABLE READ; 
SET TRANSACTION SNAPSHOT '00000073-00000002-1';   [io.debezium.connector.postgresql.PostgresSnapshotChangeEventSource]
2024-11-20 17:46:41,708 INFO   Postgres|test_server|0|snapshot|postgres  Snapshot step 2 - Determining captured tables   [io.debezium.relational.RelationalSnapshotChangeEventSource]
2024-11-20 17:46:41,710 INFO   Postgres|test_server|0|snapshot|postgres  Adding table post_money.debezium_test to the list of capture schema tables   [io.debezium.relational.RelationalSnapshotChangeEventSource]
2024-11-20 17:46:41,712 INFO   Postgres|test_server|0|snapshot|postgres  Created connection pool with 1 threads   [io.debezium.relational.RelationalSnapshotChangeEventSource]
2024-11-20 17:46:41,713 INFO   Postgres|test_server|0|snapshot|postgres  Snapshot step 3 - Locking captured tables [post_money.debezium_test]   [io.debezium.relational.RelationalSnapshotChangeEventSource]
2024-11-20 17:46:41,715 INFO   Postgres|test_server|0|snapshot|postgres  Snapshot step 4 - Determining snapshot offset   [io.debezium.relational.RelationalSnapshotChangeEventSource]
2024-11-20 17:46:41,715 INFO   Postgres|test_server|0|snapshot|postgres  Creating initial offset context   [io.debezium.connector.postgresql.PostgresOffsetContext]
2024-11-20 17:46:41,717 INFO   Postgres|test_server|0|snapshot|postgres  Read xlogStart at 'LSN{0/213F670}' from transaction '758'   [io.debezium.connector.postgresql.PostgresOffsetContext]
2024-11-20 17:46:41,717 INFO   Postgres|test_server|0|snapshot|postgres  Read xlogStart at 'LSN{0/213F670}' from transaction '758'   [io.debezium.connector.postgresql.PostgresSnapshotChangeEventSource]
2024-11-20 17:46:41,717 INFO   Postgres|test_server|0|snapshot|postgres  Snapshot step 5 - Reading structure of captured tables   [io.debezium.relational.RelationalSnapshotChangeEventSource]
2024-11-20 17:46:41,718 INFO   Postgres|test_server|0|snapshot|postgres  Reading structure of schema 'post_money' of catalog 'postgres'   [io.debezium.connector.postgresql.PostgresSnapshotChangeEventSource]
2024-11-20 17:46:41,744 INFO   Postgres|test_server|0|snapshot|postgres  Snapshot step 6 - Persisting schema history   [io.debezium.relational.RelationalSnapshotChangeEventSource]
2024-11-20 17:46:41,744 INFO   Postgres|test_server|0|snapshot|postgres  Snapshot step 7 - Snapshotting data   [io.debezium.relational.RelationalSnapshotChangeEventSource]
2024-11-20 17:46:41,744 INFO   Postgres|test_server|0|snapshot|postgres  Creating snapshot worker pool with 1 worker thread(s)   [io.debezium.relational.RelationalSnapshotChangeEventSource]
2024-11-20 17:46:41,744 INFO   Postgres|test_server|0|snapshot|postgres  For table 'post_money.debezium_test' using select statement: 'SELECT id, null AS m FROM post_money.debezium_test'   [io.debezium.relational.RelationalSnapshotChangeEventSource]
2024-11-20 17:46:41,746 INFO   ||||  Exporting data from table 'post_money.debezium_test' (1 of 1 tables)   [io.debezium.relational.RelationalSnapshotChangeEventSource]
2024-11-20 17:46:41,753 INFO   ||||  	 Finished exporting 1 records for table 'post_money.debezium_test' (1 of 1 tables); total duration '00:00:00.007'   [io.debezium.relational.RelationalSnapshotChangeEventSource]
2024-11-20 17:46:41,754 INFO   Postgres|test_server|0|snapshot|postgres  Snapshot - Final stage   [io.debezium.pipeline.source.AbstractSnapshotChangeEventSource]
2024-11-20 17:46:41,754 INFO   Postgres|test_server|0|snapshot|postgres  Snapshot completed   [io.debezium.pipeline.source.AbstractSnapshotChangeEventSource]
2024-11-20 17:46:41,754 INFO   Postgres|test_server|0|snapshot|postgres  Snapshot ended with SnapshotResult [status=COMPLETED, offset=PostgresOffsetContext [sourceInfoSchema=Schema{io.debezium.connector.postgresql.Source:STRUCT}, sourceInfo=source_info[server='test_server'db='postgres', lsn=LSN{0/213F670}, txId=758, timestamp=2024-11-20T16:46:41.667409Z, snapshot=FALSE, schema=post_money, table=debezium_test], lastSnapshotRecord=true, lastCompletelyProcessedLsn=null, lastCommitLsn=null, streamingStoppingLsn=null, transactionContext=TransactionContext [currentTransactionId=null, perTableEventCount={}, totalEventCount=0], incrementalSnapshotContext=IncrementalSnapshotContext [windowOpened=false, chunkEndPosition=null, dataCollectionsToSnapshot=[], lastEventKeySent=null, maximumKey=null]]]   [io.debezium.pipeline.ChangeEventSourceCoordinator]
2024-11-20 17:46:41,762 INFO   Postgres|test_server|0|streaming|postgres  Connected metrics set to 'true'   [io.debezium.pipeline.ChangeEventSourceCoordinator]
2024-11-20 17:46:41,787 INFO   Postgres|test_server|0|streaming|postgres  REPLICA IDENTITY for 'post_money.debezium_test' is 'DEFAULT'; UPDATE and DELETE events will contain previous values only for PK columns   [io.debezium.connector.postgresql.PostgresSchema]
2024-11-20 17:46:41,788 INFO   Postgres|test_server|0|streaming|postgres  SignalProcessor started. Scheduling it every 5000ms   [io.debezium.pipeline.signal.SignalProcessor]
2024-11-20 17:46:41,788 INFO   Postgres|test_server|0|streaming|postgres  Creating thread debezium-postgresconnector-test_server-SignalProcessor   [io.debezium.util.Threads]
2024-11-20 17:46:41,788 INFO   Postgres|test_server|0|streaming|postgres  Starting streaming   [io.debezium.pipeline.ChangeEventSourceCoordinator]
2024-11-20 17:46:41,788 INFO   Postgres|test_server|0|streaming|postgres  Retrieved latest position from stored offset 'LSN{0/213F670}'   [io.debezium.connector.postgresql.PostgresStreamingChangeEventSource]
2024-11-20 17:46:41,788 INFO   Postgres|test_server|0|streaming|postgres  Looking for WAL restart position for last commit LSN 'null' and last change LSN 'LSN{0/213F670}'   [io.debezium.connector.postgresql.connection.WalPositionLocator]
16:46:41.805 postgres2024-11-20 05:46:41.805 SST [114] LOG:  starting logical decoding for slot "debezium"
16:46:41.805 postgres2024-11-20 05:46:41.805 SST [114] DETAIL:  Streaming transactions committing after 0/213F670, reading WAL from 0/213F638.
16:46:41.805 postgres2024-11-20 05:46:41.805 SST [114] STATEMENT:  START_REPLICATION SLOT "debezium" LOGICAL 0/213F670
16:46:41.805 postgres2024-11-20 05:46:41.805 SST [114] LOG:  logical decoding found consistent point at 0/213F638
16:46:41.805 postgres2024-11-20 05:46:41.805 SST [114] DETAIL:  There are no running transactions.
16:46:41.805 postgres2024-11-20 05:46:41.805 SST [114] STATEMENT:  START_REPLICATION SLOT "debezium" LOGICAL 0/213F670
2024-11-20 17:46:41,803 INFO   Postgres|test_server|0|streaming|postgres  Obtained valid replication slot ReplicationSlot [active=false, latestFlushedLsn=LSN{0/213F670}, catalogXmin=758]   [io.debezium.connector.postgresql.connection.PostgresConnection]
2024-11-20 17:46:41,803 INFO   ||||  Connection gracefully closed   [io.debezium.jdbc.JdbcConnection]
2024-11-20 17:46:41,804 DEBUG  Postgres|test_server|0|streaming|postgres  running 'IDENTIFY_SYSTEM' to validate replication connection   [io.debezium.connector.postgresql.connection.PostgresReplicationConnection]
2024-11-20 17:46:41,804 DEBUG  Postgres|test_server|0|streaming|postgres  received latest xlogpos '0/213F670'   [io.debezium.connector.postgresql.connection.PostgresReplicationConnection]
2024-11-20 17:46:41,804 DEBUG  Postgres|test_server|0|streaming|postgres  starting streaming from LSN 'LSN{0/213F670}'   [io.debezium.connector.postgresql.connection.PostgresReplicationConnection]
2024-11-20 17:46:41,815 INFO   Postgres|test_server|0|streaming|postgres  Requested thread factory for component PostgresConnector, id = test_server named = keep-alive   [io.debezium.util.Threads]
2024-11-20 17:46:41,816 INFO   Postgres|test_server|0|streaming|postgres  Creating thread debezium-postgresconnector-test_server-keep-alive   [io.debezium.util.Threads]
2024-11-20 17:46:41,855 INFO   Postgres|test_server|0|streaming|postgres  REPLICA IDENTITY for 'post_money.debezium_test' is 'DEFAULT'; UPDATE and DELETE events will contain previous values only for PK columns   [io.debezium.connector.postgresql.PostgresSchema]
2024-11-20 17:46:41,857 INFO   Postgres|test_server|0|streaming|postgres  Processing messages   [io.debezium.connector.postgresql.PostgresStreamingChangeEventSource]
2024-11-20 17:46:42,168 INFO   ||||  Found previous partition offset PostgresPartition [sourcePartition={server=test_server}]: {lsn=34862704, txId=758, ts_usec=1732121201667409}   [io.debezium.connector.common.BaseSourceTask]
2024-11-20 17:46:42,171 INFO   PostgresMoneyIT|||test|  Stopping the connector   [io.debezium.connector.postgresql.PostgresMoneyIT]
2024-11-20 17:46:42,172 INFO   PostgresMoneyIT|||test|  Stopping the engine   [io.debezium.connector.postgresql.PostgresMoneyIT]
2024-11-20 17:46:42,172 INFO   PostgresMoneyIT|||test|  Engine state has changed from 'POLLING_TASKS' to 'STOPPING'   [io.debezium.embedded.async.AsyncEmbeddedEngine]
2024-11-20 17:46:42,172 INFO   ||||  Stopping down connector   [io.debezium.connector.common.BaseSourceTask]
2024-11-20 17:46:42,172 INFO   PostgresMoneyIT|||engine|  Task interrupted while polling.   [io.debezium.embedded.async.AsyncEmbeddedEngine]
2024-11-20 17:46:42,368 DEBUG  Postgres|test_server|0|streaming|postgres  Closing message decoder   [io.debezium.connector.postgresql.connection.PostgresReplicationConnection]
2024-11-20 17:46:42,368 DEBUG  Postgres|test_server|0|streaming|postgres  Closing replication connection   [io.debezium.connector.postgresql.connection.PostgresReplicationConnection]
2024-11-20 17:46:42,369 INFO   ||||  Connection gracefully closed   [io.debezium.jdbc.JdbcConnection]
2024-11-20 17:46:42,384 INFO   ||||  Connection gracefully closed   [io.debezium.jdbc.JdbcConnection]
2024-11-20 17:46:42,384 INFO   Postgres|test_server|0|streaming|postgres  Finished streaming   [io.debezium.pipeline.ChangeEventSourceCoordinator]
2024-11-20 17:46:42,384 INFO   Postgres|test_server|0|streaming|postgres  Connected metrics set to 'false'   [io.debezium.pipeline.ChangeEventSourceCoordinator]
2024-11-20 17:46:42,384 INFO   ||||  SignalProcessor stopped   [io.debezium.pipeline.signal.SignalProcessor]
2024-11-20 17:46:42,384 INFO   ||||  Debezium ServiceRegistry stopped.   [io.debezium.service.DefaultServiceRegistry]
2024-11-20 17:46:42,385 DEBUG  ||||  Closing message decoder   [io.debezium.connector.postgresql.connection.PostgresReplicationConnection]
2024-11-20 17:46:42,385 DEBUG  ||||  Closing replication connection   [io.debezium.connector.postgresql.connection.PostgresReplicationConnection]
16:46:42.398 postgres2024-11-20 05:46:42.397 SST [117] ERROR:  replication slot "debezium" does not exist
16:46:42.398 postgres2024-11-20 05:46:42.397 SST [117] STATEMENT:  select pg_drop_replication_slot('debezium')
2024-11-20 17:46:42,398 INFO   ||||  Connection gracefully closed   [io.debezium.jdbc.JdbcConnection]
2024-11-20 17:46:42,399 INFO   ||||  Connection gracefully closed   [io.debezium.jdbc.JdbcConnection]
2024-11-20 17:46:42,400 INFO   ||||  Connection gracefully closed   [io.debezium.jdbc.JdbcConnection]
2024-11-20 17:46:42,400 INFO   PostgresMoneyIT|||test|  Stopped task #1 out of 1 tasks (it took 227 ms to stop the task).   [io.debezium.embedded.async.AsyncEmbeddedEngine]
2024-11-20 17:46:42,400 INFO   PostgresMoneyIT|||engine|  Engine is stopped.   [io.debezium.embedded.async.AsyncEmbeddedEngine]
2024-11-20 17:46:42,400 INFO   PostgresMoneyIT|||engine|  Engine state has changed from 'STOPPING' to 'STOPPED'   [io.debezium.embedded.async.AsyncEmbeddedEngine]
2024-11-20 17:46:42,400 INFO   PostgresMoneyIT|||engine|  Connector 'io.debezium.connector.postgresql.PostgresConnector' completed normally.   [io.debezium.connector.postgresql.PostgresMoneyIT]
2024-11-20 17:46:42,505 INFO   PostgresMoneyIT|||test|  Interrupting the engine   [io.debezium.connector.postgresql.PostgresMoneyIT]
2024-11-20 17:46:42,507 INFO   PostgresMoneyIT|||engine|  Engine state has changed from 'CREATING' to 'INITIALIZING'   [io.debezium.embedded.async.AsyncEmbeddedEngine]
2024-11-20 17:46:42,507 INFO   PostgresMoneyIT|||engine|  Loading the custom source info struct maker plugin: io.debezium.connector.postgresql.PostgresSourceInfoStructMaker   [io.debezium.config.CommonConnectorConfig]
2024-11-20 17:46:42,520 INFO   PostgresMoneyIT|||engine|  Successfully tested connection for jdbc:postgresql://localhost:5432/postgres with user 'postgres'   [io.debezium.connector.postgresql.PostgresConnector]
2024-11-20 17:46:42,526 INFO   ||||  Connection gracefully closed   [io.debezium.jdbc.JdbcConnection]
2024-11-20 17:46:42,538 INFO   PostgresMoneyIT|||engine|  Engine state has changed from 'INITIALIZING' to 'CREATING_TASKS'   [io.debezium.embedded.async.AsyncEmbeddedEngine]
2024-11-20 17:46:42,539 INFO   PostgresMoneyIT|||engine|  Engine state has changed from 'CREATING_TASKS' to 'STARTING_TASKS'   [io.debezium.embedded.async.AsyncEmbeddedEngine]
2024-11-20 17:46:42,540 INFO   PostgresMoneyIT|||engine|  Waiting max. for 180000 ms for individual source tasks to start.   [io.debezium.embedded.async.AsyncEmbeddedEngine]
2024-11-20 17:46:42,540 INFO   ||||  Starting PostgresConnectorTask with configuration:   [io.debezium.connector.common.BaseSourceTask]
2024-11-20 17:46:42,540 INFO   ||||     connector.class = io.debezium.connector.postgresql.PostgresConnector   [io.debezium.connector.common.BaseSourceTask]
2024-11-20 17:46:42,540 INFO   ||||     record.processing.shutdown.timeout.ms = 1000   [io.debezium.connector.common.BaseSourceTask]
2024-11-20 17:46:42,540 INFO   ||||     snapshot.select.statement.overrides.post_money.debezium_test = SELECT id, null AS m FROM post_money.debezium_test   [io.debezium.connector.common.BaseSourceTask]
2024-11-20 17:46:42,540 INFO   ||||     slot.max.retries = 2   [io.debezium.connector.common.BaseSourceTask]
2024-11-20 17:46:42,540 INFO   ||||     record.processing.order = ORDERED   [io.debezium.connector.common.BaseSourceTask]
2024-11-20 17:46:42,540 INFO   ||||     topic.prefix = test_server   [io.debezium.connector.common.BaseSourceTask]
2024-11-20 17:46:42,540 INFO   ||||     database.sslmode = disable   [io.debezium.connector.common.BaseSourceTask]
2024-11-20 17:46:42,540 INFO   ||||     slot.retry.delay.ms = 2000   [io.debezium.connector.common.BaseSourceTask]
2024-11-20 17:46:42,540 INFO   ||||     decimal.handling.mode = double   [io.debezium.connector.common.BaseSourceTask]
2024-11-20 17:46:42,540 INFO   ||||     offset.storage.file.filename = /Users/alvar/Projects/3.OpenSourceProjects/debezium/debezium-connector-postgres/target/data/file-connector-offsets.txt   [io.debezium.connector.common.BaseSourceTask]
2024-11-20 17:46:42,540 INFO   ||||     record.processing.threads =    [io.debezium.connector.common.BaseSourceTask]
2024-11-20 17:46:42,540 INFO   ||||     errors.retry.delay.initial.ms = 300   [io.debezium.connector.common.BaseSourceTask]
2024-11-20 17:46:42,540 INFO   ||||     value.converter = org.apache.kafka.connect.json.JsonConverter   [io.debezium.connector.common.BaseSourceTask]
2024-11-20 17:46:42,540 INFO   ||||     database.topic.prefix = dbserver1   [io.debezium.connector.common.BaseSourceTask]
2024-11-20 17:46:42,540 INFO   ||||     status.update.interval.ms = 100   [io.debezium.connector.common.BaseSourceTask]
2024-11-20 17:46:42,540 INFO   ||||     key.converter = org.apache.kafka.connect.json.JsonConverter   [io.debezium.connector.common.BaseSourceTask]
2024-11-20 17:46:42,540 INFO   ||||     database.user = postgres   [io.debezium.connector.common.BaseSourceTask]
2024-11-20 17:46:42,540 INFO   ||||     database.dbname = postgres   [io.debezium.connector.common.BaseSourceTask]
2024-11-20 17:46:42,540 INFO   ||||     slot.drop.on.stop = true   [io.debezium.connector.common.BaseSourceTask]
2024-11-20 17:46:42,540 INFO   ||||     offset.storage = org.apache.kafka.connect.storage.FileOffsetBackingStore   [io.debezium.connector.common.BaseSourceTask]
2024-11-20 17:46:42,540 INFO   ||||     snapshot.select.statement.overrides = post_money.debezium_test   [io.debezium.connector.common.BaseSourceTask]
2024-11-20 17:46:42,540 INFO   ||||     offset.flush.timeout.ms = 5000   [io.debezium.connector.common.BaseSourceTask]
2024-11-20 17:46:42,540 INFO   ||||     errors.retry.delay.max.ms = 10000   [io.debezium.connector.common.BaseSourceTask]
2024-11-20 17:46:42,540 INFO   ||||     database.port = 5432   [io.debezium.connector.common.BaseSourceTask]
2024-11-20 17:46:42,540 INFO   ||||     plugin.name = decoderbufs   [io.debezium.connector.common.BaseSourceTask]
2024-11-20 17:46:42,540 INFO   ||||     offset.flush.interval.ms = 0   [io.debezium.connector.common.BaseSourceTask]
2024-11-20 17:46:42,540 INFO   ||||     internal.task.management.timeout.ms = 180000   [io.debezium.connector.common.BaseSourceTask]
2024-11-20 17:46:42,540 INFO   ||||     record.processing.with.serial.consumer = false   [io.debezium.connector.common.BaseSourceTask]
2024-11-20 17:46:42,540 INFO   ||||     errors.max.retries = -1   [io.debezium.connector.common.BaseSourceTask]
2024-11-20 17:46:42,540 INFO   ||||     database.hostname = localhost   [io.debezium.connector.common.BaseSourceTask]
2024-11-20 17:46:42,540 INFO   ||||     database.password = ********   [io.debezium.connector.common.BaseSourceTask]
2024-11-20 17:46:42,540 INFO   ||||     name = testing-connector   [io.debezium.connector.common.BaseSourceTask]
2024-11-20 17:46:42,540 INFO   ||||     snapshot.mode = always   [io.debezium.connector.common.BaseSourceTask]
2024-11-20 17:46:42,541 INFO   ||||  Loading the custom source info struct maker plugin: io.debezium.connector.postgresql.PostgresSourceInfoStructMaker   [io.debezium.config.CommonConnectorConfig]
2024-11-20 17:46:42,541 INFO   ||||  Loading the custom topic naming strategy plugin: io.debezium.schema.SchemaTopicNamingStrategy   [io.debezium.config.CommonConnectorConfig]
2024-11-20 17:46:42,553 INFO   ||||  Connection gracefully closed   [io.debezium.jdbc.JdbcConnection]
2024-11-20 17:46:42,576 WARN   ||||  Type [oid:13534, name:_pg_user_mappings] is already mapped   [io.debezium.connector.postgresql.TypeRegistry]
2024-11-20 17:46:42,578 WARN   ||||  Type [oid:19698, name:ltree] is already mapped   [io.debezium.connector.postgresql.TypeRegistry]
2024-11-20 17:46:42,578 WARN   ||||  Type [oid:19752, name:lquery] is already mapped   [io.debezium.connector.postgresql.TypeRegistry]
2024-11-20 17:46:42,578 WARN   ||||  Type [oid:19768, name:ltxtquery] is already mapped   [io.debezium.connector.postgresql.TypeRegistry]
2024-11-20 17:46:42,578 WARN   ||||  Type [oid:20667, name:hstore] is already mapped   [io.debezium.connector.postgresql.TypeRegistry]
2024-11-20 17:46:42,578 WARN   ||||  Type [oid:13210, name:cardinal_number] is already mapped   [io.debezium.connector.postgresql.TypeRegistry]
2024-11-20 17:46:42,578 WARN   ||||  Type [oid:13213, name:character_data] is already mapped   [io.debezium.connector.postgresql.TypeRegistry]
2024-11-20 17:46:42,578 WARN   ||||  Type [oid:13215, name:sql_identifier] is already mapped   [io.debezium.connector.postgresql.TypeRegistry]
2024-11-20 17:46:42,578 WARN   ||||  Type [oid:13221, name:time_stamp] is already mapped   [io.debezium.connector.postgresql.TypeRegistry]
2024-11-20 17:46:42,578 WARN   ||||  Type [oid:13223, name:yes_or_no] is already mapped   [io.debezium.connector.postgresql.TypeRegistry]
2024-11-20 17:46:42,580 INFO   ||||  Found previous partition offset PostgresPartition [sourcePartition={server=test_server}]: {lsn=34862704, txId=758, ts_usec=1732121201667409}   [io.debezium.connector.common.BaseSourceTask]
16:46:42.631 postgres2024-11-20 05:46:42.631 SST [122] LOG:  logical decoding found consistent point at 0/213F710
16:46:42.631 postgres2024-11-20 05:46:42.631 SST [122] DETAIL:  There are no running transactions.
16:46:42.631 postgres2024-11-20 05:46:42.631 SST [122] STATEMENT:  CREATE_REPLICATION_SLOT "debezium"  LOGICAL decoderbufs
16:46:42.631 postgres2024-11-20 05:46:42.631 SST [122] LOG:  exported logical decoding snapshot: "00000070-00000006-1" with 0 transaction IDs
16:46:42.631 postgres2024-11-20 05:46:42.631 SST [122] STATEMENT:  CREATE_REPLICATION_SLOT "debezium"  LOGICAL decoderbufs
2024-11-20 17:46:42,602 WARN   ||||  Type [oid:13534, name:_pg_user_mappings] is already mapped   [io.debezium.connector.postgresql.TypeRegistry]
2024-11-20 17:46:42,604 WARN   ||||  Type [oid:19698, name:ltree] is already mapped   [io.debezium.connector.postgresql.TypeRegistry]
2024-11-20 17:46:42,604 WARN   ||||  Type [oid:19752, name:lquery] is already mapped   [io.debezium.connector.postgresql.TypeRegistry]
2024-11-20 17:46:42,604 WARN   ||||  Type [oid:19768, name:ltxtquery] is already mapped   [io.debezium.connector.postgresql.TypeRegistry]
2024-11-20 17:46:42,605 WARN   ||||  Type [oid:20667, name:hstore] is already mapped   [io.debezium.connector.postgresql.TypeRegistry]
2024-11-20 17:46:42,605 WARN   ||||  Type [oid:13210, name:cardinal_number] is already mapped   [io.debezium.connector.postgresql.TypeRegistry]
2024-11-20 17:46:42,605 WARN   ||||  Type [oid:13213, name:character_data] is already mapped   [io.debezium.connector.postgresql.TypeRegistry]
2024-11-20 17:46:42,605 WARN   ||||  Type [oid:13215, name:sql_identifier] is already mapped   [io.debezium.connector.postgresql.TypeRegistry]
2024-11-20 17:46:42,605 WARN   ||||  Type [oid:13221, name:time_stamp] is already mapped   [io.debezium.connector.postgresql.TypeRegistry]
2024-11-20 17:46:42,605 WARN   ||||  Type [oid:13223, name:yes_or_no] is already mapped   [io.debezium.connector.postgresql.TypeRegistry]
2024-11-20 17:46:42,610 INFO   ||||  Obtained valid replication slot ReplicationSlot [active=false, latestFlushedLsn=null, catalogXmin=null]   [io.debezium.connector.postgresql.connection.PostgresConnection]
2024-11-20 17:46:42,610 WARN   ||||  Last recorded offset is no longer available on the server.   [io.debezium.connector.common.BaseSourceTask]
2024-11-20 17:46:42,610 WARN   ||||  The connector is trying to read redo log starting at PostgresOffsetContext [sourceInfoSchema=Schema{io.debezium.connector.postgresql.Source:STRUCT}, sourceInfo=source_info[server='test_server'db='postgres', lsn=LSN{0/213F670}, txId=758, timestamp=2024-11-20T16:46:41.667409Z, snapshot=FALSE, schema=, table=], lastSnapshotRecord=true, lastCompletelyProcessedLsn=null, lastCommitLsn=null, streamingStoppingLsn=null, transactionContext=TransactionContext [currentTransactionId=null, perTableEventCount={}, totalEventCount=0], incrementalSnapshotContext=IncrementalSnapshotContext [windowOpened=false, chunkEndPosition=null, dataCollectionsToSnapshot=[], lastEventKeySent=null, maximumKey=null]], but this is no longer available on the server. Reconfigure the connector to use a snapshot when needed if you want to recover. If not the connector will streaming from the last available position in the log   [io.debezium.connector.common.BaseSourceTask]
2024-11-20 17:46:42,610 INFO   Postgres|test_server||postgres-connector-task|  Found previous offset PostgresOffsetContext [sourceInfoSchema=Schema{io.debezium.connector.postgresql.Source:STRUCT}, sourceInfo=source_info[server='test_server'db='postgres', lsn=LSN{0/213F670}, txId=758, timestamp=2024-11-20T16:46:41.667409Z, snapshot=FALSE, schema=, table=], lastSnapshotRecord=true, lastCompletelyProcessedLsn=null, lastCommitLsn=null, streamingStoppingLsn=null, transactionContext=TransactionContext [currentTransactionId=null, perTableEventCount={}, totalEventCount=0], incrementalSnapshotContext=IncrementalSnapshotContext [windowOpened=false, chunkEndPosition=null, dataCollectionsToSnapshot=[], lastEventKeySent=null, maximumKey=null]]   [io.debezium.connector.postgresql.PostgresConnectorTask]
2024-11-20 17:46:42,612 INFO   Postgres|test_server||postgres-connector-task|  user 'postgres' connected to database 'postgres' on PostgreSQL 17.1 (Debian 17.1-1.pgdg110+1) on x86_64-pc-linux-gnu, compiled by gcc (Debian 10.2.1-6) 10.2.1 20210110, 64-bit with roles:
	role 'pg_read_all_settings' [superuser: false, replication: false, inherit: true, create role: false, create db: false, can log in: false]
	role 'pg_database_owner' [superuser: false, replication: false, inherit: true, create role: false, create db: false, can log in: false]
	role 'pg_stat_scan_tables' [superuser: false, replication: false, inherit: true, create role: false, create db: false, can log in: false]
	role 'pg_checkpoint' [superuser: false, replication: false, inherit: true, create role: false, create db: false, can log in: false]
	role 'pg_write_server_files' [superuser: false, replication: false, inherit: true, create role: false, create db: false, can log in: false]
	role 'pg_use_reserved_connections' [superuser: false, replication: false, inherit: true, create role: false, create db: false, can log in: false]
	role 'pg_read_all_data' [superuser: false, replication: false, inherit: true, create role: false, create db: false, can log in: false]
	role 'pg_write_all_data' [superuser: false, replication: false, inherit: true, create role: false, create db: false, can log in: false]
	role 'pg_monitor' [superuser: false, replication: false, inherit: true, create role: false, create db: false, can log in: false]
	role 'pg_read_server_files' [superuser: false, replication: false, inherit: true, create role: false, create db: false, can log in: false]
	role 'pg_create_subscription' [superuser: false, replication: false, inherit: true, create role: false, create db: false, can log in: false]
	role 'pg_execute_server_program' [superuser: false, replication: false, inherit: true, create role: false, create db: false, can log in: false]
	role 'pg_read_all_stats' [superuser: false, replication: false, inherit: true, create role: false, create db: false, can log in: false]
	role 'pg_signal_backend' [superuser: false, replication: false, inherit: true, create role: false, create db: false, can log in: false]
	role 'pg_maintain' [superuser: false, replication: false, inherit: true, create role: false, create db: false, can log in: false]
	role 'postgres' [superuser: true, replication: true, inherit: true, create role: true, create db: true, can log in: true]   [io.debezium.connector.postgresql.PostgresConnectorTask]
2024-11-20 17:46:42,613 INFO   Postgres|test_server||postgres-connector-task|  Obtained valid replication slot ReplicationSlot [active=false, latestFlushedLsn=null, catalogXmin=null]   [io.debezium.connector.postgresql.connection.PostgresConnection]
2024-11-20 17:46:42,613 WARN   Postgres|test_server||postgres-connector-task|  Connector has enabled automated replication slot removal upon restart (slot.drop.on.stop = true). This setting is not recommended for production environments, as a new replication slot will be created after a connector restart, resulting in missed data change events.   [io.debezium.connector.postgresql.PostgresTaskContext]
2024-11-20 17:46:42,613 DEBUG  Postgres|test_server||postgres-connector-task|  Creating new replication slot 'debezium' for plugin 'DECODERBUFS'   [io.debezium.connector.postgresql.connection.PostgresReplicationConnection]
2024-11-20 17:46:42,624 INFO   Postgres|test_server||postgres-connector-task|  Creating replication slot with command CREATE_REPLICATION_SLOT "debezium"  LOGICAL decoderbufs   [io.debezium.connector.postgresql.connection.PostgresReplicationConnection]
2024-11-20 17:46:42,635 INFO   Postgres|test_server||postgres-connector-task|  Requested thread factory for component PostgresConnector, id = test_server named = SignalProcessor   [io.debezium.util.Threads]
2024-11-20 17:46:42,635 INFO   Postgres|test_server||postgres-connector-task|  Requested thread factory for component PostgresConnector, id = test_server named = change-event-source-coordinator   [io.debezium.util.Threads]
2024-11-20 17:46:42,635 INFO   Postgres|test_server||postgres-connector-task|  Requested thread factory for component PostgresConnector, id = test_server named = blocking-snapshot   [io.debezium.util.Threads]
2024-11-20 17:46:42,635 INFO   Postgres|test_server||postgres-connector-task|  Creating thread debezium-postgresconnector-test_server-change-event-source-coordinator   [io.debezium.util.Threads]
2024-11-20 17:46:42,636 INFO   PostgresMoneyIT|||engine|  All tasks have started successfully.   [io.debezium.embedded.async.AsyncEmbeddedEngine]
2024-11-20 17:46:42,636 INFO   PostgresMoneyIT|||engine|  Engine state has changed from 'STARTING_TASKS' to 'POLLING_TASKS'   [io.debezium.embedded.async.AsyncEmbeddedEngine]
2024-11-20 17:46:42,636 INFO   PostgresMoneyIT|||engine|  Using io.debezium.embedded.async.ParallelSmtConsumerProcessor processor   [io.debezium.embedded.async.AsyncEmbeddedEngine]
2024-11-20 17:46:42,636 INFO   Postgres|test_server||snapshot|  Metrics registered   [io.debezium.pipeline.ChangeEventSourceCoordinator]
2024-11-20 17:46:42,636 INFO   Postgres|test_server||snapshot|  Context created   [io.debezium.pipeline.ChangeEventSourceCoordinator]
2024-11-20 17:46:42,636 INFO   Postgres|test_server|0|snapshot|postgres  A previous offset indicating a completed snapshot has been found.   [io.debezium.connector.postgresql.PostgresSnapshotChangeEventSource]
2024-11-20 17:46:42,636 INFO   Postgres|test_server|0|snapshot|postgres  Snapshot mode is set to ALWAYS, not checking exiting offset.   [io.debezium.snapshot.mode.AlwaysSnapshotter]
2024-11-20 17:46:42,636 INFO   Postgres|test_server|0|snapshot|postgres  According to the connector configuration data will be snapshotted   [io.debezium.connector.postgresql.PostgresSnapshotChangeEventSource]
2024-11-20 17:46:42,636 INFO   Postgres|test_server|0|snapshot|postgres  Snapshot step 1 - Preparing   [io.debezium.relational.RelationalSnapshotChangeEventSource]
2024-11-20 17:46:42,637 INFO   Postgres|test_server|0|snapshot|postgres  Setting isolation level   [io.debezium.connector.postgresql.PostgresSnapshotChangeEventSource]
2024-11-20 17:46:42,637 INFO   Postgres|test_server|0|snapshot|postgres  Opening transaction with statement SET TRANSACTION ISOLATION LEVEL REPEATABLE READ; 
SET TRANSACTION SNAPSHOT '00000070-00000006-1';   [io.debezium.connector.postgresql.PostgresSnapshotChangeEventSource]
2024-11-20 17:46:42,684 INFO   Postgres|test_server|0|snapshot|postgres  Snapshot step 2 - Determining captured tables   [io.debezium.relational.RelationalSnapshotChangeEventSource]
2024-11-20 17:46:42,686 INFO   Postgres|test_server|0|snapshot|postgres  Adding table post_money.debezium_test to the list of capture schema tables   [io.debezium.relational.RelationalSnapshotChangeEventSource]
2024-11-20 17:46:42,686 INFO   Postgres|test_server|0|snapshot|postgres  Created connection pool with 1 threads   [io.debezium.relational.RelationalSnapshotChangeEventSource]
2024-11-20 17:46:42,686 INFO   Postgres|test_server|0|snapshot|postgres  Snapshot step 3 - Locking captured tables [post_money.debezium_test]   [io.debezium.relational.RelationalSnapshotChangeEventSource]
2024-11-20 17:46:42,687 INFO   Postgres|test_server|0|snapshot|postgres  Snapshot step 4 - Determining snapshot offset   [io.debezium.relational.RelationalSnapshotChangeEventSource]
2024-11-20 17:46:42,687 INFO   Postgres|test_server|0|snapshot|postgres  Creating initial offset context   [io.debezium.connector.postgresql.PostgresOffsetContext]
2024-11-20 17:46:42,688 INFO   Postgres|test_server|0|snapshot|postgres  Read xlogStart at 'LSN{0/213F748}' from transaction '759'   [io.debezium.connector.postgresql.PostgresOffsetContext]
2024-11-20 17:46:42,688 INFO   Postgres|test_server|0|snapshot|postgres  Read xlogStart at 'LSN{0/213F748}' from transaction '759'   [io.debezium.connector.postgresql.PostgresSnapshotChangeEventSource]
2024-11-20 17:46:42,688 INFO   Postgres|test_server|0|snapshot|postgres  Snapshot step 5 - Reading structure of captured tables   [io.debezium.relational.RelationalSnapshotChangeEventSource]
2024-11-20 17:46:42,688 INFO   Postgres|test_server|0|snapshot|postgres  Reading structure of schema 'post_money' of catalog 'postgres'   [io.debezium.connector.postgresql.PostgresSnapshotChangeEventSource]
16:46:42.766 postgres2024-11-20 05:46:42.766 SST [122] LOG:  starting logical decoding for slot "debezium"
16:46:42.766 postgres2024-11-20 05:46:42.766 SST [122] DETAIL:  Streaming transactions committing after 0/213F748, reading WAL from 0/213F710.
16:46:42.766 postgres2024-11-20 05:46:42.766 SST [122] STATEMENT:  START_REPLICATION SLOT "debezium" LOGICAL 0/213F748
16:46:42.766 postgres2024-11-20 05:46:42.766 SST [122] LOG:  logical decoding found consistent point at 0/213F710
16:46:42.766 postgres2024-11-20 05:46:42.766 SST [122] DETAIL:  There are no running transactions.
16:46:42.766 postgres2024-11-20 05:46:42.766 SST [122] STATEMENT:  START_REPLICATION SLOT "debezium" LOGICAL 0/213F748
2024-11-20 17:46:42,717 INFO   Postgres|test_server|0|snapshot|postgres  Snapshot step 6 - Persisting schema history   [io.debezium.relational.RelationalSnapshotChangeEventSource]
2024-11-20 17:46:42,717 INFO   Postgres|test_server|0|snapshot|postgres  Snapshot step 7 - Snapshotting data   [io.debezium.relational.RelationalSnapshotChangeEventSource]
2024-11-20 17:46:42,717 INFO   Postgres|test_server|0|snapshot|postgres  Creating snapshot worker pool with 1 worker thread(s)   [io.debezium.relational.RelationalSnapshotChangeEventSource]
2024-11-20 17:46:42,718 INFO   Postgres|test_server|0|snapshot|postgres  For table 'post_money.debezium_test' using select statement: 'SELECT id, null AS m FROM post_money.debezium_test'   [io.debezium.relational.RelationalSnapshotChangeEventSource]
2024-11-20 17:46:42,718 INFO   ||||  Exporting data from table 'post_money.debezium_test' (1 of 1 tables)   [io.debezium.relational.RelationalSnapshotChangeEventSource]
2024-11-20 17:46:42,721 INFO   ||||  	 Finished exporting 1 records for table 'post_money.debezium_test' (1 of 1 tables); total duration '00:00:00.003'   [io.debezium.relational.RelationalSnapshotChangeEventSource]
2024-11-20 17:46:42,722 INFO   Postgres|test_server|0|snapshot|postgres  Snapshot - Final stage   [io.debezium.pipeline.source.AbstractSnapshotChangeEventSource]
2024-11-20 17:46:42,723 INFO   Postgres|test_server|0|snapshot|postgres  Snapshot completed   [io.debezium.pipeline.source.AbstractSnapshotChangeEventSource]
2024-11-20 17:46:42,723 INFO   Postgres|test_server|0|snapshot|postgres  Snapshot ended with SnapshotResult [status=COMPLETED, offset=PostgresOffsetContext [sourceInfoSchema=Schema{io.debezium.connector.postgresql.Source:STRUCT}, sourceInfo=source_info[server='test_server'db='postgres', lsn=LSN{0/213F748}, txId=759, timestamp=2024-11-20T16:46:42.637567Z, snapshot=FALSE, schema=post_money, table=debezium_test], lastSnapshotRecord=true, lastCompletelyProcessedLsn=null, lastCommitLsn=null, streamingStoppingLsn=null, transactionContext=TransactionContext [currentTransactionId=null, perTableEventCount={}, totalEventCount=0], incrementalSnapshotContext=IncrementalSnapshotContext [windowOpened=false, chunkEndPosition=null, dataCollectionsToSnapshot=[], lastEventKeySent=null, maximumKey=null]]]   [io.debezium.pipeline.ChangeEventSourceCoordinator]
2024-11-20 17:46:42,723 INFO   Postgres|test_server|0|streaming|postgres  Connected metrics set to 'true'   [io.debezium.pipeline.ChangeEventSourceCoordinator]
2024-11-20 17:46:42,748 INFO   Postgres|test_server|0|streaming|postgres  REPLICA IDENTITY for 'post_money.debezium_test' is 'DEFAULT'; UPDATE and DELETE events will contain previous values only for PK columns   [io.debezium.connector.postgresql.PostgresSchema]
2024-11-20 17:46:42,749 INFO   Postgres|test_server|0|streaming|postgres  SignalProcessor started. Scheduling it every 5000ms   [io.debezium.pipeline.signal.SignalProcessor]
2024-11-20 17:46:42,749 INFO   Postgres|test_server|0|streaming|postgres  Creating thread debezium-postgresconnector-test_server-SignalProcessor   [io.debezium.util.Threads]
2024-11-20 17:46:42,749 INFO   Postgres|test_server|0|streaming|postgres  Starting streaming   [io.debezium.pipeline.ChangeEventSourceCoordinator]
2024-11-20 17:46:42,749 INFO   Postgres|test_server|0|streaming|postgres  Retrieved latest position from stored offset 'LSN{0/213F748}'   [io.debezium.connector.postgresql.PostgresStreamingChangeEventSource]
2024-11-20 17:46:42,749 INFO   Postgres|test_server|0|streaming|postgres  Looking for WAL restart position for last commit LSN 'null' and last change LSN 'LSN{0/213F748}'   [io.debezium.connector.postgresql.connection.WalPositionLocator]
2024-11-20 17:46:42,764 INFO   Postgres|test_server|0|streaming|postgres  Obtained valid replication slot ReplicationSlot [active=false, latestFlushedLsn=LSN{0/213F748}, catalogXmin=759]   [io.debezium.connector.postgresql.connection.PostgresConnection]
2024-11-20 17:46:42,764 INFO   ||||  Connection gracefully closed   [io.debezium.jdbc.JdbcConnection]
2024-11-20 17:46:42,765 DEBUG  Postgres|test_server|0|streaming|postgres  running 'IDENTIFY_SYSTEM' to validate replication connection   [io.debezium.connector.postgresql.connection.PostgresReplicationConnection]
2024-11-20 17:46:42,765 DEBUG  Postgres|test_server|0|streaming|postgres  received latest xlogpos '0/213F748'   [io.debezium.connector.postgresql.connection.PostgresReplicationConnection]
2024-11-20 17:46:42,765 DEBUG  Postgres|test_server|0|streaming|postgres  starting streaming from LSN 'LSN{0/213F748}'   [io.debezium.connector.postgresql.connection.PostgresReplicationConnection]
2024-11-20 17:46:42,778 INFO   Postgres|test_server|0|streaming|postgres  Requested thread factory for component PostgresConnector, id = test_server named = keep-alive   [io.debezium.util.Threads]
2024-11-20 17:46:42,778 INFO   Postgres|test_server|0|streaming|postgres  Creating thread debezium-postgresconnector-test_server-keep-alive   [io.debezium.util.Threads]
2024-11-20 17:46:42,802 INFO   Postgres|test_server|0|streaming|postgres  REPLICA IDENTITY for 'post_money.debezium_test' is 'DEFAULT'; UPDATE and DELETE events will contain previous values only for PK columns   [io.debezium.connector.postgresql.PostgresSchema]
2024-11-20 17:46:42,803 INFO   Postgres|test_server|0|streaming|postgres  Processing messages   [io.debezium.connector.postgresql.PostgresStreamingChangeEventSource]
2024-11-20 17:46:43,144 INFO   PostgresMoneyIT|||test|  Stopping the connector   [io.debezium.connector.postgresql.PostgresMoneyIT]
2024-11-20 17:46:43,144 INFO   PostgresMoneyIT|||test|  Stopping the engine   [io.debezium.connector.postgresql.PostgresMoneyIT]
2024-11-20 17:46:43,145 INFO   PostgresMoneyIT|||test|  Engine state has changed from 'POLLING_TASKS' to 'STOPPING'   [io.debezium.embedded.async.AsyncEmbeddedEngine]
2024-11-20 17:46:43,145 INFO   PostgresMoneyIT|||engine|  Task interrupted while polling.   [io.debezium.embedded.async.AsyncEmbeddedEngine]
2024-11-20 17:46:43,145 INFO   ||||  Stopping down connector   [io.debezium.connector.common.BaseSourceTask]
2024-11-20 17:46:43,310 DEBUG  Postgres|test_server|0|streaming|postgres  Closing message decoder   [io.debezium.connector.postgresql.connection.PostgresReplicationConnection]
2024-11-20 17:46:43,310 DEBUG  Postgres|test_server|0|streaming|postgres  Closing replication connection   [io.debezium.connector.postgresql.connection.PostgresReplicationConnection]
2024-11-20 17:46:43,311 INFO   ||||  Connection gracefully closed   [io.debezium.jdbc.JdbcConnection]
16:46:43.341 postgres2024-11-20 05:46:43.340 SST [125] ERROR:  replication slot "debezium" does not exist
16:46:43.341 postgres2024-11-20 05:46:43.340 SST [125] STATEMENT:  select pg_drop_replication_slot('debezium')
2024-11-20 17:46:43,327 INFO   ||||  Connection gracefully closed   [io.debezium.jdbc.JdbcConnection]
2024-11-20 17:46:43,327 INFO   Postgres|test_server|0|streaming|postgres  Finished streaming   [io.debezium.pipeline.ChangeEventSourceCoordinator]
2024-11-20 17:46:43,327 INFO   Postgres|test_server|0|streaming|postgres  Connected metrics set to 'false'   [io.debezium.pipeline.ChangeEventSourceCoordinator]
2024-11-20 17:46:43,327 INFO   ||||  SignalProcessor stopped   [io.debezium.pipeline.signal.SignalProcessor]
2024-11-20 17:46:43,327 INFO   ||||  Debezium ServiceRegistry stopped.   [io.debezium.service.DefaultServiceRegistry]
2024-11-20 17:46:43,328 DEBUG  ||||  Closing message decoder   [io.debezium.connector.postgresql.connection.PostgresReplicationConnection]
2024-11-20 17:46:43,328 DEBUG  ||||  Closing replication connection   [io.debezium.connector.postgresql.connection.PostgresReplicationConnection]
2024-11-20 17:46:43,341 INFO   ||||  Connection gracefully closed   [io.debezium.jdbc.JdbcConnection]
2024-11-20 17:46:43,342 INFO   ||||  Connection gracefully closed   [io.debezium.jdbc.JdbcConnection]
2024-11-20 17:46:43,342 INFO   ||||  Connection gracefully closed   [io.debezium.jdbc.JdbcConnection]
2024-11-20 17:46:43,342 INFO   PostgresMoneyIT|||test|  Stopped task #1 out of 1 tasks (it took 197 ms to stop the task).   [io.debezium.embedded.async.AsyncEmbeddedEngine]
2024-11-20 17:46:43,342 INFO   PostgresMoneyIT|||engine|  Engine is stopped.   [io.debezium.embedded.async.AsyncEmbeddedEngine]
2024-11-20 17:46:43,342 INFO   PostgresMoneyIT|||engine|  Engine state has changed from 'STOPPING' to 'STOPPED'   [io.debezium.embedded.async.AsyncEmbeddedEngine]
2024-11-20 17:46:43,343 INFO   PostgresMoneyIT|||engine|  Connector 'io.debezium.connector.postgresql.PostgresConnector' completed normally.   [io.debezium.connector.postgresql.PostgresMoneyIT]
2024-11-20 17:46:43,445 INFO   PostgresMoneyIT|||test|  Interrupting the engine   [io.debezium.connector.postgresql.PostgresMoneyIT]
2024-11-20 17:46:43,457 INFO   ||||  Connection gracefully closed   [io.debezium.jdbc.JdbcConnection]
2024-11-20 17:46:43,458 INFO   PostgresMoneyIT|||test|  Stopping the connector   [io.debezium.connector.postgresql.PostgresMoneyIT]
2024-11-20 17:46:43,458 INFO   PostgresMoneyIT|||test|  Test io.debezium.connector.postgresql.PostgresMoneyIT#shouldReceiveCorrectDefaultValueForHandlingMode succeeded   [io.debezium.connector.postgresql.PostgresMoneyIT]
16:46:43.457 postgres2024-11-20 05:46:43.456 SST [126] ERROR:  replication slot "debezium" does not exist
16:46:43.457 postgres2024-11-20 05:46:43.456 SST [126] STATEMENT:  SELECT pg_drop_replication_slot('debezium')
2024-11-20 17:46:43,459 INFO   PostgresMoneyIT|||test|  Starting test io.debezium.connector.postgresql.PostgresMoneyIT#shouldReceiveChangesForInsertsWithPreciseMode   [io.debezium.connector.postgresql.PostgresMoneyIT]
2024-11-20 17:46:43,474 INFO   ||||  Connection gracefully closed   [io.debezium.jdbc.JdbcConnection]
2024-11-20 17:46:43,535 INFO   ||||  Connection gracefully closed   [io.debezium.jdbc.JdbcConnection]
2024-11-20 17:46:43,631 INFO   ||||  Connection gracefully closed   [io.debezium.jdbc.JdbcConnection]
2024-11-20 17:46:43,647 INFO   ||||  Connection gracefully closed   [io.debezium.jdbc.JdbcConnection]
2024-11-20 17:46:43,648 INFO   PostgresMoneyIT|||engine|  Engine state has changed from 'CREATING' to 'INITIALIZING'   [io.debezium.embedded.async.AsyncEmbeddedEngine]
2024-11-20 17:46:43,649 INFO   PostgresMoneyIT|||engine|  Loading the custom source info struct maker plugin: io.debezium.connector.postgresql.PostgresSourceInfoStructMaker   [io.debezium.config.CommonConnectorConfig]
2024-11-20 17:46:43,661 INFO   PostgresMoneyIT|||engine|  Successfully tested connection for jdbc:postgresql://localhost:5432/postgres with user 'postgres'   [io.debezium.connector.postgresql.PostgresConnector]
2024-11-20 17:46:43,666 INFO   ||||  Connection gracefully closed   [io.debezium.jdbc.JdbcConnection]
2024-11-20 17:46:43,667 INFO   PostgresMoneyIT|||engine|  Engine state has changed from 'INITIALIZING' to 'CREATING_TASKS'   [io.debezium.embedded.async.AsyncEmbeddedEngine]
2024-11-20 17:46:43,667 INFO   PostgresMoneyIT|||engine|  Engine state has changed from 'CREATING_TASKS' to 'STARTING_TASKS'   [io.debezium.embedded.async.AsyncEmbeddedEngine]
2024-11-20 17:46:43,668 INFO   PostgresMoneyIT|||engine|  Waiting max. for 180000 ms for individual source tasks to start.   [io.debezium.embedded.async.AsyncEmbeddedEngine]
2024-11-20 17:46:43,668 INFO   ||||  Starting PostgresConnectorTask with configuration:   [io.debezium.connector.common.BaseSourceTask]
2024-11-20 17:46:43,668 INFO   ||||     connector.class = io.debezium.connector.postgresql.PostgresConnector   [io.debezium.connector.common.BaseSourceTask]
2024-11-20 17:46:43,668 INFO   ||||     record.processing.shutdown.timeout.ms = 1000   [io.debezium.connector.common.BaseSourceTask]
2024-11-20 17:46:43,668 INFO   ||||     slot.max.retries = 2   [io.debezium.connector.common.BaseSourceTask]
2024-11-20 17:46:43,668 INFO   ||||     record.processing.order = ORDERED   [io.debezium.connector.common.BaseSourceTask]
2024-11-20 17:46:43,668 INFO   ||||     topic.prefix = test_server   [io.debezium.connector.common.BaseSourceTask]
2024-11-20 17:46:43,668 INFO   ||||     database.sslmode = disable   [io.debezium.connector.common.BaseSourceTask]
2024-11-20 17:46:43,668 INFO   ||||     slot.retry.delay.ms = 2000   [io.debezium.connector.common.BaseSourceTask]
2024-11-20 17:46:43,668 INFO   ||||     offset.storage.file.filename = /Users/alvar/Projects/3.OpenSourceProjects/debezium/debezium-connector-postgres/target/data/file-connector-offsets.txt   [io.debezium.connector.common.BaseSourceTask]
2024-11-20 17:46:43,668 INFO   ||||     record.processing.threads =    [io.debezium.connector.common.BaseSourceTask]
2024-11-20 17:46:43,668 INFO   ||||     errors.retry.delay.initial.ms = 300   [io.debezium.connector.common.BaseSourceTask]
2024-11-20 17:46:43,668 INFO   ||||     value.converter = org.apache.kafka.connect.json.JsonConverter   [io.debezium.connector.common.BaseSourceTask]
2024-11-20 17:46:43,668 INFO   ||||     database.topic.prefix = dbserver1   [io.debezium.connector.common.BaseSourceTask]
2024-11-20 17:46:43,668 INFO   ||||     status.update.interval.ms = 100   [io.debezium.connector.common.BaseSourceTask]
2024-11-20 17:46:43,668 INFO   ||||     key.converter = org.apache.kafka.connect.json.JsonConverter   [io.debezium.connector.common.BaseSourceTask]
2024-11-20 17:46:43,668 INFO   ||||     database.user = postgres   [io.debezium.connector.common.BaseSourceTask]
2024-11-20 17:46:43,668 INFO   ||||     database.dbname = postgres   [io.debezium.connector.common.BaseSourceTask]
2024-11-20 17:46:43,668 INFO   ||||     slot.drop.on.stop = true   [io.debezium.connector.common.BaseSourceTask]
2024-11-20 17:46:43,668 INFO   ||||     offset.storage = org.apache.kafka.connect.storage.FileOffsetBackingStore   [io.debezium.connector.common.BaseSourceTask]
2024-11-20 17:46:43,668 INFO   ||||     offset.flush.timeout.ms = 5000   [io.debezium.connector.common.BaseSourceTask]
2024-11-20 17:46:43,668 INFO   ||||     errors.retry.delay.max.ms = 10000   [io.debezium.connector.common.BaseSourceTask]
2024-11-20 17:46:43,668 INFO   ||||     database.port = 5432   [io.debezium.connector.common.BaseSourceTask]
2024-11-20 17:46:43,668 INFO   ||||     plugin.name = decoderbufs   [io.debezium.connector.common.BaseSourceTask]
2024-11-20 17:46:43,668 INFO   ||||     offset.flush.interval.ms = 0   [io.debezium.connector.common.BaseSourceTask]
2024-11-20 17:46:43,668 INFO   ||||     internal.task.management.timeout.ms = 180000   [io.debezium.connector.common.BaseSourceTask]
2024-11-20 17:46:43,668 INFO   ||||     record.processing.with.serial.consumer = false   [io.debezium.connector.common.BaseSourceTask]
2024-11-20 17:46:43,668 INFO   ||||     errors.max.retries = -1   [io.debezium.connector.common.BaseSourceTask]
2024-11-20 17:46:43,668 INFO   ||||     database.hostname = localhost   [io.debezium.connector.common.BaseSourceTask]
2024-11-20 17:46:43,668 INFO   ||||     database.password = ********   [io.debezium.connector.common.BaseSourceTask]
2024-11-20 17:46:43,668 INFO   ||||     name = testing-connector   [io.debezium.connector.common.BaseSourceTask]
2024-11-20 17:46:43,668 INFO   ||||     snapshot.mode = no_data   [io.debezium.connector.common.BaseSourceTask]
2024-11-20 17:46:43,668 INFO   ||||  Loading the custom source info struct maker plugin: io.debezium.connector.postgresql.PostgresSourceInfoStructMaker   [io.debezium.config.CommonConnectorConfig]
2024-11-20 17:46:43,669 INFO   ||||  Loading the custom topic naming strategy plugin: io.debezium.schema.SchemaTopicNamingStrategy   [io.debezium.config.CommonConnectorConfig]
2024-11-20 17:46:43,680 INFO   ||||  Connection gracefully closed   [io.debezium.jdbc.JdbcConnection]
2024-11-20 17:46:43,702 WARN   ||||  Type [oid:13534, name:_pg_user_mappings] is already mapped   [io.debezium.connector.postgresql.TypeRegistry]
2024-11-20 17:46:43,704 WARN   ||||  Type [oid:20802, name:ltree] is already mapped   [io.debezium.connector.postgresql.TypeRegistry]
2024-11-20 17:46:43,704 WARN   ||||  Type [oid:20856, name:lquery] is already mapped   [io.debezium.connector.postgresql.TypeRegistry]
2024-11-20 17:46:43,704 WARN   ||||  Type [oid:20872, name:ltxtquery] is already mapped   [io.debezium.connector.postgresql.TypeRegistry]
2024-11-20 17:46:43,704 WARN   ||||  Type [oid:21771, name:hstore] is already mapped   [io.debezium.connector.postgresql.TypeRegistry]
2024-11-20 17:46:43,704 WARN   ||||  Type [oid:13210, name:cardinal_number] is already mapped   [io.debezium.connector.postgresql.TypeRegistry]
2024-11-20 17:46:43,704 WARN   ||||  Type [oid:13213, name:character_data] is already mapped   [io.debezium.connector.postgresql.TypeRegistry]
2024-11-20 17:46:43,704 WARN   ||||  Type [oid:13215, name:sql_identifier] is already mapped   [io.debezium.connector.postgresql.TypeRegistry]
2024-11-20 17:46:43,704 WARN   ||||  Type [oid:13221, name:time_stamp] is already mapped   [io.debezium.connector.postgresql.TypeRegistry]
2024-11-20 17:46:43,704 WARN   ||||  Type [oid:13223, name:yes_or_no] is already mapped   [io.debezium.connector.postgresql.TypeRegistry]
2024-11-20 17:46:43,705 INFO   ||||  No previous offsets found   [io.debezium.connector.common.BaseSourceTask]
16:46:43.756 postgres2024-11-20 05:46:43.756 SST [135] LOG:  logical decoding found consistent point at 0/241EA88
16:46:43.756 postgres2024-11-20 05:46:43.756 SST [135] DETAIL:  There are no running transactions.
16:46:43.756 postgres2024-11-20 05:46:43.756 SST [135] STATEMENT:  CREATE_REPLICATION_SLOT "debezium"  LOGICAL decoderbufs
16:46:43.756 postgres2024-11-20 05:46:43.756 SST [135] LOG:  exported logical decoding snapshot: "00000071-00000006-1" with 0 transaction IDs
16:46:43.756 postgres2024-11-20 05:46:43.756 SST [135] STATEMENT:  CREATE_REPLICATION_SLOT "debezium"  LOGICAL decoderbufs
16:46:43.828 postgres2024-11-20 05:46:43.828 SST [135] LOG:  starting logical decoding for slot "debezium"
16:46:43.828 postgres2024-11-20 05:46:43.828 SST [135] DETAIL:  Streaming transactions committing after 0/241EAC0, reading WAL from 0/241EA88.
16:46:43.828 postgres2024-11-20 05:46:43.828 SST [135] STATEMENT:  START_REPLICATION SLOT "debezium" LOGICAL 0/241EAC0
16:46:43.828 postgres2024-11-20 05:46:43.828 SST [135] LOG:  logical decoding found consistent point at 0/241EA88
16:46:43.828 postgres2024-11-20 05:46:43.828 SST [135] DETAIL:  There are no running transactions.
16:46:43.828 postgres2024-11-20 05:46:43.828 SST [135] STATEMENT:  START_REPLICATION SLOT "debezium" LOGICAL 0/241EAC0
2024-11-20 17:46:43,728 WARN   ||||  Type [oid:13534, name:_pg_user_mappings] is already mapped   [io.debezium.connector.postgresql.TypeRegistry]
2024-11-20 17:46:43,730 WARN   ||||  Type [oid:20802, name:ltree] is already mapped   [io.debezium.connector.postgresql.TypeRegistry]
2024-11-20 17:46:43,730 WARN   ||||  Type [oid:20856, name:lquery] is already mapped   [io.debezium.connector.postgresql.TypeRegistry]
2024-11-20 17:46:43,730 WARN   ||||  Type [oid:20872, name:ltxtquery] is already mapped   [io.debezium.connector.postgresql.TypeRegistry]
2024-11-20 17:46:43,731 WARN   ||||  Type [oid:21771, name:hstore] is already mapped   [io.debezium.connector.postgresql.TypeRegistry]
2024-11-20 17:46:43,731 WARN   ||||  Type [oid:13210, name:cardinal_number] is already mapped   [io.debezium.connector.postgresql.TypeRegistry]
2024-11-20 17:46:43,731 WARN   ||||  Type [oid:13213, name:character_data] is already mapped   [io.debezium.connector.postgresql.TypeRegistry]
2024-11-20 17:46:43,731 WARN   ||||  Type [oid:13215, name:sql_identifier] is already mapped   [io.debezium.connector.postgresql.TypeRegistry]
2024-11-20 17:46:43,731 WARN   ||||  Type [oid:13221, name:time_stamp] is already mapped   [io.debezium.connector.postgresql.TypeRegistry]
2024-11-20 17:46:43,731 WARN   ||||  Type [oid:13223, name:yes_or_no] is already mapped   [io.debezium.connector.postgresql.TypeRegistry]
2024-11-20 17:46:43,734 INFO   ||||  Connector started for the first time.   [io.debezium.connector.common.BaseSourceTask]
2024-11-20 17:46:43,734 INFO   Postgres|test_server||postgres-connector-task|  No previous offset found   [io.debezium.connector.postgresql.PostgresConnectorTask]
2024-11-20 17:46:43,736 INFO   Postgres|test_server||postgres-connector-task|  user 'postgres' connected to database 'postgres' on PostgreSQL 17.1 (Debian 17.1-1.pgdg110+1) on x86_64-pc-linux-gnu, compiled by gcc (Debian 10.2.1-6) 10.2.1 20210110, 64-bit with roles:
	role 'pg_read_all_settings' [superuser: false, replication: false, inherit: true, create role: false, create db: false, can log in: false]
	role 'pg_database_owner' [superuser: false, replication: false, inherit: true, create role: false, create db: false, can log in: false]
	role 'pg_stat_scan_tables' [superuser: false, replication: false, inherit: true, create role: false, create db: false, can log in: false]
	role 'pg_checkpoint' [superuser: false, replication: false, inherit: true, create role: false, create db: false, can log in: false]
	role 'pg_write_server_files' [superuser: false, replication: false, inherit: true, create role: false, create db: false, can log in: false]
	role 'pg_use_reserved_connections' [superuser: false, replication: false, inherit: true, create role: false, create db: false, can log in: false]
	role 'pg_read_all_data' [superuser: false, replication: false, inherit: true, create role: false, create db: false, can log in: false]
	role 'pg_write_all_data' [superuser: false, replication: false, inherit: true, create role: false, create db: false, can log in: false]
	role 'pg_monitor' [superuser: false, replication: false, inherit: true, create role: false, create db: false, can log in: false]
	role 'pg_read_server_files' [superuser: false, replication: false, inherit: true, create role: false, create db: false, can log in: false]
	role 'pg_create_subscription' [superuser: false, replication: false, inherit: true, create role: false, create db: false, can log in: false]
	role 'pg_execute_server_program' [superuser: false, replication: false, inherit: true, create role: false, create db: false, can log in: false]
	role 'pg_read_all_stats' [superuser: false, replication: false, inherit: true, create role: false, create db: false, can log in: false]
	role 'pg_signal_backend' [superuser: false, replication: false, inherit: true, create role: false, create db: false, can log in: false]
	role 'pg_maintain' [superuser: false, replication: false, inherit: true, create role: false, create db: false, can log in: false]
	role 'postgres' [superuser: true, replication: true, inherit: true, create role: true, create db: true, can log in: true]   [io.debezium.connector.postgresql.PostgresConnectorTask]
2024-11-20 17:46:43,737 INFO   Postgres|test_server||postgres-connector-task|  Obtained valid replication slot ReplicationSlot [active=false, latestFlushedLsn=null, catalogXmin=null]   [io.debezium.connector.postgresql.connection.PostgresConnection]
2024-11-20 17:46:43,737 WARN   Postgres|test_server||postgres-connector-task|  Connector has enabled automated replication slot removal upon restart (slot.drop.on.stop = true). This setting is not recommended for production environments, as a new replication slot will be created after a connector restart, resulting in missed data change events.   [io.debezium.connector.postgresql.PostgresTaskContext]
2024-11-20 17:46:43,738 DEBUG  Postgres|test_server||postgres-connector-task|  Creating new replication slot 'debezium' for plugin 'DECODERBUFS'   [io.debezium.connector.postgresql.connection.PostgresReplicationConnection]
2024-11-20 17:46:43,749 INFO   Postgres|test_server||postgres-connector-task|  Creating replication slot with command CREATE_REPLICATION_SLOT "debezium"  LOGICAL decoderbufs   [io.debezium.connector.postgresql.connection.PostgresReplicationConnection]
2024-11-20 17:46:43,760 INFO   Postgres|test_server||postgres-connector-task|  Requested thread factory for component PostgresConnector, id = test_server named = SignalProcessor   [io.debezium.util.Threads]
2024-11-20 17:46:43,761 INFO   Postgres|test_server||postgres-connector-task|  Requested thread factory for component PostgresConnector, id = test_server named = change-event-source-coordinator   [io.debezium.util.Threads]
2024-11-20 17:46:43,761 INFO   Postgres|test_server||postgres-connector-task|  Requested thread factory for component PostgresConnector, id = test_server named = blocking-snapshot   [io.debezium.util.Threads]
2024-11-20 17:46:43,761 INFO   Postgres|test_server||postgres-connector-task|  Creating thread debezium-postgresconnector-test_server-change-event-source-coordinator   [io.debezium.util.Threads]
2024-11-20 17:46:43,761 INFO   PostgresMoneyIT|||engine|  All tasks have started successfully.   [io.debezium.embedded.async.AsyncEmbeddedEngine]
2024-11-20 17:46:43,761 INFO   PostgresMoneyIT|||engine|  Engine state has changed from 'STARTING_TASKS' to 'POLLING_TASKS'   [io.debezium.embedded.async.AsyncEmbeddedEngine]
2024-11-20 17:46:43,761 INFO   PostgresMoneyIT|||engine|  Using io.debezium.embedded.async.ParallelSmtConsumerProcessor processor   [io.debezium.embedded.async.AsyncEmbeddedEngine]
2024-11-20 17:46:43,762 INFO   Postgres|test_server||snapshot|  Metrics registered   [io.debezium.pipeline.ChangeEventSourceCoordinator]
2024-11-20 17:46:43,762 INFO   Postgres|test_server||snapshot|  Context created   [io.debezium.pipeline.ChangeEventSourceCoordinator]
2024-11-20 17:46:43,762 INFO   Postgres|test_server|0|snapshot|postgres  According to the connector configuration no snapshot will be executed   [io.debezium.connector.postgresql.PostgresSnapshotChangeEventSource]
2024-11-20 17:46:43,762 INFO   Postgres|test_server|0|snapshot|postgres  Snapshot ended with SnapshotResult [status=SKIPPED, offset=null]   [io.debezium.pipeline.ChangeEventSourceCoordinator]
2024-11-20 17:46:43,762 INFO   Postgres|test_server|0|streaming|postgres  Connected metrics set to 'true'   [io.debezium.pipeline.ChangeEventSourceCoordinator]
2024-11-20 17:46:43,762 INFO   Postgres|test_server|0|streaming|postgres  Creating initial offset context   [io.debezium.connector.postgresql.PostgresOffsetContext]
2024-11-20 17:46:43,764 INFO   Postgres|test_server|0|streaming|postgres  Read xlogStart at 'LSN{0/241EAC0}' from transaction '763'   [io.debezium.connector.postgresql.PostgresOffsetContext]
2024-11-20 17:46:43,812 INFO   Postgres|test_server|0|streaming|postgres  REPLICA IDENTITY for 'post_money.debezium_test' is 'DEFAULT'; UPDATE and DELETE events will contain previous values only for PK columns   [io.debezium.connector.postgresql.PostgresSchema]
2024-11-20 17:46:43,813 INFO   Postgres|test_server|0|streaming|postgres  SignalProcessor started. Scheduling it every 5000ms   [io.debezium.pipeline.signal.SignalProcessor]
2024-11-20 17:46:43,813 INFO   Postgres|test_server|0|streaming|postgres  Creating thread debezium-postgresconnector-test_server-SignalProcessor   [io.debezium.util.Threads]
2024-11-20 17:46:43,813 INFO   Postgres|test_server|0|streaming|postgres  Starting streaming   [io.debezium.pipeline.ChangeEventSourceCoordinator]
2024-11-20 17:46:43,813 INFO   Postgres|test_server|0|streaming|postgres  No previous LSN found in Kafka, streaming from the latest xlogpos or flushed LSN...   [io.debezium.connector.postgresql.PostgresStreamingChangeEventSource]
2024-11-20 17:46:43,813 INFO   Postgres|test_server|0|streaming|postgres  WAL position will not be searched   [io.debezium.connector.postgresql.connection.WalPositionLocator]
2024-11-20 17:46:43,826 INFO   Postgres|test_server|0|streaming|postgres  Obtained valid replication slot ReplicationSlot [active=false, latestFlushedLsn=LSN{0/241EAC0}, catalogXmin=763]   [io.debezium.connector.postgresql.connection.PostgresConnection]
2024-11-20 17:46:43,827 INFO   ||||  Connection gracefully closed   [io.debezium.jdbc.JdbcConnection]
2024-11-20 17:46:43,827 DEBUG  Postgres|test_server|0|streaming|postgres  running 'IDENTIFY_SYSTEM' to validate replication connection   [io.debezium.connector.postgresql.connection.PostgresReplicationConnection]
2024-11-20 17:46:43,828 DEBUG  Postgres|test_server|0|streaming|postgres  received latest xlogpos '0/241EAC0'   [io.debezium.connector.postgresql.connection.PostgresReplicationConnection]
2024-11-20 17:46:43,828 DEBUG  Postgres|test_server|0|streaming|postgres  starting streaming from LSN 'LSN{0/241EAC0}'   [io.debezium.connector.postgresql.connection.PostgresReplicationConnection]
2024-11-20 17:46:43,839 INFO   Postgres|test_server|0|streaming|postgres  Requested thread factory for component PostgresConnector, id = test_server named = keep-alive   [io.debezium.util.Threads]
2024-11-20 17:46:43,839 INFO   Postgres|test_server|0|streaming|postgres  Creating thread debezium-postgresconnector-test_server-keep-alive   [io.debezium.util.Threads]
2024-11-20 17:46:43,866 INFO   Postgres|test_server|0|streaming|postgres  REPLICA IDENTITY for 'post_money.debezium_test' is 'DEFAULT'; UPDATE and DELETE events will contain previous values only for PK columns   [io.debezium.connector.postgresql.PostgresSchema]
2024-11-20 17:46:43,868 INFO   Postgres|test_server|0|streaming|postgres  Processing messages   [io.debezium.connector.postgresql.PostgresStreamingChangeEventSource]
2024-11-20 17:46:43,880 INFO   ||||  Connection gracefully closed   [io.debezium.jdbc.JdbcConnection]
2024-11-20 17:46:44,770 INFO   ||||  Found previous partition offset PostgresPartition [sourcePartition={server=test_server}]: {lsn_proc=37874920, messageType=INSERT, lsn_commit=37874920, lsn=37874920, txId=764, ts_usec=1732121203878501}   [io.debezium.connector.common.BaseSourceTask]
2024-11-20 17:46:44,772 INFO   PostgresMoneyIT|||test|  Stopping the connector   [io.debezium.connector.postgresql.PostgresMoneyIT]
2024-11-20 17:46:44,772 INFO   PostgresMoneyIT|||test|  Stopping the engine   [io.debezium.connector.postgresql.PostgresMoneyIT]
2024-11-20 17:46:44,772 INFO   PostgresMoneyIT|||test|  Engine state has changed from 'POLLING_TASKS' to 'STOPPING'   [io.debezium.embedded.async.AsyncEmbeddedEngine]
2024-11-20 17:46:44,772 INFO   ||||  Stopping down connector   [io.debezium.connector.common.BaseSourceTask]
2024-11-20 17:46:44,772 INFO   PostgresMoneyIT|||engine|  Task interrupted while polling.   [io.debezium.embedded.async.AsyncEmbeddedEngine]
2024-11-20 17:46:44,890 INFO   Postgres|test_server|0|streaming|postgres  Finished streaming   [io.debezium.pipeline.ChangeEventSourceCoordinator]
2024-11-20 17:46:44,890 INFO   Postgres|test_server|0|streaming|postgres  Connected metrics set to 'false'   [io.debezium.pipeline.ChangeEventSourceCoordinator]
2024-11-20 17:46:44,890 INFO   ||||  SignalProcessor stopped   [io.debezium.pipeline.signal.SignalProcessor]
2024-11-20 17:46:44,890 INFO   ||||  Debezium ServiceRegistry stopped.   [io.debezium.service.DefaultServiceRegistry]
2024-11-20 17:46:44,890 DEBUG  ||||  Closing message decoder   [io.debezium.connector.postgresql.connection.PostgresReplicationConnection]
2024-11-20 17:46:44,890 DEBUG  ||||  Closing replication connection   [io.debezium.connector.postgresql.connection.PostgresReplicationConnection]
2024-11-20 17:46:44,891 INFO   ||||  Connection gracefully closed   [io.debezium.jdbc.JdbcConnection]
2024-11-20 17:46:44,904 INFO   ||||  Connection gracefully closed   [io.debezium.jdbc.JdbcConnection]
2024-11-20 17:46:44,905 INFO   ||||  Connection gracefully closed   [io.debezium.jdbc.JdbcConnection]
2024-11-20 17:46:44,905 INFO   ||||  Connection gracefully closed   [io.debezium.jdbc.JdbcConnection]
2024-11-20 17:46:44,905 INFO   PostgresMoneyIT|||test|  Stopped task #1 out of 1 tasks (it took 132 ms to stop the task).   [io.debezium.embedded.async.AsyncEmbeddedEngine]
2024-11-20 17:46:44,905 INFO   PostgresMoneyIT|||engine|  Engine is stopped.   [io.debezium.embedded.async.AsyncEmbeddedEngine]
2024-11-20 17:46:44,905 INFO   PostgresMoneyIT|||engine|  Engine state has changed from 'STOPPING' to 'STOPPED'   [io.debezium.embedded.async.AsyncEmbeddedEngine]
2024-11-20 17:46:44,906 INFO   PostgresMoneyIT|||engine|  Connector 'io.debezium.connector.postgresql.PostgresConnector' completed normally.   [io.debezium.connector.postgresql.PostgresMoneyIT]
16:46:45.021 postgres2024-11-20 05:46:45.021 SST [139] ERROR:  replication slot "debezium" does not exist
2024-11-20 17:46:45,008 INFO   PostgresMoneyIT|||test|  Interrupting the engine   [io.debezium.connector.postgresql.PostgresMoneyIT]
2024-11-20 17:46:45,021 INFO   ||||  Connection gracefully closed   [io.debezium.jdbc.JdbcConnection]
2024-11-20 17:46:45,022 INFO   PostgresMoneyIT|||test|  Stopping the connector   [io.debezium.connector.postgresql.PostgresMoneyIT]
2024-11-20 17:46:45,022 INFO   PostgresMoneyIT|||test|  Test io.debezium.connector.postgresql.PostgresMoneyIT#shouldReceiveChangesForInsertsWithPreciseMode succeeded   [io.debezium.connector.postgresql.PostgresMoneyIT]
16:46:45.021 postgres2024-11-20 05:46:45.021 SST [139] STATEMENT:  SELECT pg_drop_replication_slot('debezium')
[INFO] Tests run: 5, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 8.988 s -- in io.debezium.connector.postgresql.PostgresMoneyIT
[INFO] 
[INFO] Results:
[INFO] 
[INFO] Tests run: 5, Failures: 0, Errors: 0, Skipped: 0
[INFO] 
[INFO] 
[INFO] --- docker:0.43.4:stop (stop) @ debezium-connector-postgres ---
16:46:45.104 postgres2024-11-20 05:46:45.104 SST [1] LOG:  received fast shutdown request
16:46:45.106 postgres2024-11-20 05:46:45.105 SST [1] LOG:  aborting any active transactions
16:46:45.108 postgres2024-11-20 05:46:45.107 SST [1] LOG:  background worker "logical replication launcher" (PID 65) exited with exit code 1
16:46:45.108 postgres2024-11-20 05:46:45.108 SST [60] LOG:  shutting down
16:46:45.110 postgres2024-11-20 05:46:45.109 SST [60] LOG:  checkpoint starting: shutdown immediate
16:46:45.150 postgres2024-11-20 05:46:45.150 SST [60] LOG:  checkpoint complete: wrote 660 buffers (4.0%); 0 WAL file(s) added, 0 removed, 1 recycled; write=0.010 s, sync=0.026 s, total=0.042 s; sync files=95, longest=0.013 s, average=0.001 s; distance=14802 kB, estimate=14802 kB; lsn=0/241EDA0, redo lsn=0/241EDA0
16:46:45.154 postgres2024-11-20 05:46:45.154 SST [1] LOG:  database system is shut down
[INFO] DOCKER> [debezium/postgres-server-test-database:latest]: Stop and removed container da32c37337ed after 0 ms
[INFO] 
[INFO] --- source:3.1.0:jar-no-fork (attach-sources) @ debezium-connector-postgres ---
[INFO] Building jar: /Users/alvar/Projects/3.OpenSourceProjects/debezium/debezium-connector-postgres/target/debezium-connector-postgres-3.0.3-SNAPSHOT-sources.jar
[INFO] 
[INFO] --- checkstyle:3.1.1:checkstyle (check-style) @ debezium-connector-postgres ---
[INFO] Comenzando auditoría...
Auditoría concluida.
[INFO] 
[INFO] --- failsafe:3.1.2:verify (verify) @ debezium-connector-postgres ---
[INFO] 
[INFO] --- revapi:0.11.5:check (default) @ debezium-connector-postgres ---
Downloading from central: https://repo.maven.apache.org/maven2/io/debezium/debezium-connector-postgres/maven-metadata.xml
Downloading from confluent: https://packages.confluent.io/maven/io/debezium/debezium-connector-postgres/maven-metadata.xml
Downloading from ossrh: https://s01.oss.sonatype.org//content/groups/public/io/debezium/debezium-connector-postgres/maven-metadata.xml
Progress (1): 1.4/7.5 kBProgress (1): 2.8/7.5 kBProgress (1): 4.1/7.5 kBProgress (1): 5.5/7.5 kBProgress (1): 6.9/7.5 kBProgress (1): 7.5 kB                        Downloaded from central: https://repo.maven.apache.org/maven2/io/debezium/debezium-connector-postgres/maven-metadata.xml (7.5 kB at 26 kB/s)
Progress (1): 7.6 kB                    Downloaded from ossrh: https://s01.oss.sonatype.org//content/groups/public/io/debezium/debezium-connector-postgres/maven-metadata.xml (7.6 kB at 8.8 kB/s)
[INFO] Comparing [io.debezium:debezium-connector-postgres:jar:3.0.2.Final] against [io.debezium:debezium-connector-postgres:jar:3.0.3-SNAPSHOT] (including their transitive dependencies).
[INFO] API checks completed without failures.
[INFO] ------------------------------------------------------------------------
[INFO] BUILD SUCCESS
[INFO] ------------------------------------------------------------------------
[INFO] Total time:  46.998 s
[INFO] Finished at: 2024-11-20T17:46:54+01:00
[INFO] ------------------------------------------------------------------------
